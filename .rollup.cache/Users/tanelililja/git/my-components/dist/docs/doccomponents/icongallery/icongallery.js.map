{"version":3,"file":"icongallery.js","sourceRoot":"","sources":["../../../../src/docs/doccomponents/icongallery/icongallery.tsx"],"names":[],"mappings":";;AAAA,OAAO,oBAAoB,CAAC;AAC5B,OAAO,EAAC,IAAI,EAAY,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,cAAc,EAAE,WAAW,EAAC,MAAM,8BAA8B,CAAC;AACnH,OAAO,EAAC,QAAQ,EAAE,IAAI,EAAC,MAAM,6BAA6B,CAAC;AAC3D,OAAO,EAAC,MAAM,EAAC,MAAM,uBAAuB,CAAC;AAC7C,OAAO,EAAC,kBAAkB,EAAC,MAAM,sCAAsC,CAAC;AAMxE,MAAM,UAAU,iBAAiB,CAAC,EAAkC;QAAjC,QAAQ,cAAA;IACjC,IAAA,KAAyB,kBAAkB,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAE,eAAe,EAAE,IAAI,EAAC,CAAC,EAAnF,OAAO,aAAA,EAAE,WAAW,iBAA+D,CAAC;IAE3F,OAAO,CACH,MAAC,cAAc,aAAC,MAAM,EAAE,WAAW,iBAC/B,MAAC,MAAM,aAAC,SAAS,EAAC,sBAAsB,EAAC,OAAO,EAAE,OAAO,iBACrD,KAAC,IAAI,IAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC,EAAE,GAAI,EAC3C,KAAC,KAAK,aAAC,IAAI,EAAE,IAAI,CAAC,EAAE,gBAAG,QAAQ,IAAS,KACnC,EACT,KAAC,OAAO,aAAC,MAAM,EAAE,CAAC,EAAE,EAAE,QAAQ,EAAE,QAAQ,CAAC,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,CAAC,KAAK,4BAEhF,KACG,CACpB,CAAC;AACN,CAAC;AAMD,MAAM,UAAU,WAAW,CAAC,EAA6B;QAA5B,SAAS,eAAA;IAClC,OAAO,CACH,uBAAK,SAAS,EAAC,0BAA0B,gBACpC,SAAS,CAAC,GAAG,CAAC,UAAC,QAAQ,IAAK,OAAA,CACzB,KAAC,iBAAiB,IAAC,QAAQ,EAAE,QAAQ,IAAO,QAAQ,CAAI,CAC3D,EAF4B,CAE5B,CAAC,IACA,CACT,CAAC;AACN,CAAC","sourcesContent":["import './icongallery.scss';\nimport {Icon, IconName, IconSize, Label, Tooltip, TooltipTrigger, TooltipType} from '../../../components/index.js';\nimport {Position, Size} from '../../../constants/index.js';\nimport {Button} from 'react-aria-components';\nimport {useCopyToClipboard} from '../../../hooks/usecopytoclipboard.js';\n\ninterface IconGalleryButtonProps {\n    iconName: IconName;\n}\n\nexport function IconGalleryButton({iconName}: IconGalleryButtonProps) {\n    const {onPress, showTooltip} = useCopyToClipboard({text: iconName, tooltipDuration: 3000});\n\n    return (\n        <TooltipTrigger isOpen={showTooltip}>\n            <Button className=\"icon-gallery__button\" onPress={onPress}>\n                <Icon name={iconName} size={IconSize.LG} />\n                <Label size={Size.sm}>{iconName}</Label>\n            </Button>\n            <Tooltip offset={-40} position={Position.Bottom} showArrow={false} type={TooltipType.Plain}>\n                Copied\n            </Tooltip>\n        </TooltipTrigger>\n    );\n}\n\ninterface IconGalleryProps {\n    iconNames: IconName[];\n}\n\nexport function IconGallery({iconNames}: IconGalleryProps) {\n    return (\n        <div className=\"icon-gallery sb-unstyled\">\n            {iconNames.map((iconName) => (\n                <IconGalleryButton iconName={iconName} key={iconName} />\n            ))}\n        </div>\n    );\n}\n"]}