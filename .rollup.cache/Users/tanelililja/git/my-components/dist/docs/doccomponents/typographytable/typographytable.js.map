{"version":3,"file":"typographytable.js","sourceRoot":"","sources":["../../../../src/docs/doccomponents/typographytable/typographytable.tsx"],"names":[],"mappings":";;AAAA,OAAO,EAAC,2BAA2B,EAAE,SAAS,EAAE,iBAAiB,EAAC,MAAM,8BAA8B,CAAC;AACvG,OAAO,EAAC,SAAS,EAAC,MAAM,6BAA6B,CAAC;AAGtD,IAAM,YAAY,GAAG,2BAA2B,EAAkB,CAAC;AAEnE,IAAM,iBAAiB,GAAG;IACtB,YAAY,CAAC,QAAQ,CAAC,OAAO,EAAE;QAC3B,EAAE,EAAE,OAAO;QACX,MAAM,EAAE,OAAO;QACf,IAAI,EAAE,UAAC,KAAK,IAAK,OAAA,CACb,KAAC,iBAAiB,eAAK,KAAK,cACxB,2BAAS,KAAK,CAAC,QAAQ,EAAE,GAAU,IACnB,CACvB,EAJgB,CAIhB;QACD,IAAI,EAAE;YACF,SAAS,EAAE,SAAS,CAAC,KAAK;SAC7B;QACD,aAAa,EAAE,KAAK;KACvB,CAAC;IACF,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE;QAC5B,EAAE,EAAE,QAAQ;QACZ,MAAM,EAAE,cAAc;QACtB,IAAI,EAAE,UAAC,KAAK,IAAK,OAAA,KAAK,CAAC,QAAQ,EAAE,EAAhB,CAAgB;QACjC,IAAI,EAAE;YACF,SAAS,EAAE,SAAS,CAAC,KAAK;YAC1B,WAAW,EAAE;gBACT,KAAK,EAAE,KAAK;aACf;SACJ;QACD,aAAa,EAAE,KAAK;KACvB,CAAC;IACF,YAAY,CAAC,QAAQ,CAAC,OAAO,EAAE;QAC3B,EAAE,EAAE,OAAO;QACX,MAAM,EAAE,OAAO;QACf,IAAI,EAAE,iBAAiB;QACvB,IAAI,EAAE;YACF,SAAS,EAAE,SAAS,CAAC,KAAK;YAC1B,WAAW,EAAE;gBACT,KAAK,EAAE,KAAK;aACf;SACJ;QACD,aAAa,EAAE,KAAK;KACvB,CAAC;CACL,CAAC;AAMF,MAAM,UAAU,eAAe,CAAC,KAA2B;IACvD,OAAO,CACH,uBAAK,SAAS,EAAC,aAAa,EAAC,KAAK,EAAE,EAAC,KAAK,EAAE,4BAA4B,EAAE,MAAM,EAAE,aAAa,EAAC,gBAC5F,KAAC,SAAS,eAAK,KAAK,IAAE,OAAO,EAAE,iBAAiB,IAAI,IAClD,CACT,CAAC;AACN,CAAC","sourcesContent":["import {createDataTableColumnHelper, DataTable, DataTableTextCell} from '../../../components/index.js';\nimport {Alignment} from '../../../constants/index.js';\nimport {TypographyItem} from './typographydata.js';\n\nconst columnHelper = createDataTableColumnHelper<TypographyItem>();\n\nconst typographyColumns = [\n    columnHelper.accessor('token', {\n        id: 'token',\n        header: 'Token',\n        cell: (props) => (\n            <DataTableTextCell {...props}>\n                <strong>{props.getValue()}</strong>\n            </DataTableTextCell>\n        ),\n        meta: {\n            alignment: Alignment.start\n        },\n        enableSorting: false\n    }),\n    columnHelper.accessor('sample', {\n        id: 'sample',\n        header: 'Example text',\n        cell: (props) => props.getValue(),\n        meta: {\n            alignment: Alignment.start,\n            headerStyle: {\n                width: '50%'\n            }\n        },\n        enableSorting: false\n    }),\n    columnHelper.accessor('usage', {\n        id: 'usage',\n        header: 'Usage',\n        cell: DataTableTextCell,\n        meta: {\n            alignment: Alignment.start,\n            headerStyle: {\n                width: '25%'\n            }\n        },\n        enableSorting: false\n    })\n];\n\ninterface TypographyTableProps {\n    data: TypographyItem[];\n}\n\nexport function TypographyTable(props: TypographyTableProps) {\n    return (\n        <div className=\"sb-unstyled\" style={{color: 'var(--neutral-text-strong)', margin: '1rem 0 3rem'}}>\n            <DataTable {...props} columns={typographyColumns} />\n        </div>\n    );\n}\n"]}