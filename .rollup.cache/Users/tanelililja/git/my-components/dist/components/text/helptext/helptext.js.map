{"version":3,"file":"helptext.js","sourceRoot":"","sources":["../../../../src/components/text/helptext/helptext.tsx"],"names":[],"mappings":";;AAAA,OAAO,EAAC,UAAU,EAAC,MAAM,8BAA8B,CAAC;AACxD,OAAO,EAAC,KAAK,EAAC,MAAM,mBAAmB,CAAC;AAExC,OAAO,EAAC,IAAI,EAAE,QAAQ,EAAC,MAAM,0BAA0B,CAAC;AACxD,OAAO,EAAW,SAAS,EAAC,MAAM,2BAA2B,CAAC;AAC9D,OAAO,EAAC,kBAAkB,EAAC,MAAM,mDAAmD,CAAC;AAErF,OAAO,EAAC,IAAI,EAAC,MAAM,uBAAuB,CAAC;AAC3C,OAAO,EAAC,IAAI,EAAC,MAAM,6BAA6B,CAAC;AAEjD,MAAM,CAAN,IAAkB,eAKjB;AALD,WAAkB,eAAe;IAC7B,sCAAmB,CAAA;IACnB,oCAAiB,CAAA;IACjB,sCAAmB,CAAA;IACnB,wCAAqB,CAAA;AACzB,CAAC,EALiB,eAAe,KAAf,eAAe,QAKhC;AAUD,SAAS,YAAY,CAAC,OAAwB,EAAE,WAAwB;IACpE,IAAI,IAAc,EAAE,KAAa,CAAC;IAElC,QAAQ,OAAO,EAAE;QACb,KAAK,eAAe,CAAC,MAAM;YACvB,IAAI,GAAG,SAAS,CAAC,mBAAmB,CAAC;YACrC,KAAK,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC;YAC/B,MAAM;QACV,KAAK,eAAe,CAAC,OAAO;YACxB,IAAI,GAAG,SAAS,CAAC,iBAAiB,CAAC;YACnC,KAAK,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC;YAC/B,MAAM;QACV;YACI,IAAI,GAAG,SAAS,CAAC,UAAU,CAAC;YAC5B,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;YAC5B,MAAM;KACb;IAED,OAAO,EAAC,IAAI,MAAA,EAAE,KAAK,OAAA,EAAC,CAAC;AACzB,CAAC;AAED,MAAM,UAAU,QAAQ,CAAC,EAAqF;QAApF,QAAQ,cAAA,EAAE,SAAS,eAAA,EAAE,EAAE,QAAA,EAAE,QAAQ,cAAA,EAAE,eAAiC,EAAjC,OAAO,mBAAG,eAAe,CAAC,OAAO,KAAA;IAC1F,IAAM,eAAe,GAAG,kBAAkB,EAAE,CAAC;IAC7C,IAAM,OAAO,GAAgB;QACzB,KAAC,KAAK,aAAY,IAAI,EAAE,IAAI,CAAC,EAAE,gBAC1B,QAAQ,KADF,MAAM,CAET;KACX,CAAC;IAEF,IAAI,QAAQ,IAAI,OAAO,KAAK,eAAe,CAAC,MAAM,EAAE;QAC1C,IAAA,KAAgB,YAAY,CAAC,OAAO,EAAE,eAAe,CAAC,EAArD,MAAI,UAAA,EAAE,KAAK,WAA0C,CAAC;QAE7D,OAAO,CAAC,OAAO,CAAC,KAAC,IAAI,IAAC,SAAS,EAAE,KAAK,EAAa,IAAI,EAAE,MAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,EAAE,IAApC,MAAM,CAAkC,CAAC,CAAC;KACzF;IAED,OAAO,CACH,KAAC,IAAI,aAAC,SAAS,EAAE,UAAU,CAAC,+BAAwB,OAAO,CAAE,EAAE,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAC,aAAa,gBAChG,OAAO,IACL,CACV,CAAC;AACN,CAAC","sourcesContent":["import {classNames} from '../../../utils/classnames.js';\nimport {Label} from '../label/label.js';\nimport {ReactNode} from 'react';\nimport {Icon, IconSize} from '../../media/icon/icon.js';\nimport {IconName, iconNames} from '../../media/icon/icons.js';\nimport {useTranslateCommon} from '../../../hooks/translations/usetranslatecommon.js';\nimport {TranslateFn} from '../../../hooks/translations/usetranslatefn.js';\nimport {Text} from 'react-aria-components';\nimport {Size} from '../../../constants/index.js';\n\nexport const enum HelpTextVariant {\n    Neutral = 'neutral',\n    Danger = 'danger',\n    Success = 'success',\n    Disabled = 'disabled'\n}\n\nexport interface HelpTextProps {\n    children: ReactNode;\n    className?: string;\n    id?: string;\n    showIcon?: boolean;\n    variant?: HelpTextVariant;\n}\n\nfunction getIconProps(variant: HelpTextVariant, translateFn: TranslateFn) {\n    let name: IconName, label: string;\n\n    switch (variant) {\n        case HelpTextVariant.Danger:\n            name = iconNames.EmergencyHomeFilled;\n            label = translateFn('warning');\n            break;\n        case HelpTextVariant.Success:\n            name = iconNames.CheckCircleFilled;\n            label = translateFn('success');\n            break;\n        default:\n            name = iconNames.InfoFilled;\n            label = translateFn('info');\n            break;\n    }\n\n    return {name, label};\n}\n\nexport function HelpText({children, className, id, showIcon, variant = HelpTextVariant.Neutral}: HelpTextProps) {\n    const translateCommon = useTranslateCommon();\n    const content: ReactNode[] = [\n        <Label key=\"text\" size={Size.sm}>\n            {children}\n        </Label>\n    ];\n\n    if (showIcon || variant === HelpTextVariant.Danger) {\n        const {name, label} = getIconProps(variant, translateCommon);\n\n        content.unshift(<Icon ariaLabel={label} key=\"icon\" name={name} size={IconSize.SM} />);\n    }\n\n    return (\n        <Text className={classNames(`help-text help-text--${variant}`, className)} id={id} slot=\"description\">\n            {content}\n        </Text>\n    );\n}\n"]}