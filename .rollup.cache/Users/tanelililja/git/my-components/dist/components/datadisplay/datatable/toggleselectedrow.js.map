{"version":3,"file":"toggleselectedrow.js","sourceRoot":"","sources":["../../../../src/components/datadisplay/datatable/toggleselectedrow.ts"],"names":[],"mappings":"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","sourcesContent":["import {isRowSelected, isSubRowSelected, Row, RowData, RowSelectionState, Table} from '@tanstack/react-table';\nimport {isUndefined} from '../../../utils/objecthelper.js';\n\nfunction mutateRowIsSelected<TData extends RowData>(\n    selectedRowIds: Record<string, boolean>,\n    id: string,\n    value: boolean,\n    includeChildren: boolean,\n    table: Table<TData>\n) {\n    const row = table.getRow(id, true);\n\n    if (value) {\n        if (!row.getCanMultiSelect()) {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            Object.keys(selectedRowIds).forEach((key) => delete selectedRowIds[key]);\n        }\n        if (row.getCanSelect()) {\n            selectedRowIds[id] = true;\n        }\n    } else {\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete selectedRowIds[id];\n    }\n\n    if (includeChildren && row.subRows?.length && row.getCanSelectSubRows()) {\n        row.subRows.forEach((subRow) => mutateRowIsSelected(selectedRowIds, subRow.id, value, includeChildren, table));\n    }\n}\n\nfunction syncParentRowSelection<TData extends RowData>(\n    row: Row<TData>,\n    selection: RowSelectionState,\n    table: Table<TData>\n): RowSelectionState {\n    const parentRow = row.getParentRow();\n\n    if (!parentRow) {\n        return selection;\n    }\n\n    const selected = isRowSelected(parentRow, selection);\n    const isAllSubRowsSelected = isSubRowSelected(parentRow, selection, table) === 'all';\n\n    if (isAllSubRowsSelected && !selected) {\n        mutateRowIsSelected(selection, parentRow.id, true, false, table);\n    } else if (!isAllSubRowsSelected && selected) {\n        mutateRowIsSelected(selection, parentRow.id, false, false, table);\n    }\n\n    return syncParentRowSelection(parentRow, selection, table);\n}\n\nexport function toggleSelectedRow<TData extends RowData>(value: boolean, row: Row<TData>, table: Table<TData>) {\n    const canSelect = row.getCanSelect();\n\n    if (!canSelect) {\n        return;\n    }\n\n    if (!table.options.meta?.enableParentRowSelectionSync) {\n        row.toggleSelected(value);\n\n        return;\n    }\n\n    const isSelected = row.getIsSelected();\n\n    table.setRowSelection((old) => {\n        const val = isUndefined(value) ? !isSelected : value;\n\n        if (canSelect && isSelected === val) {\n            return old;\n        }\n\n        const selectedRowIds = {...old};\n\n        mutateRowIsSelected(selectedRowIds, row.id, val, true, table);\n\n        return syncParentRowSelection(row, selectedRowIds, table);\n    });\n}\n"]}