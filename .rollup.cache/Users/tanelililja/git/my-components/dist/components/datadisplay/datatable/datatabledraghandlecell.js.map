{"version":3,"file":"datatabledraghandlecell.js","sourceRoot":"","sources":["../../../../src/components/datadisplay/datatable/datatabledraghandlecell.tsx"],"names":[],"mappings":";;AACA,OAAO,EAAC,WAAW,EAAC,MAAM,mBAAmB,CAAC;AAE9C,OAAO,EAAC,UAAU,EAAC,MAAM,6BAA6B,CAAC;AAMvD,MAAM,UAAU,uBAAuB,CAAgB,EAAuD;QAAtD,GAAG,SAAA,EAAE,GAAG,SAAA;IACtD,IAAA,KAA0B,WAAW,CAAC;QACxC,EAAE,EAAE,GAAG,CAAC,EAAE;KACb,CAAC,EAFK,UAAU,gBAAA,EAAE,SAAS,eAE1B,CAAC;IAEH,OAAO,KAAC,UAAU,eAAK,UAAU,EAAM,SAAS,IAAE,GAAG,EAAE,GAAG,IAAI,CAAC;AACnE,CAAC","sourcesContent":["import {CellContext} from '@tanstack/table-core';\nimport {useSortable} from '@dnd-kit/sortable';\nimport {RefAttributes} from 'react';\nimport {DragHandle} from '../draghandle/draghandle.js';\n\nexport interface DataTableDragHandleCellProps<TData, TValue>\n    extends CellContext<TData, TValue>,\n        RefAttributes<HTMLButtonElement> {}\n\nexport function DataTableDragHandleCell<TData, TValue>({ref, row}: DataTableDragHandleCellProps<TData, TValue>) {\n    const {attributes, listeners} = useSortable({\n        id: row.id\n    });\n\n    return <DragHandle {...attributes} {...listeners} ref={ref} />;\n}\n"]}