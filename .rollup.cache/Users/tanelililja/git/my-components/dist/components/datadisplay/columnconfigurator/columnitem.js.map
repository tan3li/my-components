{"version":3,"file":"columnitem.js","sourceRoot":"","sources":["../../../../src/components/datadisplay/columnconfigurator/columnitem.tsx"],"names":[],"mappings":";;AAAA,OAAO,EAAC,WAAW,EAAC,MAAM,mBAAmB,CAAC;AAC9C,OAAO,EAAC,kBAAkB,EAAC,MAAM,mDAAmD,CAAC;AAErF,OAAO,EAAC,GAAG,EAAC,MAAM,oBAAoB,CAAC;AACvC,OAAO,EAAC,KAAK,EAAC,MAAM,qBAAqB,CAAC;AAC1C,OAAO,EAAC,IAAI,EAAC,MAAM,6BAA6B,CAAC;AACjD,OAAO,EAAC,QAAQ,EAAC,MAAM,uBAAuB,CAAC;AAC/C,OAAO,EAAC,UAAU,EAAC,MAAM,6BAA6B,CAAC;AAiBvD,MAAM,UAAU,UAAU,CAAC,EAAkE;QAAjE,WAAW,iBAAA,EAAE,UAAU,gBAAA,EAAE,IAAI,UAAA,EAAE,gBAAgB,sBAAA;IAChE,IAAA,EAAE,GAAwB,IAAI,GAA5B,EAAE,IAAI,GAAkB,IAAI,KAAtB,EAAE,YAAY,GAAI,IAAI,aAAR,CAAS;IAChC,IAAA,KAAyE,WAAW,CAAC;QACvF,EAAE,IAAA;QACF,QAAQ,EAAE,CAAC,WAAW;KACzB,CAAC,EAHK,SAAS,eAAA,EAAE,UAAU,gBAAA,EAAE,UAAU,gBAAA,EAAE,UAAU,gBAAA,EAAE,UAAU,gBAAA,EAAE,SAAS,eAGzE,CAAC;IACH,IAAM,eAAe,GAAG,kBAAkB,EAAE,CAAC;IAE7C,IAAM,KAAK,GAAkB;QACzB,SAAS,EAAE,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC;QAC5C,UAAU,YAAA;QACV,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B,QAAQ,EAAE,UAAU;KACvB,CAAC;IAEF,OAAO,CACH,wBAAK,SAAS,EAAC,aAAa,EAAC,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,iBACtD,KAAC,UAAU,eAAK,UAAU,EAAM,SAAS,IAAE,QAAQ,EAAE,CAAC,WAAW,IAAI,EACrE,KAAC,QAAQ,kBACO,eAAe,CAAC,MAAM,CAAC,EACnC,UAAU,EAAE,YAAY,KAAK,KAAK,EAClC,UAAU,EAAE,UAAU,EACtB,QAAQ,EAAE,gBAAgB,GAC5B,EACF,KAAC,KAAK,aAAC,SAAS,EAAC,oBAAoB,EAAC,IAAI,EAAE,IAAI,CAAC,EAAE,gBAC/C,2BAAS,IAAI,GAAU,IACnB,KACN,CACT,CAAC;AACN,CAAC","sourcesContent":["import {useSortable} from '@dnd-kit/sortable';\nimport {useTranslateCommon} from '../../../hooks/translations/usetranslatecommon.js';\nimport {CSSProperties} from 'react';\nimport {CSS} from '@dnd-kit/utilities';\nimport {Label} from '../../text/index.js';\nimport {Size} from '../../../constants/index.js';\nimport {Checkbox} from '../../inputs/index.js';\nimport {DragHandle} from '../draghandle/draghandle.js';\n\nexport interface ColumnConfiguratorItem {\n    id: string;\n    name: string;\n    isHidden?: boolean;\n    isSelectable?: boolean;\n    [key: string]: any;\n}\n\nexport interface ColumnItemProps {\n    isDraggable?: boolean;\n    isSelected?: boolean;\n    item: ColumnConfiguratorItem;\n    onSelectedChange?: (isSelected: boolean) => void;\n}\n\nexport function ColumnItem({isDraggable, isSelected, item, onSelectedChange}: ColumnItemProps) {\n    const {id, name, isSelectable} = item;\n    const {transform, transition, setNodeRef, isDragging, attributes, listeners} = useSortable({\n        id,\n        disabled: !isDraggable\n    });\n    const translateCommon = useTranslateCommon();\n\n    const style: CSSProperties = {\n        transform: CSS.Transform.toString(transform),\n        transition,\n        zIndex: isDragging ? 1 : 0,\n        position: 'relative'\n    };\n\n    return (\n        <div className=\"column-item\" ref={setNodeRef} style={style}>\n            <DragHandle {...attributes} {...listeners} disabled={!isDraggable} />\n            <Checkbox\n                aria-label={translateCommon('show')}\n                isDisabled={isSelectable === false}\n                isSelected={isSelected}\n                onChange={onSelectedChange}\n            />\n            <Label className=\"column-item__label\" size={Size.sm}>\n                <strong>{name}</strong>\n            </Label>\n        </div>\n    );\n}\n"]}