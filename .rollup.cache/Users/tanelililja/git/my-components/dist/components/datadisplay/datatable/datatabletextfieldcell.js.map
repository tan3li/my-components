{"version":3,"file":"datatabletextfieldcell.js","sourceRoot":"","sources":["../../../../src/components/datadisplay/datatable/datatabletextfieldcell.tsx"],"names":[],"mappings":";;AACA,OAAO,EAAC,eAAe,EAAuB,MAAM,uBAAuB,CAAC;AAO5E,MAAM,UAAU,sBAAsB,CAA6D,EAMnD;;IAL5C,IAAA,MAAM,YAAA,EACN,QAAQ,cAAA,EACR,GAAG,SAAA,EACH,KAAK,WAAA,EACF,KAAK,cALuF,sCAMlG,CADW;IAER,OAAO,CACH,KAAC,eAAe,eACR,KAAK,IACT,cAAc,EAAE,UAAC,IAAI,gBAAK,OAAA,MAAA,MAAA,KAAK,CAAC,OAAO,CAAC,IAAI,0CAAE,UAAU,mDAAG,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAA,EAAA,EACtF,UAAU,EAAE,MAAA,KAAK,CAAC,UAAU,mCAAI,MAAA,MAAA,KAAK,CAAC,OAAO,CAAC,IAAI,0CAAE,aAAa,mDAAG,GAAG,CAAC,EACxE,KAAK,EAAE,QAAQ,EAAE,CAAC,QAAQ,EAAE,IAC9B,CACL,CAAC;AACN,CAAC","sourcesContent":["import {CellContext} from '@tanstack/table-core';\nimport {InlineTextField, InlineTextFieldProps} from '../../inputs/index.js';\nimport {AnyObject} from '../../../hooks/usechangeparamscallback.js';\n\nexport interface DataTableTextFieldCellProps<TData, TValue, P extends AnyObject>\n    extends CellContext<TData, TValue>,\n        InlineTextFieldProps<P> {}\n\nexport function DataTableTextFieldCell<TData, TValue extends string | number, P extends AnyObject>({\n    column,\n    getValue,\n    row,\n    table,\n    ...props\n}: DataTableTextFieldCellProps<TData, TValue, P>) {\n    return (\n        <InlineTextField\n            {...props}\n            changeCallback={(args) => table.options.meta?.onDataEdit?.(row.index, column.id, args)}\n            isDisabled={props.isDisabled ?? table.options.meta?.isRowDisabled?.(row)}\n            value={getValue().toString()}\n        />\n    );\n}\n"]}