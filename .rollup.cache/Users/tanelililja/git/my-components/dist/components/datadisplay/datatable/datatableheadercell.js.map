{"version":3,"file":"datatableheadercell.js","sourceRoot":"","sources":["../../../../src/components/datadisplay/datatable/datatableheadercell.tsx"],"names":[],"mappings":"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","sourcesContent":["import {classNames} from '../../../utils/classnames.js';\nimport {DataTableCellContent} from './datatablecellcontent.js';\nimport {Header} from '@tanstack/table-core';\nimport {flexRender, RowData} from '@tanstack/react-table';\nimport {HTMLAttributes, ReactNode, RefAttributes} from 'react';\nimport {isString} from '../../../utils/stringhelper.js';\nimport {Label} from '../../text/index.js';\nimport {Alignment, KeyboardEventKey, Size, SortDirection} from '../../../constants/index.js';\nimport {Icon, IconName, iconNames, IconSize} from '../../media/index.js';\nimport {getColumnPinningStyles} from './getcolumnpinningstyles.js';\n\nexport interface DataTableHeaderCellProps<TData>\n    extends HTMLAttributes<HTMLTableCellElement>,\n        RefAttributes<HTMLTableCellElement> {\n    header: Header<TData, unknown>;\n    rowSpan?: number;\n    showContent?: boolean;\n}\n\nexport function DataTableHeaderCell<TData extends RowData>({\n    className,\n    header,\n    rowSpan,\n    showContent = true,\n    ...props\n}: DataTableHeaderCellProps<TData>) {\n    const {column, colSpan} = header;\n    const isSortable = showContent && column.getCanSort();\n    const {alignment = Alignment.start, isEditable, headerStyle} = column.columnDef.meta ?? {};\n    const sortHandler = isSortable ? column.getToggleSortingHandler() : undefined;\n    let content = showContent ? flexRender(column.columnDef.header, header.getContext()) : null,\n        sortIcon: ReactNode = null;\n\n    if (isString(content)) {\n        content = (\n            <Label size={Size.sm}>\n                <strong>{content}</strong>\n            </Label>\n        );\n    }\n\n    if (isSortable) {\n        const sortDirection = column.getIsSorted();\n        let iconName: IconName;\n\n        switch (sortDirection) {\n            case SortDirection.Ascending:\n                iconName = iconNames.ArrowUpward;\n                break;\n            case SortDirection.Descending:\n                iconName = iconNames.ArrowDownward;\n                break;\n            default:\n                iconName = iconNames.UnfoldMore;\n                break;\n        }\n\n        sortIcon = <Icon className=\"data-table__sort-icon\" name={iconName} size={IconSize.MD} />;\n    }\n\n    return (\n        <th\n            {...props}\n            className={classNames('data-table__header-cell', className, {\n                'data-table__header-cell--sortable': isSortable,\n                [`data-table__header-cell--editable-${alignment}`]: isEditable\n            })}\n            colSpan={colSpan}\n            onClick={sortHandler}\n            onKeyDown={\n                sortHandler ?\n                    (e) => {\n                        const key = e.key;\n\n                        if (key === KeyboardEventKey.Enter || key === KeyboardEventKey.Space) {\n                            sortHandler(e);\n                        }\n                    }\n                :   undefined\n            }\n            role=\"columnheader\"\n            rowSpan={rowSpan}\n            scope=\"col\"\n            style={{...getColumnPinningStyles(header.column), ...headerStyle}}\n            tabIndex={isSortable ? 0 : undefined}>\n            <DataTableCellContent alignment={alignment}>\n                {content}\n                {sortIcon}\n            </DataTableCellContent>\n        </th>\n    );\n}\n"]}