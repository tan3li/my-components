{"version":3,"file":"datatableactionbuttoncell.js","sourceRoot":"","sources":["../../../../src/components/datadisplay/datatable/datatableactionbuttoncell.tsx"],"names":[],"mappings":";;AAEA,OAAO,EAAC,UAAU,EAAC,MAAM,8BAA8B,CAAC;AACxD,OAAO,EAAC,MAAM,EAAe,WAAW,EAAE,aAAa,EAA8B,MAAM,uBAAuB,CAAC;AACnH,OAAO,EAAC,IAAI,EAAC,MAAM,6BAA6B,CAAC;AAEjD,OAAO,EAAC,OAAO,EAAgB,cAAc,EAAE,WAAW,EAAC,MAAM,yBAAyB,CAAC;AAC3F,OAAO,EAAC,aAAa,EAAC,MAAM,iCAAiC,CAAC;AAC9D,OAAO,EAAC,eAAe,EAAC,MAAM,mCAAmC,CAAC;AAgBlE,MAAM,UAAU,yBAAyB,CAA+C,EAQ/B;QAPrD,uBAAiD,EAAhC,YAAY,mBAAG,MAAiB,KAAA,EACjD,WAAW,iBAAA,EACX,QAAQ,cAAA,EACR,SAAS,eAAA,EACT,GAAG,SAAA,EACH,4BAA4B,kCAAA,EAC5B,YAAY,kBAAA;IAEZ,OAAO,CACH,wBAAK,SAAS,EAAE,UAAU,CAAC,gCAAgC,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,GAAG,iBAE7E,uBACI,SAAS,EAAC,wCAAwC,EAClD,OAAO,EAAE,4BAA4B,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,gBAClE,QAAQ,IACP,EACN,MAAC,cAAc,aAAC,UAAU,EAAE,CAAC,YAAY,iBACrC,KAAC,YAAY,aACT,SAAS,EAAE,UAAU,CAAC,2BAA2B,EAAE;4BAC/C,oCAAoC,EAAE,aAAa;yBACtD,CAAC,EACF,IAAI,EAAE,IAAI,CAAC,EAAE,EACb,KAAK,EAAE,WAAW,CAAC,OAAO,EAC1B,OAAO,EAAE,aAAa,CAAC,OAAO,IACzB,WAAmB,EAC1B,EACD,YAAY,IAAI,KAAC,OAAO,aAAC,IAAI,EAAE,WAAW,CAAC,KAAK,IAAM,YAAY,EAAI,KAC1D,KACf,CACT,CAAC;AACN,CAAC","sourcesContent":["import {ReactNode, RefAttributes} from 'react';\nimport {CellContext} from '@tanstack/table-core';\nimport {classNames} from '../../../utils/classnames.js';\nimport {Button, ButtonProps, ButtonStyle, ButtonVariant, IconButton, IconButtonProps} from '../../action/index.js';\nimport {Size} from '../../../constants/index.js';\nimport {PartialWithRequired} from '../../../utils/types.js';\nimport {Tooltip, TooltipProps, TooltipTrigger, TooltipType} from '../../feedback/index.js';\nimport {isTouchDevice} from '../../../utils/istouchdevice.js';\nimport {stopPropagation} from '../../../utils/stoppropagation.js';\n\ntype TActionButton = typeof Button | typeof IconButton;\n\nexport interface DataTableActionButtonCellProps<TData, TValue, TButton extends TActionButton>\n    extends CellContext<TData, TValue>,\n        RefAttributes<HTMLDivElement> {\n    buttonComponent?: TButton;\n    buttonProps: TButton extends typeof IconButton ? PartialWithRequired<IconButtonProps, 'aria-label' | 'iconName'>\n    :   PartialWithRequired<ButtonProps, 'children'>;\n    children?: ReactNode;\n    className?: string;\n    stopChildrenClickPropagation?: boolean;\n    tooltipProps?: PartialWithRequired<TooltipProps, 'children'>;\n}\n\nexport function DataTableActionButtonCell<TData, TValue, TButton extends TActionButton>({\n    buttonComponent: ActionButton = Button as TButton,\n    buttonProps,\n    children,\n    className,\n    ref,\n    stopChildrenClickPropagation,\n    tooltipProps\n}: DataTableActionButtonCellProps<TData, TValue, TButton>) {\n    return (\n        <div className={classNames('data-table__action-button-cell', className)} ref={ref}>\n            {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */}\n            <div\n                className=\"data-table__action-button-cell-content\"\n                onClick={stopChildrenClickPropagation ? stopPropagation : undefined}>\n                {children}\n            </div>\n            <TooltipTrigger isDisabled={!tooltipProps}>\n                <ActionButton\n                    className={classNames('data-table__action-button', {\n                        'data-table__action-button--visible': isTouchDevice\n                    })}\n                    size={Size.md}\n                    style={ButtonStyle.Outline}\n                    variant={ButtonVariant.Neutral}\n                    {...(buttonProps as any)}\n                />\n                {tooltipProps && <Tooltip type={TooltipType.Plain} {...tooltipProps} />}\n            </TooltipTrigger>\n        </div>\n    );\n}\n"]}