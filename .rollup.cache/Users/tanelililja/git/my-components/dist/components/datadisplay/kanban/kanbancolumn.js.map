{"version":3,"file":"kanbancolumn.js","sourceRoot":"","sources":["../../../../src/components/datadisplay/kanban/kanbancolumn.tsx"],"names":[],"mappings":"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","sourcesContent":["import {KanbanCardData, KanbanColumnData, KanbanColumnDragData, KanbanElementType} from './types.js';\nimport {CSSProperties, ReactNode, RefAttributes, useId, useRef, useState} from 'react';\nimport {useSortable} from '@dnd-kit/sortable';\nimport {CSS} from '@dnd-kit/utilities';\nimport {mergeRefs} from '@react-aria/utils';\nimport {DragHandle} from '../draghandle/draghandle.js';\nimport {Button, ButtonStyle, ButtonVariant, IconButton, Menu, MenuItem, TriggerElement} from '../../action/index.js';\nimport {iconNames} from '../../media/index.js';\nimport {useTranslateCommon} from '../../../hooks/translations/usetranslatecommon.js';\nimport {Label} from '../../text/index.js';\nimport {Orientation, Position, Size} from '../../../constants/index.js';\nimport {classNames} from '../../../utils/classnames.js';\nimport {Tooltip, TooltipTrigger, TooltipType} from '../../feedback/index.js';\nimport {useIsTextTruncated} from '../../../hooks/useistexttruncated.js';\nimport {KanbanColumnBody} from './kanbancolumnbody.js';\nimport {isNumber} from '../../../utils/objecthelper.js';\nimport {Key, Selection} from 'react-aria-components';\n\nexport interface KanbanCardRenderProps<TCardData extends KanbanCardData> {\n    columnId: string;\n    data: TCardData;\n    isOverlay?: boolean;\n}\n\nexport interface KanbanColumnProps<TCardData extends KanbanCardData, TMenuItem extends MenuItem>\n    extends RefAttributes<HTMLDivElement> {\n    addCardOptions?: {\n        label: string;\n        onAdd?: ({columnId}: {columnId: string}) => void;\n    };\n    data: KanbanColumnData<TCardData, TMenuItem>;\n    isDraggable?: boolean;\n    isCollapsed: boolean;\n    isOverlay?: boolean;\n    onCollapsedChange?: (args: {id: string; isCollapsed: boolean}) => void;\n    onMenuAction?: ({actionKey, columnId}: {actionKey: Key; columnId: string}) => void;\n    onMenuSelectionChange?: ({columnId, selectedKeys}: {columnId: string; selectedKeys: Selection}) => void;\n    onShowMoreCards?: (column: KanbanColumnData<TCardData, TMenuItem>) => Promise<void>;\n    renderCard: (props: KanbanCardRenderProps<TCardData>) => ReactNode;\n    width?: string | number;\n}\n\nexport function KanbanColumn<TCardData extends KanbanCardData, TMenuItem extends MenuItem>({\n    addCardOptions,\n    data,\n    isDraggable,\n    isCollapsed,\n    isOverlay,\n    onCollapsedChange,\n    onMenuAction,\n    onMenuSelectionChange,\n    onShowMoreCards,\n    ref,\n    renderCard,\n    width\n}: KanbanColumnProps<TCardData, TMenuItem>) {\n    const [isLoadingMoreCards, setIsLoadingMoreCards] = useState(false);\n    const {cards, description, hasMoreCards, id, menuProps, title, total} = data;\n    const {active, attributes, isDragging, listeners, setNodeRef, transition, transform} = useSortable({\n        id,\n        data: {\n            column: data,\n            type: KanbanElementType.Column\n        } satisfies KanbanColumnDragData<TCardData, TMenuItem>\n    });\n    const translateCommon = useTranslateCommon();\n    const titleRef = useRef<HTMLSpanElement>(null);\n    const isTruncated = useIsTextTruncated({\n        ref: titleRef,\n        overflowDirection: isCollapsed ? Orientation.vertical : Orientation.horizontal\n    });\n    const titleId = useId();\n\n    const style: CSSProperties = {\n        flex: !isCollapsed && !!width ? `0 0 ${width}${isNumber(width) ? 'px' : ''}` : undefined,\n        transform: CSS.Translate.toString(transform),\n        transition\n    };\n\n    const onShowMore = () => {\n        setIsLoadingMoreCards(true);\n        onShowMoreCards?.(data)?.finally(() => {\n            setIsLoadingMoreCards(false);\n        });\n    };\n\n    return (\n        <div\n            aria-labelledby={titleId}\n            className={classNames('kanban-column', {\n                'kanban-column--overlay': isOverlay,\n                'kanban-column--dragging': isDragging,\n                'kanban-column--collapsed': isCollapsed\n            })}\n            ref={mergeRefs<HTMLDivElement>(setNodeRef, ref)}\n            role=\"region\"\n            style={style}>\n            <div className=\"kanban-column__header\">\n                <div className=\"kanban-column__header-start\">\n                    {isDraggable && <DragHandle {...attributes} {...listeners} />}\n                    <div className=\"kanban-column__title-wrapper\">\n                        <IconButton\n                            aria-expanded={!isCollapsed}\n                            aria-label={translateCommon(isCollapsed ? 'expand' : 'collapse')}\n                            iconName={isCollapsed ? iconNames.ChevronRight : iconNames.ExpandMore}\n                            onPress={() => onCollapsedChange?.({id, isCollapsed: !isCollapsed})}\n                            style={ButtonStyle.Plain}\n                            variant={ButtonVariant.Neutral}\n                        />\n                        <div className=\"kanban-column__title-texts\" id={titleId}>\n                            <TooltipTrigger isDisabled={!isTruncated}>\n                                <TriggerElement\n                                    className=\"kanban-column__title-trigger\"\n                                    excludeFromTabOrder={!isTruncated}>\n                                    <Label className=\"kanban-column__title\" ref={titleRef} size={Size.md}>\n                                        <strong>{title}</strong>\n                                    </Label>\n                                </TriggerElement>\n                                <Tooltip position={isCollapsed ? Position.Right : undefined} type={TooltipType.Plain}>\n                                    {title}\n                                </Tooltip>\n                            </TooltipTrigger>\n                            {!isCollapsed && description && (\n                                <Label className=\"kanban-column__description\" size={Size.sm}>\n                                    {description}\n                                </Label>\n                            )}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"kanban-column__header-end\">\n                    {!isCollapsed && (\n                        <TooltipTrigger>\n                            <TriggerElement className=\"kanban-colum__total\">\n                                <Label size={Size.sm}>{total?.value ?? cards.length}</Label>\n                            </TriggerElement>\n                            <Tooltip type={TooltipType.Plain}>\n                                {total?.tooltipContent ??\n                                    translateCommon('itemsInList', {count: total?.value ?? cards.length})}\n                            </Tooltip>\n                        </TooltipTrigger>\n                    )}\n                    {menuProps && (\n                        <Menu\n                            {...menuProps}\n                            onAction={(actionKey) => onMenuAction?.({actionKey, columnId: id})}\n                            onSelectionChange={(selectedKeys) => onMenuSelectionChange?.({columnId: id, selectedKeys})}\n                            placement=\"bottom right\">\n                            <TooltipTrigger>\n                                <IconButton\n                                    aria-label={translateCommon('moreActions')}\n                                    iconName={iconNames.MoreVert}\n                                    size={Size.sm}\n                                    style={ButtonStyle.Plain}\n                                    variant={ButtonVariant.Neutral}\n                                />\n                                <Tooltip type={TooltipType.Plain}>{translateCommon('moreActions')}</Tooltip>\n                            </TooltipTrigger>\n                        </Menu>\n                    )}\n                </div>\n            </div>\n            {!isCollapsed && (\n                <KanbanColumnBody column={data} isDisabled={active?.data.current?.type === KanbanElementType.Column}>\n                    {cards.map((card) => renderCard({columnId: id, data: card}))}\n                    {hasMoreCards && (\n                        <Button\n                            className=\"kanban-column__show-more-button\"\n                            isLoading={isLoadingMoreCards}\n                            isPending={isLoadingMoreCards}\n                            onPress={onShowMore}\n                            style={ButtonStyle.Plain}\n                            variant={ButtonVariant.Neutral}>\n                            {translateCommon('showMore')}\n                        </Button>\n                    )}\n                </KanbanColumnBody>\n            )}\n            {!isCollapsed && (\n                <div className=\"kanban-column__footer\">\n                    {addCardOptions && (\n                        <Button\n                            onPress={() => addCardOptions?.onAdd?.({columnId: id})}\n                            startIconName={iconNames.Add}\n                            style={ButtonStyle.Plain}\n                            variant={ButtonVariant.Neutral}>\n                            {addCardOptions.label}\n                        </Button>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n}\n"]}