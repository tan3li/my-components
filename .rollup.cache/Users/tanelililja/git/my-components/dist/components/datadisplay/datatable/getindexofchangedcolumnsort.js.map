{"version":3,"file":"getindexofchangedcolumnsort.js","sourceRoot":"","sources":["../../../../src/components/datadisplay/datatable/getindexofchangedcolumnsort.ts"],"names":[],"mappings":"AAEA,MAAM,UAAU,2BAA2B,CAAC,UAAwB,EAAE,UAAwB;IAC1F,IAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;IACjC,IAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;IAEjC,IAAI,MAAM,KAAK,MAAM,EAAE;QACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YACxC,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;gBAC3C,OAAO,CAAC,CAAC;aACZ;SACJ;KACJ;SAAM,IAAI,MAAM,GAAG,MAAM,EAAE;QACxB,OAAO,MAAM,GAAG,CAAC,CAAC;KACrB;IAED,OAAO,CAAC,CAAC,CAAC;AACd,CAAC","sourcesContent":["import {SortingState} from '@tanstack/react-table';\n\nexport function getIndexOfChangedColumnSort(newSorting: SortingState, oldSorting: SortingState): number {\n    const newLen = newSorting.length;\n    const oldLen = oldSorting.length;\n\n    if (newLen === oldLen) {\n        for (let i = 0, len = newLen; i < len; i++) {\n            if (newSorting[i].desc !== oldSorting[i].desc) {\n                return i;\n            }\n        }\n    } else if (newLen > oldLen) {\n        return newLen - 1;\n    }\n\n    return -1;\n}\n"]}