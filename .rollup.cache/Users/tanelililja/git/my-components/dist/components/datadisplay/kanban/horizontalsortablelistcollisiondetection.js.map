{"version":3,"file":"horizontalsortablelistcollisiondetection.js","sourceRoot":"","sources":["../../../../src/components/datadisplay/kanban/horizontalsortablelistcollisiondetection.tsx"],"names":[],"mappings":"AACA,OAAO,MAAM,MAAM,eAAe,CAAC;AAEnC,IAAM,SAAS,GAAG,UAAC,kBAAuC;;IAAK,OAAA,CAAC;QAC5D,EAAE,EAAE,MAAA,kBAAkB,aAAlB,kBAAkB,uBAAlB,kBAAkB,CAAE,EAAE,mCAAI,EAAE;QAChC,KAAK,EAAE,kBAAkB;KAC5B,CAAC,CAAA;CAAA,CAAC;AAEH,IAAM,IAAI,GAAG,GAAG,CAAC;AAEjB,IAAM,yCAAyC,GAAuB,UAAC,EAAoC;QAAnC,mBAAmB,yBAAA,EAAE,aAAa,mBAAA;IACtG,IAAM,4BAA4B,GAAG,MAAM,CAAC,mBAAmB,EAAE,UAAC,CAAC,YAAK,OAAA,MAAA,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,IAAI,CAAC,OAAO,0CAAE,IAAI,CAAA,EAAA,CAAC,CAAC;IAE/F,KAAiC,UAA4B,EAA5B,6DAA4B,EAA5B,0CAA4B,EAA5B,IAA4B,EAAE;QAA1D,IAAM,kBAAkB,qCAAA;QAEd,IAAS,aAAa,GAC7B,kBAAkB,aADW,CACV;QAEvB,IAAI,aAAa,EAAE;YACf,IAAM,iBAAiB,GACnB,CAAC,aAAa,CAAC,IAAI,GAAG,aAAa,CAAC,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC,KAAK,CAAC;YAE1F,IAAI,iBAAiB,GAAG,IAAI,EAAE;gBAC1B,OAAO,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,CAAC;aAC1C;SACJ;KACJ;IAED,OAAO,CAAC,SAAS,CAAC,4BAA4B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC;AAEF,IAAM,0CAA0C,GAAuB,UAAC,EAAoC;QAAnC,mBAAmB,yBAAA,EAAE,aAAa,mBAAA;IACvG,IAAM,6BAA6B,GAAG,MAAM,CAAC,mBAAmB,EAAE,UAAC,CAAC,YAAK,OAAA,MAAA,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,IAAI,CAAC,OAAO,0CAAE,IAAI,CAAA,EAAA,CAAC,CAAC,OAAO,EAAE,CAAC;IAE1G,KAAiC,UAA6B,EAA7B,+DAA6B,EAA7B,2CAA6B,EAA7B,IAA6B,EAAE;QAA3D,IAAM,kBAAkB,sCAAA;QAEd,IAAS,aAAa,GAC7B,kBAAkB,aADW,CACV;QAEvB,IAAI,aAAa,EAAE;YACf,IAAM,iBAAiB,GAAG,CAAC,aAAa,CAAC,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC,KAAK,CAAC;YAE3F,IAAI,iBAAiB,GAAG,IAAI,EAAE;gBAC1B,OAAO,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,CAAC;aAC1C;SACJ;KACJ;IAED,OAAO,CAAC,SAAS,CAAC,6BAA6B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,wCAAwC,GAAuB,UAAC,IAAI;;IAC7E,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,CAAC,MAAA,MAAA,MAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,0CAAE,OAAO,0CAAE,IAAI,mCAAI,CAAC,CAAC,EAAE;QAC1E,OAAO,yCAAyC,CAAC,IAAI,CAAC,CAAC;KAC1D;IAED,OAAO,0CAA0C,CAAC,IAAI,CAAC,CAAC;AAC5D,CAAC,CAAC","sourcesContent":["import {CollisionDetection, DroppableContainer} from '@dnd-kit/core';\nimport sortBy from 'lodash.sortby';\n\nconst collision = (droppableContainer?: DroppableContainer) => ({\n    id: droppableContainer?.id ?? '',\n    value: droppableContainer\n});\n\nconst HALF = 0.5;\n\nconst leftmostDroppableContainerMajorityCovered: CollisionDetection = ({droppableContainers, collisionRect}) => {\n    const ascendingDroppableContainers = sortBy(droppableContainers, (c) => c?.rect.current?.left);\n\n    for (const droppableContainer of ascendingDroppableContainers) {\n        const {\n            rect: {current: droppableRect}\n        } = droppableContainer;\n\n        if (droppableRect) {\n            const coveredPercentage =\n                (droppableRect.left + droppableRect.width - collisionRect.left) / droppableRect.width;\n\n            if (coveredPercentage > HALF) {\n                return [collision(droppableContainer)];\n            }\n        }\n    }\n\n    return [collision(ascendingDroppableContainers[0])];\n};\n\nconst rightmostDroppableContainerMajorityCovered: CollisionDetection = ({droppableContainers, collisionRect}) => {\n    const descendingDroppableContainers = sortBy(droppableContainers, (c) => c?.rect.current?.left).reverse();\n\n    for (const droppableContainer of descendingDroppableContainers) {\n        const {\n            rect: {current: droppableRect}\n        } = droppableContainer;\n\n        if (droppableRect) {\n            const coveredPercentage = (collisionRect.right - droppableRect.left) / droppableRect.width;\n\n            if (coveredPercentage > HALF) {\n                return [collision(droppableContainer)];\n            }\n        }\n    }\n\n    return [collision(descendingDroppableContainers[0])];\n};\n\nexport const horizontalSortableListCollisionDetection: CollisionDetection = (args) => {\n    if (args.collisionRect.left < (args.active.rect.current?.initial?.left ?? 0)) {\n        return leftmostDroppableContainerMajorityCovered(args);\n    }\n\n    return rightmostDroppableContainerMajorityCovered(args);\n};\n"]}