{"version":3,"file":"columnconfigurator.js","sourceRoot":"","sources":["../../../../src/components/datadisplay/columnconfigurator/columnconfigurator.tsx"],"names":[],"mappings":"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","sourcesContent":["import {ReactNode, useCallback, useEffect, useMemo, useState} from 'react';\nimport {DialogTrigger, Popover} from '../../action/popover/index.js';\nimport {Header} from 'react-aria-components';\nimport {Label} from '../../text/index.js';\nimport {Size} from '../../../constants/index.js';\nimport {\n    closestCenter,\n    DndContext,\n    DragEndEvent,\n    KeyboardSensor,\n    MouseSensor,\n    TouchSensor,\n    useSensor,\n    useSensors\n} from '@dnd-kit/core';\nimport {restrictToParentElement, restrictToVerticalAxis} from '@dnd-kit/modifiers';\nimport {arrayMove, SortableContext, sortableKeyboardCoordinates, verticalListSortingStrategy} from '@dnd-kit/sortable';\nimport {safeCall} from '../../../utils/functionhelper.js';\nimport {ColumnConfiguratorItem, ColumnItem} from './columnitem.js';\nimport {useTranslateCommon} from '../../../hooks/translations/usetranslatecommon.js';\nimport {isUndefined} from '../../../utils/objecthelper.js';\nimport {useTranslateRowDragAndDrop} from '../../../hooks/translations/usetranslaterowdraganddrop.js';\nimport {useTranslateColumnDragAndDrop} from '../../../hooks/translations/usetranslatecolumndraganddrop.js';\nimport {Drawer, DrawerProps} from '../../feedback/index.js';\nimport {SearchField} from '../../inputs/index.js';\nimport {debounce} from '../../../utils/debounce.js';\nimport {useFilter} from 'react-aria';\nimport {EmptyState} from '../emptystate/index.js';\nimport {announce} from '@react-aria/live-announcer';\n\nexport const enum ColumnConfiguratorVariant {\n    Basic = 'basic',\n    Extended = 'extended'\n}\n\nexport interface ColumnConfiguratorProps {\n    /**\n     * Actions setup for the extended variant.\n     */\n    actions?: Pick<DrawerProps, 'primaryAction' | 'secondaryAction' | 'destructiveAction'>;\n    /**\n     * Pressable trigger element.\n     */\n    children: ReactNode;\n    /**\n     * List of columns.\n     */\n    columns: ColumnConfiguratorItem[];\n    /**\n     * Array of column ids which define the current order.\n     */\n    columnOrder?: string[];\n    /**\n     * Column visibility by id.\n     */\n    columnVisibility?: Record<string, boolean>;\n    /**\n     * Column order change callback.\n     */\n    onColumnOrderChange?: (columnOrder: string[]) => void;\n    /**\n     * Column visibility change callback.\n     */\n    onColumnVisibilityChange?: (columnVisibility: Record<string, boolean>) => void;\n    /**\n     * Configurator variant.\n     * Basic (default): column items are rendered inside Popover.\n     * Extended: column items are rendered inside Drawer with additional functionality.\n     */\n    variant?: ColumnConfiguratorVariant;\n}\n\nfunction isColumnSelected(id: string, columnVisibility: Record<string, boolean>) {\n    const visibility = columnVisibility[id];\n\n    return isUndefined(visibility) ? true : visibility;\n}\n\nconst SEARCH_DELAY = 300;\n\nexport function ColumnConfigurator({\n    actions,\n    columns,\n    columnOrder: propsColumnOrder,\n    columnVisibility: propsColumnVisibility,\n    children,\n    onColumnOrderChange,\n    onColumnVisibilityChange,\n    variant = ColumnConfiguratorVariant.Basic\n}: ColumnConfiguratorProps) {\n    const [isOpen, setIsOpen] = useState(false);\n    const [columnOrder, setColumnOrder] = useState<string[]>(() => propsColumnOrder ?? columns.map((col) => col.id));\n    const [columnVisibility, setColumnVisibility] = useState<Record<string, boolean>>(propsColumnVisibility ?? {});\n    const columnsById: Record<string, ColumnConfiguratorItem> = useMemo(\n        () =>\n            columns.reduce((map, col) => {\n                map[col.id] = col;\n\n                return map;\n            }, {}),\n        [columns]\n    );\n    const selectedCount = useMemo(\n        () => columnOrder.reduce((count, id) => count + (isColumnSelected(id, columnVisibility) ? 1 : 0), 0),\n        [columnVisibility, columnOrder]\n    );\n    const hiddenCount = useMemo(() => columns.reduce((count, col) => count + (col.isHidden ? 1 : 0), 0), [columns]);\n    const [searchText, setSearchText] = useState('');\n    const filter = useFilter({sensitivity: 'base'});\n    const translateCommon = useTranslateCommon();\n    const translateRowDragAndDrop = useTranslateRowDragAndDrop();\n    const translateColumnDragAndDrop = useTranslateColumnDragAndDrop();\n\n    const onDragEnd = (event: DragEndEvent) => {\n        const {active, over} = event;\n        const activeId = active?.id as string;\n        const overId = over?.id as string;\n\n        if (activeId && overId && activeId !== overId) {\n            const oldIndex = columnOrder.indexOf(activeId);\n            const newIndex = columnOrder.indexOf(overId);\n            const newColumnOrder = arrayMove(columnOrder, oldIndex, newIndex);\n\n            setColumnOrder(newColumnOrder);\n            safeCall(onColumnOrderChange, newColumnOrder);\n        }\n    };\n\n    const onSearch = useCallback(debounce(setSearchText, SEARCH_DELAY), []);\n\n    const sensors = useSensors(\n        useSensor(MouseSensor, {}),\n        useSensor(TouchSensor, {}),\n        useSensor(KeyboardSensor, {\n            coordinateGetter: sortableKeyboardCoordinates\n        })\n    );\n\n    const filteredColumnOrder = useMemo(\n        () =>\n            columnOrder.filter((id) => {\n                const item = columnsById[id];\n\n                return !item.isHidden && (!searchText || filter.contains(item.name, searchText));\n            }),\n        [columnOrder, filter, searchText]\n    );\n    const filteredColumnCount = filteredColumnOrder.length;\n\n    const renderItems = () => {\n        const columnItems = filteredColumnOrder.map((id) => {\n            const item = columnsById[id];\n\n            return (\n                <ColumnItem\n                    isDraggable={!searchText}\n                    isSelected={isColumnSelected(id, columnVisibility)}\n                    item={item}\n                    key={id}\n                    onSelectedChange={(isSelected) => {\n                        const newColumnVisibility = {\n                            ...columnVisibility,\n                            [id]: isSelected\n                        };\n\n                        setColumnVisibility(newColumnVisibility);\n                        safeCall(onColumnVisibilityChange, newColumnVisibility);\n                    }}\n                />\n            );\n        });\n\n        if (columnItems.length === 0) {\n            return (\n                <EmptyState\n                    bodyText={translateCommon('noColumnsFoundInfo')}\n                    title={translateCommon('noColumnsFound')}\n                />\n            );\n        }\n\n        return (\n            <DndContext\n                accessibility={{\n                    announcements: {\n                        onDragStart({active}) {\n                            return translateColumnDragAndDrop('onDragStart', {\n                                title: columnsById[active.id].name\n                            });\n                        },\n                        onDragOver({active, over}) {\n                            if (over) {\n                                return translateColumnDragAndDrop('onDragOver', {\n                                    activeTitle: columnsById[active.id].name,\n                                    overTitle: columnsById[over.id].name\n                                });\n                            }\n\n                            return translateColumnDragAndDrop('onDragOverEnd', {\n                                title: columnsById[active.id].name\n                            });\n                        },\n                        onDragEnd({active, over}) {\n                            if (over) {\n                                return translateColumnDragAndDrop('onDragEndOver', {\n                                    activeTitle: columnsById[active.id].name,\n                                    overTitle: columnsById[over.id].name\n                                });\n                            }\n\n                            return translateColumnDragAndDrop('onDragEnd', {\n                                title: columnsById[active.id].name\n                            });\n                        },\n                        onDragCancel({active}) {\n                            return translateColumnDragAndDrop('onDragCancel', {\n                                title: columnsById[active.id].name\n                            });\n                        }\n                    },\n                    screenReaderInstructions: {\n                        draggable: translateRowDragAndDrop('instructions')\n                    }\n                }}\n                collisionDetection={closestCenter}\n                modifiers={[restrictToParentElement, restrictToVerticalAxis]}\n                onDragEnd={onDragEnd}\n                sensors={sensors}>\n                <SortableContext items={columnOrder} strategy={verticalListSortingStrategy}>\n                    {columnItems}\n                </SortableContext>\n            </DndContext>\n        );\n    };\n\n    useEffect(() => {\n        setColumnOrder(propsColumnOrder ?? columns.map((col) => col.id));\n    }, [propsColumnOrder]);\n\n    useEffect(() => {\n        setColumnVisibility(propsColumnVisibility ?? {});\n    }, [propsColumnVisibility]);\n\n    useEffect(() => {\n        if (isOpen) {\n            announce(translateCommon('columnsAvailable', {count: filteredColumnCount}));\n        }\n    }, [isOpen, filteredColumnCount]);\n\n    const visibilityStatusText = `${translateCommon('showColumns')} (${selectedCount - hiddenCount}/${columnOrder.length - hiddenCount})`;\n    let overlay: ReactNode;\n\n    if (variant === ColumnConfiguratorVariant.Extended) {\n        overlay = (\n            <Drawer\n                {...actions}\n                className=\"column-configurator-drawer\"\n                headerDetails={<Label size={Size.md}>{visibilityStatusText}</Label>}\n                title={translateCommon('customizeColumns')}>\n                <SearchField\n                    aria-label={translateCommon('searchColumnTitle')}\n                    autoFocus={true}\n                    onChange={onSearch}\n                    placeholder={translateCommon('searchColumnTitle')}\n                    size={Size.sm}\n                />\n                <div className=\"column-configurator-drawer__items\">{renderItems()}</div>\n            </Drawer>\n        );\n    } else {\n        overlay = (\n            <Popover className=\"column-configurator-popover\" maxHeight={280} padding={0} placement=\"bottom left\">\n                <div className=\"column-configurator-dialog-content\">\n                    <Header className=\"column-configurator-dialog__header\">\n                        <Label size={Size.md}>\n                            <strong>{visibilityStatusText}</strong>\n                        </Label>\n                    </Header>\n                    <div className=\"column-configurator-dialog__body\">{renderItems()}</div>\n                </div>\n            </Popover>\n        );\n    }\n\n    return (\n        <DialogTrigger onOpenChange={setIsOpen}>\n            {children}\n            {overlay}\n        </DialogTrigger>\n    );\n}\n"]}