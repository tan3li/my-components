{"version":3,"file":"datatableselectcell.js","sourceRoot":"","sources":["../../../../src/components/datadisplay/datatable/datatableselectcell.tsx"],"names":[],"mappings":";;AACA,OAAO,EAAC,YAAY,EAAoC,MAAM,uBAAuB,CAAC;AAOtF,MAAM,UAAU,mBAAmB,CAA0E,EAKzD;;IAJhD,IAAA,MAAM,YAAA,EACN,GAAG,SAAA,EACH,KAAK,WAAA,EACF,KAAK,cAJiG,0BAK5G,CADW;IAER,OAAO,CACH,KAAC,YAAY,eACL,KAAK,IACT,cAAc,EAAE,UAAC,IAAI,gBAAK,OAAA,MAAA,MAAA,KAAK,CAAC,OAAO,CAAC,IAAI,0CAAE,UAAU,mDAAG,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAA,EAAA,EACtF,UAAU,EAAE,MAAA,KAAK,CAAC,UAAU,mCAAI,MAAA,MAAA,KAAK,CAAC,OAAO,CAAC,IAAI,0CAAE,aAAa,mDAAG,GAAG,CAAC,IAC1E,CACL,CAAC;AACN,CAAC","sourcesContent":["import {CellContext} from '@tanstack/table-core';\nimport {InlineSelect, InlineSelectProps, SelectItemBase} from '../../inputs/index.js';\nimport {AnyObject} from '../../../hooks/usechangeparamscallback.js';\n\nexport interface DataTableSelectCellProps<TData, TValue, P extends AnyObject, TItem extends SelectItemBase<TItem>>\n    extends CellContext<TData, TValue>,\n        InlineSelectProps<P, TItem> {}\n\nexport function DataTableSelectCell<TData, TValue, P extends AnyObject, TItem extends SelectItemBase<TItem>>({\n    column,\n    row,\n    table,\n    ...props\n}: DataTableSelectCellProps<TData, TValue, P, TItem>) {\n    return (\n        <InlineSelect\n            {...props}\n            changeCallback={(args) => table.options.meta?.onDataEdit?.(row.index, column.id, args)}\n            isDisabled={props.isDisabled ?? table.options.meta?.isRowDisabled?.(row)}\n        />\n    );\n}\n"]}