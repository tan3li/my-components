{"version":3,"file":"datetile.js","sourceRoot":"","sources":["../../../../src/components/datadisplay/datetile/datetile.tsx"],"names":[],"mappings":";;AAAA,OAAO,EAAC,UAAU,EAAC,MAAM,8BAA8B,CAAC;AACxD,OAAO,EAAC,cAAc,EAAC,MAAM,kCAAkC,CAAC;AAChE,OAAO,EACH,WAAW,EACX,aAAa,EACb,UAAU,EACV,IAAI,EAGJ,cAAc,EAEjB,MAAM,uBAAuB,CAAC;AAC/B,OAAO,EAAC,kBAAkB,EAAC,MAAM,mDAAmD,CAAC;AACrF,OAAO,EAAC,IAAI,EAAY,SAAS,EAAE,QAAQ,EAAC,MAAM,sBAAsB,CAAC;AACzE,OAAO,EAAC,UAAU,EAAC,MAAM,4BAA4B,CAAC;AACtD,OAAO,EAAC,OAAO,IAAI,SAAS,EAAE,SAAS,EAAC,MAAM,yBAAyB,CAAC;AACxE,OAAO,EAAC,KAAK,EAAC,MAAM,qBAAqB,CAAC;AAC1C,OAAO,EAAC,IAAI,EAAC,MAAM,6BAA6B,CAAC;AAEjD,OAAO,EAAC,OAAO,EAAC,MAAM,qBAAqB,CAAC;AAC5C,OAAO,EAAC,OAAO,EAAgB,cAAc,EAAE,WAAW,EAAC,MAAM,yBAAyB,CAAC;AAC3F,OAAO,EAAC,UAAU,EAAE,QAAQ,EAAC,MAAM,kCAAkC,CAAC;AACtE,OAAO,EAAC,qBAAqB,EAAC,MAAM,gCAAgC,CAAC;AACrE,OAAO,EAAC,UAAU,EAAkB,MAAM,iBAAiB,CAAC;AAwE5D,MAAM,UAAU,QAAQ,CAAqD,EAc3C;;QAbnB,cAAc,eAAA,EACzB,SAAS,eAAA,EACT,yBAAyC,EAAzC,iBAAiB,mBAAG,SAAS,CAAC,WAAW,KAAA,EACzC,IAAI,UAAA,EACJ,WAAW,iBAAA,EACX,QAAQ,cAAA,EACR,UAAU,gBAAA,EACV,OAAO,aAAA,EACP,SAAS,eAAA,EACT,OAAO,aAAA,EACW,qBAAqB,sBAAA,EACvC,aAAa,mBAAA,EACb,YAAY,kBAAA;IAEL,IAAA,QAAQ,GAAI,UAAU,EAAE,SAAhB,CAAiB;IAChC,IAAM,WAAW,GAAG,cAAc,EAAE,CAAC;IACrC,IAAM,eAAe,GAAG,kBAAkB,EAAE,CAAC;IAC7C,IAAM,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;IACjC,IAAM,WAAW,GAAG,OAAO,aAAP,OAAO,cAAP,OAAO,GAAI,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IAC3F,IAAM,WAAW,GAAG,CAAC,CAAC,YAAY,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,WAAW,CAAC;IAC/E,IAAI,SAAS,GAAG,EAAE,EACd,cAAc,GAAc,EAAE,CAAC;IAEnC,IAAM,mBAAmB,GAAG;QACxB,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAErC,IAAI,WAAW,EAAE;YACb,IAAI,IAAI,YAAK,eAAe,CAAC,OAAO,CAAC,CAAE,CAAC;SAC3C;QACD,IAAI,UAAU,EAAE;YACZ,IAAI,IAAI,YAAK,eAAe,CAAC,UAAU,CAAC,CAAE,CAAC;SAC9C;QAED,OAAO,IAAI,CAAC;IAChB,CAAC,CAAC;IAEF,wDAAwD;IACxD,IAAM,gBAAgB,GAAG,UAAC,EAA2C;YAA1C,cAAc,oBAAA;QACrC,IAAM,eAAe,GAAoB;YACrC,QAAQ,EAAE,MAAM,CAAC,IAAI,EAAE;YACvB,WAAW,aAAA;YACX,SAAS,EAAE,cAAc;YACzB,aAAa,EAAE,CAAC,CAAC,OAAO;YACxB,UAAU,YAAA;YACV,OAAO,EAAE,WAAW;SACvB,CAAC;QAEF,IAAI,qBAAqB,EAAE;YACvB,OAAO,qBAAqB,CAAC,eAAe,CAAC,CAAC;SACjD;QAED,OAAO,KAAC,UAAU,eAAK,eAAe,EAAI,CAAC;IAC/C,CAAC,CAAC;IAEF,IAAI,UAAU,CAAC,cAAc,CAAC,EAAE;QAC5B,SAAS,GAAG,cAAc,CAAC,mBAAmB,EAAE,CAAC,CAAC;KACrD;SAAM,IAAI,cAAc,EAAE;QACvB,SAAS,GAAG,cAAc,CAAC;KAC9B;SAAM;QACH,SAAS,GAAG,mBAAmB,EAAE,CAAC;KACrC;IAED,IAAI,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,OAAO,EAAE;QACvB,cAAc,GAAG,YAAY,CAAC,OAAO,CAAC;KACzC;SAAM;QACH,IAAM,KAAK,GAAa,EAAE,CAAC;QAE3B,IAAI,WAAW,EAAE;YACb,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC;SAC5C;QACD,IAAI,QAAQ,EAAE;YACV,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC;SACzC;QAED,cAAc,GAAG,qBAAqB,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;KAC1E;IAED,OAAO,CACH,wBACI,SAAS,EAAE,UAAU,CAAC,WAAW,EAAE,SAAS,CAAC,oBAC7B,CAAC,CAAC,WAAW,IAAI,SAAS,sBACxB,CAAC,CAAC,OAAO,IAAI,SAAS,iBAC3B,CAAC,CAAC,QAAQ,IAAI,SAAS,mBACrB,CAAC,CAAC,UAAU,IAAI,SAAS,gBAC5B,WAAW,IAAI,SAAS,iBACpC,MAAC,cAAc,aAAC,UAAU,EAAE,CAAC,cAAc,iBACvC,KAAC,cAAc,2BACC,SAAS,EACrB,SAAS,EAAC,kBAAkB,EAC5B,mBAAmB,EAAE,CAAC,WAAW,EACjC,OAAO,EAAE;4BACL,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;wBAC5B,CAAC,gBACA,UAAC,WAAW,IAAK,OAAA,CACd,8BACI,uBAAK,SAAS,EAAC,sBAAsB,gBAAE,gBAAgB,CAAC,WAAW,CAAC,IAAO,EAC3E,wBAAK,SAAS,EAAC,kBAAkB,iBAC7B,wBAAK,SAAS,EAAC,6BAA6B,iBACxC,KAAC,KAAK,aAAC,SAAS,EAAC,oBAAoB,EAAC,IAAI,EAAE,IAAI,CAAC,EAAE,gBAC9C,qBAAqB,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IACxC,EACP,WAAW,IAAI,CACZ,KAAC,IAAI,IACD,SAAS,EAAC,yBAAyB,EACnC,IAAI,EAAE,iBAAiB,EACvB,IAAI,EAAE,QAAQ,CAAC,EAAE,GACnB,CACL,KACC,EACL,CAAC,CAAC,CAAC,aAAa,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAChC,wBAAK,SAAS,EAAC,+BAA+B,iBACzC,aAAa,IAAI,CACd,KAAC,KAAK,aAAC,SAAS,EAAC,2BAA2B,EAAC,IAAI,EAAE,IAAI,CAAC,EAAE,gBACrD,aAAa,IACV,CACX,EACA,QAAQ,IAAI,CACT,KAAC,IAAI,IACD,SAAS,EAAC,2BAA2B,EACrC,IAAI,EAAE,SAAS,CAAC,IAAI,EACpB,IAAI,EAAE,QAAQ,CAAC,EAAE,GACnB,CACL,KACC,CACT,KACC,IACP,CACN,EAlCiB,CAkCjB,IACY,EACjB,KAAC,OAAO,aAAC,UAAU,EAAE,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,UAAU,EAAE,IAAI,EAAE,MAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,IAAI,mCAAI,WAAW,CAAC,KAAK,gBACvF,cAAc,IACT,KACG,EAChB,SAAS,IAAI,CACV,KAAC,IAAI,eAAK,SAAS,cACf,KAAC,UAAU,kBACK,eAAe,CAAC,SAAS,CAAC,EACtC,QAAQ,EAAE,SAAS,CAAC,QAAQ,EAC5B,KAAK,EAAE,WAAW,CAAC,KAAK,EACxB,OAAO,EAAE,aAAa,CAAC,OAAO,GAChC,IACC,CACV,EACA,UAAU,IAAI,KAAC,OAAO,IAAC,SAAS,EAAC,oBAAoB,EAAC,IAAI,EAAE,IAAI,CAAC,EAAE,GAAI,KACtE,CACT,CAAC;AACN,CAAC","sourcesContent":["import {classNames} from '../../../utils/classnames.js';\nimport {useLanguageDay} from '../../../hooks/uselanguageday.js';\nimport {\n    ButtonStyle,\n    ButtonVariant,\n    IconButton,\n    Menu,\n    MenuItem,\n    MenuProps,\n    TriggerElement,\n    TriggerElementRenderProps\n} from '../../action/index.js';\nimport {useTranslateCommon} from '../../../hooks/translations/usetranslatecommon.js';\nimport {Icon, IconName, iconNames, IconSize} from '../../media/index.js';\nimport {useLocales} from '../../../contexts/index.js';\nimport {isToday as isTodayFn, parseDate} from '@internationalized/date';\nimport {Label} from '../../text/index.js';\nimport {Size} from '../../../constants/index.js';\nimport {AriaRole, ReactNode} from 'react';\nimport {Divider} from '../divider/index.js';\nimport {Tooltip, TooltipProps, TooltipTrigger, TooltipType} from '../../feedback/index.js';\nimport {isFunction, safeCall} from '../../../utils/functionhelper.js';\nimport {capitalizeFirstLetter} from '../../../utils/stringhelper.js';\nimport {DayOfMonth, DayOfMonthProps} from './dayofmonth.js';\n\ntype DateLike = string | number | Date;\n\nexport interface DateTileProps<TMenuItem extends MenuItem, TDate extends DateLike> {\n    /**\n     * Aria-label for the element.\n     * Overrides default aria-label if given as string.\n     * Can be used to extend or override default aria-label if provided as function.\n     */\n    ariaLabel?: string | ((defaultAriaLabel: string) => string);\n    /**\n     * The CSS className for the element.\n     */\n    className?: string;\n    /**\n     * Name of icon to display next to weekday name when isCompleted = true.\n     * Defaults to \"CheckFilled\" if not given.\n     */\n    completedIconName?: IconName;\n    /**\n     * Whether to show completed indicator.\n     */\n    isCompleted?: boolean;\n    /**\n     * Whether to show locked indicator.\n     */\n    isLocked?: boolean;\n    /**\n     * Whether date is selected.\n     */\n    isSelected?: boolean;\n    /**\n     * Whether date is today.\n     * If not given, date and I18nContext timeZone are used to determine it.\n     */\n    isToday?: boolean;\n    /**\n     * Date to display.\n     * Can be given as ISO 8601 date string (YYYY-MM-DD), number of milliseconds or Date object.\n     */\n    date: TDate;\n    /**\n     * Props for menu.\n     */\n    menuProps?: Omit<MenuProps<TMenuItem>, 'children'>;\n    /**\n     * Handler that is called when the press is released over the target.\n     */\n    onPress?: (date: TDate) => void;\n    /**\n     * Custom renderer for day of month.\n     */\n    renderDayOfMonth?: (dayOfMonthProps: DayOfMonthProps) => ReactNode;\n    /**\n     * WAI-ARIA role of the element. Should be given if interactive.\n     */\n    role?: AriaRole;\n    /**\n     * Secondary text to display under weekday name.\n     */\n    secondaryText?: ReactNode;\n    /**\n     * Tooltip props.\n     */\n    tooltipProps?: {\n        headerText?: TooltipProps['headerText'];\n        content: TooltipProps['children'];\n        type?: TooltipProps['type'];\n    };\n}\n\nexport function DateTile<TMenuItem extends MenuItem, TDate extends DateLike>({\n    ariaLabel: propsAriaLabel,\n    className,\n    completedIconName = iconNames.CheckFilled,\n    date,\n    isCompleted,\n    isLocked,\n    isSelected,\n    isToday,\n    menuProps,\n    onPress,\n    renderDayOfMonth: propsRenderDayOfMonth,\n    secondaryText,\n    tooltipProps\n}: DateTileProps<TMenuItem, TDate>) {\n    const {timeZone} = useLocales();\n    const languageDay = useLanguageDay();\n    const translateCommon = useTranslateCommon();\n    const dayObj = languageDay(date);\n    const isDateToday = isToday ?? isTodayFn(parseDate(dayObj.format('YYYY-MM-DD')), timeZone);\n    const isFocusable = !!tooltipProps || !!onPress || !!isLocked || !!isCompleted;\n    let ariaLabel = '',\n        tooltipContent: ReactNode = '';\n\n    const getDefaultAriaLabel = () => {\n        let text = dayObj.format('dddd, LL');\n\n        if (isDateToday) {\n            text += `, ${translateCommon('today')}`;\n        }\n        if (isSelected) {\n            text += `, ${translateCommon('selected')}`;\n        }\n\n        return text;\n    };\n\n    // eslint-disable-next-line sonarjs/function-return-type\n    const renderDayOfMonth = ({isFocusVisible}: TriggerElementRenderProps) => {\n        const dayOfMonthProps: DayOfMonthProps = {\n            children: dayObj.date(),\n            isCompleted,\n            isFocused: isFocusVisible,\n            isInteractive: !!onPress,\n            isSelected,\n            isToday: isDateToday\n        };\n\n        if (propsRenderDayOfMonth) {\n            return propsRenderDayOfMonth(dayOfMonthProps);\n        }\n\n        return <DayOfMonth {...dayOfMonthProps} />;\n    };\n\n    if (isFunction(propsAriaLabel)) {\n        ariaLabel = propsAriaLabel(getDefaultAriaLabel());\n    } else if (propsAriaLabel) {\n        ariaLabel = propsAriaLabel;\n    } else {\n        ariaLabel = getDefaultAriaLabel();\n    }\n\n    if (tooltipProps?.content) {\n        tooltipContent = tooltipProps.content;\n    } else {\n        const parts: string[] = [];\n\n        if (isCompleted) {\n            parts.push(translateCommon('completed'));\n        }\n        if (isLocked) {\n            parts.push(translateCommon('locked'));\n        }\n\n        tooltipContent = capitalizeFirstLetter(parts.join(', ').toLowerCase());\n    }\n\n    return (\n        <div\n            className={classNames('date-tile', className)}\n            data-completed={!!isCompleted || undefined}\n            data-interactive={!!onPress || undefined}\n            data-locked={!!isLocked || undefined}\n            data-selected={!!isSelected || undefined}\n            data-today={isDateToday || undefined}>\n            <TooltipTrigger isDisabled={!tooltipContent}>\n                <TriggerElement\n                    aria-label={ariaLabel}\n                    className=\"date-tile__start\"\n                    excludeFromTabOrder={!isFocusable}\n                    onPress={() => {\n                        safeCall(onPress, date);\n                    }}>\n                    {(renderProps) => (\n                        <>\n                            <div className=\"date-tile__date-area\">{renderDayOfMonth(renderProps)}</div>\n                            <div className=\"date-tile__texts\">\n                                <div className=\"date-tile__primary-text-row\">\n                                    <Label className=\"date-tile__weekday\" size={Size.sm}>\n                                        {capitalizeFirstLetter(dayObj.format('ddd'))}\n                                    </Label>\n                                    {isCompleted && (\n                                        <Icon\n                                            className=\"date-tile__primary-icon\"\n                                            name={completedIconName}\n                                            size={IconSize.SM}\n                                        />\n                                    )}\n                                </div>\n                                {(!!secondaryText || !!isLocked) && (\n                                    <div className=\"date-tile__secondary-text-row\">\n                                        {secondaryText && (\n                                            <Label className=\"date-tile__secondary-text\" size={Size.sm}>\n                                                {secondaryText}\n                                            </Label>\n                                        )}\n                                        {isLocked && (\n                                            <Icon\n                                                className=\"date-tile__secondary-icon\"\n                                                name={iconNames.Lock}\n                                                size={IconSize.XS}\n                                            />\n                                        )}\n                                    </div>\n                                )}\n                            </div>\n                        </>\n                    )}\n                </TriggerElement>\n                <Tooltip headerText={tooltipProps?.headerText} type={tooltipProps?.type ?? TooltipType.Plain}>\n                    {tooltipContent}\n                </Tooltip>\n            </TooltipTrigger>\n            {menuProps && (\n                <Menu {...menuProps}>\n                    <IconButton\n                        aria-label={translateCommon('actions')}\n                        iconName={iconNames.MoreVert}\n                        style={ButtonStyle.Plain}\n                        variant={ButtonVariant.Neutral}\n                    />\n                </Menu>\n            )}\n            {isSelected && <Divider className=\"date-tile__divider\" size={Size.md} />}\n        </div>\n    );\n}\n"]}