{"version":3,"file":"duedatebutton.js","sourceRoot":"","sources":["../../../../src/components/action/duedatebutton/duedatebutton.tsx"],"names":[],"mappings":";;AAAA,OAAO,EAAC,MAAM,EAAe,WAAW,EAAC,MAAM,oBAAoB,CAAC;AACpE,OAAO,EAAC,aAAa,EAAC,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAC,aAAa,EAAC,MAAM,iCAAiC,CAAC;AAC9D,OAAO,EAAC,IAAI,EAAC,MAAM,6BAA6B,CAAC;AACjD,OAAO,EAAC,UAAU,EAAC,MAAM,8BAA8B,CAAC;AACxD,OAAO,EAAC,SAAS,EAAC,MAAM,sBAAsB,CAAC;AAC/C,OAAO,EAAC,OAAO,EAAE,cAAc,EAAE,WAAW,EAAC,MAAM,yBAAyB,CAAC;AAE7E,MAAM,CAAN,IAAkB,oBAIjB;AAJD,WAAkB,oBAAoB;IAClC,2CAAmB,CAAA;IACnB,yCAAiB,CAAA;IACjB,2CAAmB,CAAA;AACvB,CAAC,EAJiB,oBAAoB,KAApB,oBAAoB,QAIrC;AAiBD,MAAM,UAAU,aAAa,CAAC,EAKT;IAJjB,IAAA,IAAI,UAAA,EACJ,cAAc,oBAAA,EACd,eAAsC,EAAtC,OAAO,mBAAG,oBAAoB,CAAC,OAAO,KAAA,EACnC,KAAK,cAJkB,qCAK7B,CADW;IAER,IAAM,UAAU,GAAG,aAAa,EAAE,CAAC;IACnC,IAAM,aAAa,GACf,OAAO,KAAK,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,CAAC,SAAS,CAAC,aAAa,CAAC;IAEtG,OAAO,CACH,MAAC,cAAc,aAAC,UAAU,EAAE,CAAC,cAAc,iBACvC,KAAC,MAAM,eACC,KAAK,kBACG,IAAI,EAChB,SAAS,EAAE,UAAU,CAAC,2CAAoC,OAAO,CAAE,EAAE,KAAK,CAAC,SAAS,CAAC,EACrF,IAAI,EAAE,IAAI,CAAC,EAAE,EACb,aAAa,EAAE,aAAa,EAC5B,KAAK,EAAE,WAAW,CAAC,IAAI,EACvB,OAAO,EAAE,aAAa,CAAC,OAAO,gBAC7B,UAAG,UAAU,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAE,IAC7B,EACT,KAAC,OAAO,aAAC,IAAI,EAAE,WAAW,CAAC,KAAK,gBAAG,cAAc,IAAW,KAC/C,CACpB,CAAC;AACN,CAAC","sourcesContent":["import {Button, ButtonProps, ButtonStyle} from '../button/index.js';\nimport {ButtonVariant} from '../constants/index.js';\nimport {useCultureDay} from '../../../hooks/usecultureday.js';\nimport {Size} from '../../../constants/index.js';\nimport {classNames} from '../../../utils/classnames.js';\nimport {iconNames} from '../../media/index.js';\nimport {Tooltip, TooltipTrigger, TooltipType} from '../../feedback/index.js';\n\nexport const enum DueDateButtonVariant {\n    Neutral = 'neutral',\n    Danger = 'danger',\n    Warning = 'warning'\n}\n\nexport interface DueDateButtonProps extends Omit<ButtonProps, 'children' | 'size' | 'style' | 'variant'> {\n    /**\n     * Date value. Should be provided in ISO 8601 date string format (YYYY-MM-DD).\n     */\n    date: string;\n    /**\n     * Text to display in the tooltip.\n     */\n    tooltipContent?: string;\n    /**\n     * Variant of the button.\n     */\n    variant?: DueDateButtonVariant;\n}\n\nexport function DueDateButton({\n    date,\n    tooltipContent,\n    variant = DueDateButtonVariant.Neutral,\n    ...props\n}: DueDateButtonProps) {\n    const cultureDay = useCultureDay();\n    const startIconName =\n        variant === DueDateButtonVariant.Danger ? iconNames.EmergencyHomeFilled : iconNames.CalendarToday;\n\n    return (\n        <TooltipTrigger isDisabled={!tooltipContent}>\n            <Button\n                {...props}\n                aria-label={date}\n                className={classNames(`due-date-button due-date-button--${variant}`, props.className)}\n                size={Size.sm}\n                startIconName={startIconName}\n                style={ButtonStyle.Fill}\n                variant={ButtonVariant.Neutral}>\n                {`${cultureDay(date).format('l')}`}\n            </Button>\n            <Tooltip type={TooltipType.Plain}>{tooltipContent}</Tooltip>\n        </TooltipTrigger>\n    );\n}\n"]}