{"version":3,"file":"menu.js","sourceRoot":"","sources":["../../../../src/components/action/menu/menu.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n    Key,\n    Menu as ReactAriaMenu,\n    MenuProps as ReactAriaMenuProps,\n    MenuSection,\n    MenuTrigger,\n    Popover,\n    Selection,\n    SubmenuTrigger\n} from 'react-aria-components';\nimport {classNames} from '../../../utils/classnames.js';\nimport {MenuOption, MenuOptionProps} from './menuoption.js';\nimport {Fragment, ReactNode, RefAttributes, useEffect, useImperativeHandle, useRef, useState} from 'react';\nimport {MenuLinkButton} from './menulinkbutton.js';\nimport {Divider} from '../../datadisplay/divider/divider.js';\nimport {Size} from '../../../constants/size.js';\nimport {Label} from '../../text/label/label.js';\nimport {safeCall} from '../../../utils/functionhelper.js';\nimport {iconNames} from '../../media/icon/icons.js';\nimport {isNullOrUndefined} from '../../../utils/objecthelper.js';\nimport {MenuGroupHeader} from './menugroupheader.js';\nimport {Placement} from 'react-aria';\nimport {ButtonRole} from '../button/index.js';\n\nexport const enum SubmenuBehavior {\n    Separate = 'separate',\n    InPlace = 'in-place'\n}\n\nexport const enum SelectionMode {\n    Single = 'single',\n    Multiple = 'multiple'\n}\n\nexport interface MenuItem {\n    id: Key;\n    name: string;\n    props?: MenuOptionProps;\n    children?: MenuItem[];\n    hasSeparator?: boolean;\n    isSubmenuTrigger?: boolean;\n    submenuBehavior?: SubmenuBehavior;\n    selectionMode?: SelectionMode;\n}\n\nexport interface MenuFooterItem {\n    id: Key;\n    name: string;\n    onPress?: () => void;\n    role?: ButtonRole;\n}\n\nexport interface MenuProps<T> extends Omit<ReactAriaMenuProps<T>, 'children' | 'items'>, RefAttributes<HTMLDivElement> {\n    /**\n     * Menu trigger element.\n     */\n    children: ReactNode;\n    /**\n     * Header content.\n     */\n    header?: ReactNode;\n    /**\n     * List of footer items.\n     */\n    footerItems?: MenuFooterItem[];\n    /**\n     * List of menu items.\n     */\n    items: MenuItem[];\n    /**\n     * Minimum width for the menu in pixels.\n     */\n    minWidth?: number;\n    /**\n     * Handler that is called when open state changes.\n     */\n    onOpenChange?: (isOpen: boolean) => void;\n    /**\n     * Placement of the menu in relation to its trigger element.\n     */\n    placement?: Placement;\n}\n\nfunction findItem(items?: MenuItem[], key?: Key | null): MenuItem | undefined {\n    if (!items || isNullOrUndefined(key)) {\n        return undefined;\n    }\n\n    for (let i = 0, len = items.length; i < len; i++) {\n        const item = items[i];\n\n        if (item.id === key) {\n            return item;\n        }\n\n        if (item.children) {\n            const childItem = findItem(item.children, key);\n\n            if (childItem) {\n                return childItem;\n            }\n        }\n    }\n\n    return undefined;\n}\n\nexport function Menu<T extends MenuItem>({\n    className,\n    children,\n    footerItems,\n    header,\n    minWidth,\n    onOpenChange: propsOnOpenChange,\n    placement,\n    ref,\n    ...props\n}: MenuProps<T>) {\n    const selectedKeysFromProps = props.selectedKeys;\n    const [selectedKeys, setSelectedKeys] = useState<Selection>(new Set(selectedKeysFromProps));\n    const [isOpen, setIsOpen] = useState(false);\n    const skipCloseRef = useRef(false);\n    const menuRef = useRef<HTMLDivElement>(null);\n    const [activeSubMenuItem, setActiveSubMenuItem] = useState<MenuItem | null>(null);\n    const itemsToRender =\n        activeSubMenuItem ? [{...activeSubMenuItem, children: undefined}, ...activeSubMenuItem.children!] : props.items;\n\n    useImperativeHandle(ref, () => menuRef.current!, []);\n\n    const onAction = (key: Key) => {\n        const item = findItem(props.items, key);\n\n        if (!item) {\n            return;\n        }\n        if (item.props?.isReadOnly) {\n            skipCloseRef.current = true;\n\n            return;\n        }\n\n        if (item.isSubmenuTrigger) {\n            skipCloseRef.current = item.selectionMode !== SelectionMode.Multiple || activeSubMenuItem === null;\n            setActiveSubMenuItem(activeSubMenuItem ? null : item);\n        } else {\n            safeCall(props.onAction, key);\n        }\n    };\n\n    const onOpenChange = (isMenuOpen: boolean) => {\n        if (!isMenuOpen && skipCloseRef.current) {\n            skipCloseRef.current = false;\n\n            return;\n        }\n\n        setIsOpen(isMenuOpen);\n        propsOnOpenChange?.(isMenuOpen);\n\n        if (!isMenuOpen) {\n            setActiveSubMenuItem(null);\n        }\n    };\n\n    const onSelectionChange = (keys: Selection) => {\n        if (activeSubMenuItem && keys instanceof Set && keys.has(activeSubMenuItem.id)) {\n            return;\n        }\n        setSelectedKeys(keys);\n        safeCall(props.onSelectionChange, keys);\n    };\n\n    useEffect(() => {\n        setSelectedKeys(new Set(selectedKeysFromProps));\n    }, [selectedKeysFromProps]);\n\n    const renderItem = (item: MenuItem) => {\n        const {\n            id,\n            props: itemProps,\n            name,\n            children: itemChildren,\n            hasSeparator,\n            isSubmenuTrigger,\n            submenuBehavior = SubmenuBehavior.Separate,\n            selectionMode\n        } = item;\n\n        if (itemChildren) {\n            if (isSubmenuTrigger) {\n                if (submenuBehavior === SubmenuBehavior.InPlace) {\n                    return (\n                        <Fragment key={id}>\n                            <MenuOption\n                                {...itemProps}\n                                id={id}\n                                key={id}\n                                label={itemProps?.label ?? name}\n                                rightIconName={iconNames.ArrowRightFilled}\n                                textValue={itemProps?.textValue ?? name}\n                            />\n                            {hasSeparator && <Divider size={Size.sm} />}\n                        </Fragment>\n                    );\n                }\n\n                return (\n                    <Fragment key={id}>\n                        <SubmenuTrigger>\n                            <MenuOption\n                                {...itemProps}\n                                key={id}\n                                label={itemProps?.label ?? name}\n                                textValue={itemProps?.textValue ?? name}\n                            />\n                            <Popover className=\"menu-popover\">\n                                <div className=\"menu-popover__content\">\n                                    <ReactAriaMenu\n                                        className={classNames('menu', className)}\n                                        onAction={onAction}\n                                        onSelectionChange={onSelectionChange}\n                                        selectedKeys={selectedKeys}\n                                        selectionMode={selectionMode}>\n                                        {itemChildren.map(renderItem)}\n                                    </ReactAriaMenu>\n                                </div>\n                            </Popover>\n                        </SubmenuTrigger>\n                        {hasSeparator && <Divider size={Size.sm} />}\n                    </Fragment>\n                );\n            }\n\n            return (\n                <Fragment key={id}>\n                    <MenuSection className=\"menu-section\">\n                        <MenuGroupHeader>{name}</MenuGroupHeader>\n                        {itemChildren.map(renderItem)}\n                    </MenuSection>\n                    {hasSeparator && <Divider size={Size.sm} />}\n                </Fragment>\n            );\n        }\n\n        return (\n            <Fragment key={id}>\n                <MenuOption\n                    {...itemProps}\n                    className={classNames(itemProps?.className, {'menu-item--back': isSubmenuTrigger})}\n                    id={id}\n                    key={id}\n                    label={itemProps?.label ?? name}\n                    leftIconName={isSubmenuTrigger ? iconNames.ArrowLeftFilled : itemProps?.leftIconName}\n                    textValue={itemProps?.textValue ?? name}\n                />\n                {hasSeparator && <Divider size={Size.sm} />}\n            </Fragment>\n        );\n    };\n\n    return (\n        <MenuTrigger isOpen={isOpen} onOpenChange={onOpenChange}>\n            {children}\n            <Popover className=\"menu-popover\" placement={placement}>\n                <div className=\"menu-popover__content\">\n                    {header && (\n                        <div className=\"menu-header\">\n                            <Label size={Size.md}>\n                                <strong>{header}</strong>\n                            </Label>\n                        </div>\n                    )}\n                    <ReactAriaMenu\n                        {...props}\n                        className={classNames('menu', className)}\n                        onAction={onAction}\n                        onSelectionChange={onSelectionChange}\n                        ref={menuRef}\n                        selectedKeys={selectedKeys}\n                        selectionMode={activeSubMenuItem?.selectionMode ?? props.selectionMode}\n                        style={{minWidth: minWidth ? `${minWidth}px` : undefined}}>\n                        {itemsToRender.map(renderItem)}\n                    </ReactAriaMenu>\n                    {footerItems && footerItems.length > 0 && (\n                        <>\n                            <Divider size={Size.sm} />\n                            <div\n                                className=\"menu-footer\"\n                                onBlur={() => {\n                                    if (menuRef.current) {\n                                        menuRef.current.tabIndex = -1;\n                                    }\n                                }}\n                                onFocus={() => {\n                                    if (menuRef.current) {\n                                        menuRef.current.tabIndex = 0;\n                                    }\n                                }}>\n                                {footerItems.map((footerItem) => (\n                                    <MenuLinkButton\n                                        key={footerItem.id}\n                                        onPress={footerItem.onPress}\n                                        role={footerItem.role}>\n                                        {footerItem.name}\n                                    </MenuLinkButton>\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n            </Popover>\n        </MenuTrigger>\n    );\n}\n"]}