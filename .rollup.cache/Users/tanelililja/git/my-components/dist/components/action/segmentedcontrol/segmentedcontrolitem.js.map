{"version":3,"file":"segmentedcontrolitem.js","sourceRoot":"","sources":["../../../../src/components/action/segmentedcontrol/segmentedcontrolitem.tsx"],"names":[],"mappings":";;AAAA,OAAO,EAAC,MAAM,EAAc,MAAM,uBAAuB,CAAC;AAC1D,OAAO,EAAC,KAAK,EAAC,MAAM,YAAY,CAAC;AACjC,OAAO,EAAC,IAAI,EAAC,MAAM,oBAAoB,CAAC;AAExC,OAAO,EAAC,IAAI,EAAW,MAAM,aAAa,CAAC;AAC3C,OAAO,EAAC,OAAO,EAAE,cAAc,EAAE,WAAW,EAAC,MAAM,gBAAgB,CAAC;AAOpE,MAAM,UAAU,oBAAoB,CAAC,EAA2D;IAA1D,IAAA,KAAK,WAAA,EAAE,aAAa,mBAAA,EAAK,KAAK,cAA/B,0BAAgC,CAAD;IAChE,IAAM,aAAa,GAAG,CAClB,MAAC,MAAM,eAAK,KAAK,IAAE,SAAS,EAAC,wBAAwB,iBAChD,aAAa,IAAI,KAAC,IAAI,IAAC,SAAS,EAAC,8BAA8B,EAAC,IAAI,EAAE,aAAa,GAAI,EACvF,KAAK,IAAI,CACN,KAAC,KAAK,aAAC,SAAS,EAAC,+BAA+B,EAAC,IAAI,EAAE,IAAI,CAAC,EAAE,gBACzD,KAAK,IACF,CACX,KACI,CACZ,CAAC;IAEF,IAAI,KAAK,EAAE;QACP,OAAO,aAAa,CAAC;KACxB;IAED,OAAO,CACH,MAAC,cAAc,eACV,aAAa,EACd,KAAC,OAAO,aAAC,IAAI,EAAE,WAAW,CAAC,KAAK,gBAAG,KAAK,CAAC,YAAY,CAAC,IAAW,IACpD,CACpB,CAAC;AACN,CAAC","sourcesContent":["import {Button, ButtonProps} from 'react-aria-components';\nimport {Label} from '../../text';\nimport {Size} from '../../../constants';\nimport {ReactNode} from 'react';\nimport {Icon, IconName} from '../../media';\nimport {Tooltip, TooltipTrigger, TooltipType} from '../../feedback';\n\ninterface SegmentedControlItemProps extends ButtonProps {\n    label?: ReactNode;\n    startIconName?: IconName;\n}\n\nexport function SegmentedControlItem({label, startIconName, ...props}: SegmentedControlItemProps) {\n    const buttonElement = (\n        <Button {...props} className=\"segmented-control-item\">\n            {startIconName && <Icon className=\"segmented-control-item__icon\" name={startIconName} />}\n            {label && (\n                <Label className=\"segmented-control-item__label\" size={Size.md}>\n                    {label}\n                </Label>\n            )}\n        </Button>\n    );\n\n    if (label) {\n        return buttonElement;\n    }\n\n    return (\n        <TooltipTrigger>\n            {buttonElement}\n            <Tooltip type={TooltipType.Plain}>{props['aria-label']}</Tooltip>\n        </TooltipTrigger>\n    );\n}\n"]}