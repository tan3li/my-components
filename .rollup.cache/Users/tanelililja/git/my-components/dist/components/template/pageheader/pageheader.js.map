{"version":3,"file":"pageheader.js","sourceRoot":"","sources":["../../../../src/components/template/pageheader/pageheader.tsx"],"names":[],"mappings":";;AAAA,OAAO,EAAC,MAAM,EAAE,WAAW,EAAE,aAAa,EAAC,MAAM,uBAAuB,CAAC;AACzE,OAAO,EAAC,kBAAkB,EAAC,MAAM,mDAAmD,CAAC;AACrF,OAAO,EAAC,IAAI,EAAC,MAAM,6BAA6B,CAAC;AACjD,OAAO,EAAC,IAAI,EAAY,SAAS,EAAE,QAAQ,EAAC,MAAM,sBAAsB,CAAC;AAEzE,OAAO,EAAC,OAAO,EAAC,MAAM,qBAAqB,CAAC;AAC5C,OAAO,EAAiB,WAAW,EAAC,MAAM,2BAA2B,CAAC;AACtE,OAAO,EAAC,UAAU,EAAC,MAAM,8BAA8B,CAAC;AACxD,OAAO,EAAC,kBAAkB,EAAC,MAAM,+CAA+C,CAAC;AAsDjF,MAAM,UAAU,UAAU,CAAC,EAcT;QAbd,KAAK,WAAA,EACL,OAAO,aAAA,EACP,eAAe,qBAAA,EACf,SAAS,eAAA,EACT,OAAO,aAAA,EACP,QAAQ,cAAA,EACR,UAAU,gBAAA,EACV,KAAK,WAAA,EACL,WAAW,iBAAA,EACX,GAAG,SAAA,EACH,cAAc,oBAAA,EACd,KAAK,WAAA,EACL,KAAK,WAAA;IAEL,IAAM,eAAe,GAAG,kBAAkB,EAAE,CAAC;IAC7C,IAAM,cAAc,GAAG,eAAe,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC;IACrE,IAAM,UAAU,GAAG,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;IAEjD,IAAI,UAAU,EAAE;QACZ,OAAO,CACH,KAAC,kBAAkB,IACf,cAAc,EAAE,cAAc,EAC9B,UAAU,EAAE,UAAU,EACtB,OAAO,EAAE,CAAC,CAAC,QAAQ,EACnB,KAAK,EAAE,KAAK,GACd,CACL,CAAC;KACL;IAED,OAAO,CACH,wBAAK,SAAS,EAAE,UAAU,CAAC,aAAa,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,iBACvE,cAAc,IAAI,CACf,KAAC,MAAM,aACH,OAAO,EAAE,WAAW,EACpB,IAAI,EAAE,IAAI,CAAC,EAAE,EACb,aAAa,EAAE,SAAS,CAAC,SAAS,EAClC,KAAK,EAAE,WAAW,CAAC,OAAO,EAC1B,OAAO,EAAE,aAAa,CAAC,OAAO,gBAC7B,eAAe,CAAC,MAAM,CAAC,IACnB,CACZ,EACD,wBAAK,SAAS,EAAC,sBAAsB,iBAChC,cAAc,IAAI,KAAC,WAAW,IAAC,SAAS,EAAC,0BAA0B,EAAC,KAAK,EAAE,eAAe,GAAI,EAC/F,wBAAK,SAAS,EAAC,mBAAmB,iBAC9B,wBAAK,SAAS,EAAC,oBAAoB,iBAC9B,QAAQ,IAAI,CACT,KAAC,IAAI,IACD,SAAS,EAAC,mBAAmB,EAC7B,IAAI,EAAE,QAAQ,EACd,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,GAC7C,CACL,EACD,KAAC,OAAO,aAAC,SAAS,EAAC,yBAAyB,EAAC,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,gBACrF,KAAK,IACA,EACT,KAAK,KACJ,EACL,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,uBAAK,SAAS,EAAC,2BAA2B,gBAAE,OAAO,IAAO,KAC1F,EACL,UAAU,IAAI,uBAAK,SAAS,EAAC,sBAAsB,gBAAE,OAAO,IAAO,KAClE,KACJ,CACT,CAAC;AACN,CAAC","sourcesContent":["import {Button, ButtonStyle, ButtonVariant} from '../../action/index.js';\nimport {useTranslateCommon} from '../../../hooks/translations/usetranslatecommon.js';\nimport {Size} from '../../../constants/index.js';\nimport {Icon, IconName, iconNames, IconSize} from '../../media/index.js';\nimport {CSSProperties, ReactNode, RefAttributes} from 'react';\nimport {Heading} from '../../text/index.js';\nimport {BreadcrumbItem, Breadcrumbs} from '../../navigation/index.js';\nimport {classNames} from '../../../utils/classnames.js';\nimport {SkeletonPageHeader} from '../../feedback/skeleton/skeletonpageheader.js';\n\nexport interface PageHeaderProps extends RefAttributes<HTMLDivElement> {\n    /**\n     * Badge element to display next to the title.\n     */\n    badge?: ReactNode;\n    /**\n     * Array of button elements to display next to the title.\n     */\n    buttons?: ReactNode[];\n    /**\n     * Breadcrumb items to show above title.\n     * Last/current item will be hidden as title prop is interpreted as a replacement for it.\n     */\n    breadcrumbItems?: BreadcrumbItem[];\n    /**\n     * CSS class name for the element.\n     */\n    className?: string;\n    /**\n     * Array of detail elements to display below title.\n     */\n    details?: ReactNode[];\n    /**\n     * Icon name for the title.\n     */\n    iconName?: IconName;\n    /**\n     * Whether to show skeleton instead of an actual element.\n     */\n    isSkeleton?: boolean;\n    /**\n     * Level of the header. Affects the size of the icon and title text.\n     */\n    level: number;\n    /**\n     * Handler that is called when Back-button is pressed.\n     */\n    onBackPress?: () => void;\n    /**\n     * Whether Back-button should be visible.\n     */\n    showBackButton?: boolean;\n    /**\n     * CSS styles for the element.\n     */\n    style?: CSSProperties;\n    /**\n     * Title text.\n     */\n    title: string;\n}\n\nexport function PageHeader({\n    badge,\n    buttons,\n    breadcrumbItems,\n    className,\n    details,\n    iconName,\n    isSkeleton,\n    level,\n    onBackPress,\n    ref,\n    showBackButton,\n    style,\n    title\n}: PageHeaderProps) {\n    const translateCommon = useTranslateCommon();\n    const hasBreadcrumbs = breadcrumbItems && breadcrumbItems.length > 0;\n    const hasDetails = details && details.length > 0;\n\n    if (isSkeleton) {\n        return (\n            <SkeletonPageHeader\n                hasBreadcrumbs={hasBreadcrumbs}\n                hasDetails={hasDetails}\n                hasIcon={!!iconName}\n                level={level}\n            />\n        );\n    }\n\n    return (\n        <div className={classNames('page-header', className)} ref={ref} style={style}>\n            {showBackButton && (\n                <Button\n                    onPress={onBackPress}\n                    size={Size.sm}\n                    startIconName={iconNames.ArrowBack}\n                    style={ButtonStyle.Outline}\n                    variant={ButtonVariant.Neutral}>\n                    {translateCommon('back')}\n                </Button>\n            )}\n            <div className=\"page-header__content\">\n                {hasBreadcrumbs && <Breadcrumbs className=\"page-header__breadcrumbs\" items={breadcrumbItems} />}\n                <div className=\"page-header__head\">\n                    <div className=\"page-header__title\">\n                        {iconName && (\n                            <Icon\n                                className=\"page-header__icon\"\n                                name={iconName}\n                                size={level > 1 ? IconSize.LG : IconSize.XL}\n                            />\n                        )}\n                        <Heading className=\"page-header__title-text\" level={1} size={level > 1 ? Size.sm : Size.md}>\n                            {title}\n                        </Heading>\n                        {badge}\n                    </div>\n                    {buttons && buttons.length > 0 && <div className=\"page-header__button-group\">{buttons}</div>}\n                </div>\n                {hasDetails && <div className=\"page-header__details\">{details}</div>}\n            </div>\n        </div>\n    );\n}\n"]}