{"version":3,"file":"chart.js","sourceRoot":"","sources":["../../../../src/components/datavisualization/chart/chart.tsx"],"names":[],"mappings":"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","sourcesContent":["import Highcharts from 'highcharts';\nimport 'highcharts/modules/accessibility';\nimport {HighchartsReact} from 'highcharts-react-official';\nimport {CSSProperties, useMemo} from 'react';\nimport {classNames} from '../../../utils/classnames.js';\nimport {ChartProps} from './chartprops.js';\nimport {getChartOptions} from './getchartoptions.js';\nimport {useLocales} from '../../../contexts/index.js';\nimport {useTranslateChart} from '../../../hooks/translations/usetranslatechart.js';\nimport {ChartType} from './charttype.js';\nimport {formatChartValue} from './formatchartvalue.js';\n\ndeclare module 'highcharts' {\n    interface Chart {\n        _totalLabel?: Highcharts.SVGElement;\n    }\n}\n\n// Global options\nHighcharts.setOptions({\n    chart: {\n        colorCount: 21, // match with CSS\n        events: {\n            render() {\n                const chartType = this.options.chart?.type;\n\n                if (chartType === ChartType.Donut) {\n                    const series = this.series[0];\n                    const total = series.data.reduce((sum, seriesItem) => sum + (seriesItem.y ?? 0), 0);\n                    const totalText = formatChartValue(this.tooltip.options, total);\n\n                    this._totalLabel ??= this.renderer\n                        .label(totalText, 0)\n                        .css({\n                            textAnchor: 'middle'\n                        })\n                        .addClass('chart-total-label')\n                        .add();\n\n                    const x = series.center[0] + this.plotLeft;\n                    const y = series.center[1] + this.plotTop - (this._totalLabel.attr('height') as number) / 2;\n\n                    this._totalLabel.attr({\n                        text: totalText,\n                        x,\n                        y\n                    });\n                }\n            }\n        },\n        styledMode: true // positioning related styling must still be handled in TS\n    },\n    credits: {\n        enabled: false\n    },\n    legend: {\n        align: 'right',\n        verticalAlign: 'top'\n    },\n    plotOptions: {\n        series: {\n            showInLegend: true\n        }\n    },\n    title: {\n        text: undefined\n    },\n    tooltip: {\n        className: 'chart-tooltip-container',\n        formatter(tooltip) {\n            const formattedValue = formatChartValue(tooltip.options, this.y);\n\n            return `\n                <div class=\"chart-tooltip\">\n                    <div class=\"chart-tooltip__line\">${this.key}</div>\n                    <div class=\"chart-tooltip__line\">\n                        <svg class=\"chart-tooltip__legend-symbol\"><rect/></svg>\n                        ${this.series.name}: <span class=\"chart-tooltip__value\"><b>${formattedValue}</b></span>\n                    </div>\n                </div>\n            `;\n        },\n        outside: true,\n        padding: 0,\n        shadow: false,\n        useHTML: true\n    }\n});\n\nexport function Chart(props: ChartProps) {\n    const {aspectRatio, className, containerProps, fullHeight, options: propsOptions, size, ...otherProps} = props;\n    const {cultureLocale} = useLocales();\n    const translateChart = useTranslateChart();\n    const options = useMemo(() => {\n        const chartOptions = getChartOptions({\n            options: propsOptions,\n            locale: cultureLocale,\n            size,\n            translateChartFn: translateChart\n        });\n\n        // Lang options don't change dynamically without calling setOptions().\n        Highcharts.setOptions({lang: chartOptions.lang});\n\n        return chartOptions;\n    }, [propsOptions, size, cultureLocale, translateChart]);\n    const style: CSSProperties = {};\n\n    if (!options?.chart?.height) {\n        if (aspectRatio) {\n            style.aspectRatio = aspectRatio;\n        } else if (fullHeight) {\n            style.height = '100%';\n        }\n    }\n\n    return (\n        <HighchartsReact\n            {...otherProps}\n            containerProps={{\n                // HC styled mode forces light/dark theme based on user system preference.\n                // We have only light theme for now so must include \"highcharts-light\" CSS class.\n                className: classNames('chart-container highcharts-light', className),\n                ...containerProps,\n                style: {\n                    ...containerProps?.style,\n                    ...style\n                }\n            }}\n            highcharts={Highcharts}\n            // Must re-draw chart for certain property changes to take effect\n            key={`${cultureLocale};${size ?? ''}`}\n            options={options}\n        />\n    );\n}\n"]}