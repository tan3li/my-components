{"version":3,"file":"getchartoptions.js","sourceRoot":"","sources":["../../../../src/components/datavisualization/chart/getchartoptions.ts"],"names":[],"mappings":"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","sourcesContent":["import {ChartSize} from './chartprops.js';\nimport Highcharts from 'highcharts';\nimport {parsePixelValue} from '../../../utils/cssunithelper.js';\nimport {getChartTokenValues} from './getcharttokenvalues.js';\nimport {LocaleCode} from '../../../contexts/index.js';\nimport {TranslateFn} from '../../../hooks/translations/usetranslatefn.js';\nimport {ChartType} from './charttype.js';\nimport {Size} from '../../../constants/index.js';\nimport {chartMinWidth} from './chartminwidth.js';\nimport merge from 'lodash.merge';\n\nconst PIE_SERIES_DATA_MAX_LEN = 10;\n\nfunction getSizeRelatedOptions(size: ChartSize): Highcharts.Options {\n    const commonOptions: Highcharts.Options = {\n        chart: {\n            className: `chart chart--${size}`\n        }\n    };\n\n    if (size === Size.xxs) {\n        return {\n            ...commonOptions,\n            legend: {\n                enabled: false\n            },\n            plotOptions: {\n                series: {\n                    dataLabels: {\n                        enabled: false\n                    }\n                }\n            },\n            xAxis: {\n                labels: {\n                    enabled: false\n                },\n                title: {\n                    text: null\n                }\n            },\n            yAxis: {\n                labels: {\n                    enabled: false\n                },\n                title: {\n                    text: null\n                }\n            }\n        };\n    }\n\n    const {seriesLabelFontSize, seriesLabelGap, legendGap, verticalGap, axisLabelGap, barRadius} =\n        getChartTokenValues(size);\n\n    return {\n        ...commonOptions,\n        legend: {\n            enabled: true,\n            itemDistance: parsePixelValue(legendGap),\n            margin: parsePixelValue(verticalGap),\n            symbolPadding: parsePixelValue(seriesLabelGap, seriesLabelFontSize)\n        },\n        plotOptions: {\n            column: {\n                borderRadius: parsePixelValue(barRadius)\n            }\n        },\n        xAxis: {\n            labels: {\n                enabled: true\n            },\n            title: {\n                margin: parsePixelValue(verticalGap)\n            }\n        },\n        yAxis: {\n            labels: {\n                enabled: true\n            },\n            title: {\n                margin: parsePixelValue(axisLabelGap)\n            }\n        }\n    };\n}\n\nexport function getChartBaseOptions({\n    locale,\n    options,\n    translateChartFn\n}: {\n    locale: LocaleCode;\n    options?: Highcharts.Options;\n    translateChartFn: TranslateFn;\n}): Highcharts.Options {\n    let out: Highcharts.Options = {\n        lang: {\n            accessibility: {\n                axis: {\n                    rangeFromTo: translateChartFn('rangeFromTo'),\n                    xAxisDescriptionSingular: translateChartFn('xAxisDescriptionSingular'),\n                    yAxisDescriptionSingular: translateChartFn('yAxisDescriptionSingular')\n                },\n                chartTypes: {\n                    barMultiple: translateChartFn('type.barMultiple'),\n                    barSingle: translateChartFn('type.barSingle'),\n                    columnMultiple: translateChartFn('type.barMultiple'),\n                    columnSingle: translateChartFn('type.barSingle'),\n                    defaultMultiple: translateChartFn('type.defaultMultiple'),\n                    defaultSingle: translateChartFn('type.defaultSingle'),\n                    emptyChart: translateChartFn('type.emptyChart'),\n                    lineMultiple: translateChartFn('type.lineMultiple'),\n                    lineSingle: translateChartFn('type.lineSingle'),\n                    pieMultiple: translateChartFn('type.pieMultiple'),\n                    pieSingle: translateChartFn('type.pieSingle')\n                },\n                chartContainerLabel: translateChartFn('chartContainerLabel'),\n                defaultChartTitle: translateChartFn('defaultChartTitle'),\n                legend: {\n                    legendItem: translateChartFn('legendItem'),\n                    legendLabelNoTitle: translateChartFn('legendLabelNoTitle')\n                },\n                screenReaderSection: {\n                    endOfChartMarker: translateChartFn('endOfChartMarker')\n                },\n                series: {\n                    nullPointValue: translateChartFn('nullPointValue'),\n                    summary: {\n                        bar: translateChartFn('seriesSummary.bar'),\n                        barCombination: translateChartFn('seriesSummary.barCombination'),\n                        column: translateChartFn('seriesSummary.bar'),\n                        columnCombination: translateChartFn('seriesSummary.barCombination'),\n                        default: translateChartFn('default'),\n                        defaultCombination: translateChartFn('default'),\n                        line: translateChartFn('seriesSummary.line'),\n                        lineCombination: translateChartFn('seriesSummary.lineCombination'),\n                        pie: translateChartFn('seriesSummary.pie'),\n                        pieCombination: translateChartFn('seriesSummary.pieCombination')\n                    }\n                },\n                svgContainerLabel: translateChartFn('svgContainerLabel'),\n                zoom: {\n                    resetZoomButton: translateChartFn('resetZoom')\n                }\n            },\n            locale,\n            resetZoom: translateChartFn('resetZoom'),\n            resetZoomTitle: translateChartFn('resetZoom')\n        }\n    };\n    const {series} = options ?? {};\n\n    if (series && series.length > 0) {\n        const firstSeries = series[0];\n\n        if (firstSeries.type === ChartType.Pie) {\n            out = {\n                ...out,\n                legend: {\n                    align: 'center',\n                    verticalAlign: 'bottom'\n                }\n            };\n        }\n    }\n\n    return out;\n}\n\nexport function getChartForcedOptions({options, size}: {options?: Highcharts.Options; size?: ChartSize}) {\n    const {series} = options ?? {};\n    let out: Highcharts.Options = {};\n\n    if (size) {\n        out = merge(out, getSizeRelatedOptions(size));\n    } else {\n        const sizes: ChartSize[] = [Size.xxs, Size.xs, Size.sm, Size.md, Size.lg];\n\n        out = merge(out, {\n            responsive: {\n                rules: sizes.map((chartSize) => ({\n                    condition: {minWidth: chartMinWidth[chartSize]},\n                    chartOptions: getSizeRelatedOptions(chartSize)\n                }))\n            }\n        } satisfies Highcharts.Options);\n    }\n\n    if (series && series.length > 0) {\n        const firstSeries = series[0];\n\n        if (\n            firstSeries.type === ChartType.Pie &&\n            firstSeries.data &&\n            firstSeries.data.length > PIE_SERIES_DATA_MAX_LEN\n        ) {\n            // Don't show data labels to avoid label connector line rendering issue.\n            out = merge(out, {\n                plotOptions: {\n                    pie: {\n                        dataLabels: {\n                            enabled: false\n                        }\n                    }\n                }\n            } satisfies Highcharts.Options);\n        }\n    }\n\n    return out;\n}\n\nexport function getChartOptions({\n    locale,\n    options,\n    size,\n    translateChartFn\n}: {\n    locale: LocaleCode;\n    options?: Highcharts.Options;\n    size?: ChartSize;\n    translateChartFn: TranslateFn;\n}) {\n    const baseOptions = getChartBaseOptions({locale, options, translateChartFn});\n    const forcedOptions = getChartForcedOptions({options, size});\n\n    return merge(baseOptions, options, forcedOptions);\n}\n"]}