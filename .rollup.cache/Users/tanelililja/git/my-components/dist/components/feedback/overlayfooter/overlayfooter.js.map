{"version":3,"file":"overlayfooter.js","sourceRoot":"","sources":["../../../../src/components/feedback/overlayfooter/overlayfooter.tsx"],"names":[],"mappings":";;AAAA,OAAO,EAAC,UAAU,EAAC,MAAM,8BAA8B,CAAC;AACxD,OAAO,EAAC,UAAU,EAAC,MAAM,uCAAuC,CAAC;AACjE,OAAO,EAAC,MAAM,EAAE,WAAW,EAAC,MAAM,+BAA+B,CAAC;AAClE,OAAO,EAAC,aAAa,EAAC,MAAM,yCAAyC,CAAC;AAEtE,OAAO,EAAC,IAAI,EAAC,MAAM,4BAA4B,CAAC;AAChD,OAAO,EAAC,QAAQ,EAAC,MAAM,kCAAkC,CAAC;AAyB1D,MAAM,UAAU,aAAa,CAAC,EAOT;;QANjB,SAAS,eAAA,EACT,aAAa,mBAAA,EACb,iBAAiB,uBAAA,EACjB,aAAa,mBAAA,EACb,GAAG,SAAA,EACH,eAAe,qBAAA;IAEf,IAAI,iBAAwC,CAAC;IAE7C,IAAI,iBAAiB,EAAE;QACnB,IAAI,iBAAiB,CAAC,QAAQ,EAAE;YAC5B,iBAAiB,GAAG,CAChB,KAAC,UAAU,kBACK,iBAAiB,CAAC,KAAK,EACnC,SAAS,EAAE,iBAAiB,CAAC,SAAS,EACtC,QAAQ,EAAE,iBAAiB,CAAC,QAAQ,EACpC,UAAU,EAAE,iBAAiB,CAAC,UAAU,EACxC,SAAS,EAAE,iBAAiB,CAAC,SAAS,EACtC,OAAO,EAAE,cAAM,OAAA,QAAQ,CAAC,iBAAiB,aAAjB,iBAAiB,uBAAjB,iBAAiB,CAAE,OAAO,EAAE,aAAa,CAAC,EAAnD,CAAmD,EAClE,IAAI,EAAE,IAAI,CAAC,EAAE,EACb,KAAK,EAAE,WAAW,CAAC,KAAK,EACxB,OAAO,EAAE,MAAA,iBAAiB,CAAC,OAAO,mCAAI,aAAa,CAAC,MAAM,GAC5D,CACL,CAAC;SACL;aAAM;YACH,iBAAiB,GAAG,CAChB,KAAC,MAAM,aACH,SAAS,EAAE,iBAAiB,CAAC,SAAS,EACtC,UAAU,EAAE,iBAAiB,CAAC,UAAU,EACxC,SAAS,EAAE,iBAAiB,CAAC,SAAS,EACtC,OAAO,EAAE,cAAM,OAAA,QAAQ,CAAC,iBAAiB,aAAjB,iBAAiB,uBAAjB,iBAAiB,CAAE,OAAO,EAAE,aAAa,CAAC,EAAnD,CAAmD,EAClE,IAAI,EAAE,IAAI,CAAC,EAAE,EACb,KAAK,EAAE,WAAW,CAAC,KAAK,EACxB,OAAO,EAAE,MAAA,iBAAiB,CAAC,OAAO,mCAAI,aAAa,CAAC,MAAM,gBACzD,iBAAiB,CAAC,KAAK,IACnB,CACZ,CAAC;SACL;KACJ;IAED,OAAO,CACH,wBAAK,SAAS,EAAE,UAAU,CAAC,gBAAgB,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,GAAG,iBAC5D,iBAAiB,EAClB,wBAAK,SAAS,EAAC,yBAAyB,iBACnC,eAAe,IAAI,CAChB,KAAC,MAAM,aACH,SAAS,EAAE,eAAe,CAAC,SAAS,EACpC,UAAU,EAAE,eAAe,CAAC,UAAU,EACtC,SAAS,EAAE,eAAe,CAAC,SAAS,EACpC,OAAO,EAAE,cAAM,OAAA,QAAQ,CAAC,eAAe,aAAf,eAAe,uBAAf,eAAe,CAAE,OAAO,EAAE,aAAa,CAAC,EAAjD,CAAiD,EAChE,IAAI,EAAE,IAAI,CAAC,EAAE,EACb,KAAK,EAAE,MAAA,eAAe,CAAC,KAAK,mCAAI,WAAW,CAAC,OAAO,EACnD,OAAO,EAAE,MAAA,eAAe,CAAC,OAAO,mCAAI,aAAa,CAAC,OAAO,gBACxD,eAAe,CAAC,KAAK,IACjB,CACZ,EACA,aAAa,IAAI,CACd,KAAC,MAAM,aACH,SAAS,EAAE,aAAa,CAAC,SAAS,EAClC,UAAU,EAAE,aAAa,CAAC,UAAU,EACpC,SAAS,EAAE,aAAa,CAAC,SAAS,EAClC,OAAO,EAAE,cAAM,OAAA,QAAQ,CAAC,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,OAAO,EAAE,aAAa,CAAC,EAA/C,CAA+C,EAC9D,IAAI,EAAE,IAAI,CAAC,EAAE,EACb,KAAK,EAAE,MAAA,aAAa,CAAC,KAAK,mCAAI,WAAW,CAAC,IAAI,EAC9C,OAAO,EAAE,MAAA,aAAa,CAAC,OAAO,mCAAI,aAAa,CAAC,MAAM,gBACrD,aAAa,CAAC,KAAK,IACf,CACZ,KACC,KACJ,CACT,CAAC;AACN,CAAC","sourcesContent":["import {classNames} from '../../../utils/classnames.js';\nimport {IconButton} from '../../action/iconbutton/iconbutton.js';\nimport {Button, ButtonStyle} from '../../action/button/button.js';\nimport {ButtonVariant} from '../../action/constants/buttonvariant.js';\nimport {IconName} from '../../media/icon/icons.js';\nimport {Size} from '../../../constants/size.js';\nimport {safeCall} from '../../../utils/functionhelper.js';\nimport {ReactNode, RefAttributes} from 'react';\n\nexport interface OverlayFooterAction {\n    autoFocus?: boolean;\n    isDisabled?: boolean;\n    isLoading?: boolean;\n    label: string;\n    onPress: (closeCallback: () => void) => void;\n    style?: ButtonStyle;\n    variant?: ButtonVariant;\n}\n\nexport interface OverlayFooterIconAction extends OverlayFooterAction {\n    iconName?: IconName;\n}\n\nexport interface OverlayFooterProps extends RefAttributes<HTMLDivElement> {\n    className?: string;\n    closeCallback: () => void;\n    destructiveAction?: OverlayFooterIconAction;\n    primaryAction?: OverlayFooterAction;\n    secondaryAction?: OverlayFooterAction;\n}\n\nexport function OverlayFooter({\n    className,\n    closeCallback,\n    destructiveAction,\n    primaryAction,\n    ref,\n    secondaryAction\n}: OverlayFooterProps) {\n    let destructiveButton: ReactNode | undefined;\n\n    if (destructiveAction) {\n        if (destructiveAction.iconName) {\n            destructiveButton = (\n                <IconButton\n                    aria-label={destructiveAction.label}\n                    autoFocus={destructiveAction.autoFocus}\n                    iconName={destructiveAction.iconName}\n                    isDisabled={destructiveAction.isDisabled}\n                    isLoading={destructiveAction.isLoading}\n                    onPress={() => safeCall(destructiveAction?.onPress, closeCallback)}\n                    size={Size.lg}\n                    style={ButtonStyle.Plain}\n                    variant={destructiveAction.variant ?? ButtonVariant.Danger}\n                />\n            );\n        } else {\n            destructiveButton = (\n                <Button\n                    autoFocus={destructiveAction.autoFocus}\n                    isDisabled={destructiveAction.isDisabled}\n                    isLoading={destructiveAction.isLoading}\n                    onPress={() => safeCall(destructiveAction?.onPress, closeCallback)}\n                    size={Size.lg}\n                    style={ButtonStyle.Plain}\n                    variant={destructiveAction.variant ?? ButtonVariant.Danger}>\n                    {destructiveAction.label}\n                </Button>\n            );\n        }\n    }\n\n    return (\n        <div className={classNames('overlay-footer', className)} ref={ref}>\n            {destructiveButton}\n            <div className=\"overlay-footer__actions\">\n                {secondaryAction && (\n                    <Button\n                        autoFocus={secondaryAction.autoFocus}\n                        isDisabled={secondaryAction.isDisabled}\n                        isLoading={secondaryAction.isLoading}\n                        onPress={() => safeCall(secondaryAction?.onPress, closeCallback)}\n                        size={Size.lg}\n                        style={secondaryAction.style ?? ButtonStyle.Outline}\n                        variant={secondaryAction.variant ?? ButtonVariant.Neutral}>\n                        {secondaryAction.label}\n                    </Button>\n                )}\n                {primaryAction && (\n                    <Button\n                        autoFocus={primaryAction.autoFocus}\n                        isDisabled={primaryAction.isDisabled}\n                        isLoading={primaryAction.isLoading}\n                        onPress={() => safeCall(primaryAction?.onPress, closeCallback)}\n                        size={Size.lg}\n                        style={primaryAction.style ?? ButtonStyle.Fill}\n                        variant={primaryAction.variant ?? ButtonVariant.Accent}>\n                        {primaryAction.label}\n                    </Button>\n                )}\n            </div>\n        </div>\n    );\n}\n"]}