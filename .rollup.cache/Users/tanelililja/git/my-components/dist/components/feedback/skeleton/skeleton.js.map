{"version":3,"file":"skeleton.js","sourceRoot":"","sources":["../../../../src/components/feedback/skeleton/skeleton.tsx"],"names":[],"mappings":";;AACA,OAAO,EAAC,UAAU,EAAC,MAAM,8BAA8B,CAAC;AAExD,MAAM,CAAN,IAAkB,aAGjB;AAHD,WAAkB,aAAa;IAC3B,kCAAiB,CAAA;IACjB,wCAAuB,CAAA;AAC3B,CAAC,EAHiB,aAAa,KAAb,aAAa,QAG9B;AAiCD,MAAM,UAAU,QAAQ,CAAC,EAQT;IAPZ,IAAe,UAAU,oBAAA,EACzB,SAAS,eAAA,EACT,MAAM,YAAA,EACN,aAA+B,EAA/B,KAAK,mBAAG,aAAa,CAAC,SAAS,KAAA,EAC/B,KAAK,WAAA,EACL,KAAK,WAAA,EACF,KAAK,cAPa,iEAQxB,CADW;IAER,OAAO,CACH,yBACQ,KAAK,mBACI,UAAU,KAAK,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,EACpD,SAAS,EAAE,UAAU,CAAC,6BAAsB,KAAK,CAAE,EAAE,SAAS,CAAC,EAC/D,KAAK,wBAAM,KAAK,KAAE,MAAM,QAAA,EAAE,KAAK,OAAA,OACjC,CACL,CAAC;AACN,CAAC","sourcesContent":["import {CSSProperties, RefAttributes} from 'react';\nimport {classNames} from '../../../utils/classnames.js';\n\nexport const enum SkeletonShape {\n    Circle = 'circle',\n    Rectangle = 'rectangle'\n}\n\nexport interface SkeletonProps extends RefAttributes<HTMLDivElement> {\n    /**\n     * ARIA hidden attribute.\n     */\n    ['aria-hidden']?: boolean;\n    /**\n     * CSS class name for the element.\n     */\n    className?: string;\n    /**\n     * Height of the element.\n     */\n    height?: CSSProperties['height'];\n    /**\n     * Unique id for the element.\n     */\n    id?: string;\n    /**\n     * Shape of the element.\n     */\n    shape?: SkeletonShape;\n    /**\n     * CSS styles for the element.\n     */\n    style?: CSSProperties;\n    /**\n     * Width of the element.\n     */\n    width?: CSSProperties['width'];\n}\n\nexport function Skeleton({\n    'aria-hidden': ariaHidden,\n    className,\n    height,\n    shape = SkeletonShape.Rectangle,\n    style,\n    width,\n    ...props\n}: SkeletonProps) {\n    return (\n        <div\n            {...props}\n            aria-hidden={ariaHidden === false ? undefined : true}\n            className={classNames(`skeleton skeleton--${shape}`, className)}\n            style={{...style, height, width}}\n        />\n    );\n}\n"]}