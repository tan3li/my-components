{"version":3,"file":"tooltip.js","sourceRoot":"","sources":["../../../../src/components/feedback/tooltip/tooltip.tsx"],"names":[],"mappings":";;AAAA,OAAO,EACH,YAAY,IAAI,qBAAqB,EACrC,OAAO,IAAI,gBAAgB,EAE9B,MAAM,uBAAuB,CAAC;AAC/B,OAAO,EAAC,UAAU,EAAC,MAAM,8BAA8B,CAAC;AACxD,OAAO,EAAC,QAAQ,EAAC,MAAM,iCAAiC,CAAC;AACzD,OAAO,EAAC,IAAI,EAAC,MAAM,4BAA4B,CAAC;AAGhD,OAAO,EAAC,IAAI,EAAE,QAAQ,EAAC,MAAM,0BAA0B,CAAC;AACxD,OAAO,EAAC,KAAK,EAAC,MAAM,2BAA2B,CAAC;AAChD,OAAO,EAAC,QAAQ,EAAC,MAAM,gCAAgC,CAAC;AACxD,OAAO,EAAC,eAAe,EAAC,MAAM,6BAA6B,CAAC;AAE5D,IAAM,iBAAiB,GAAG,GAAG,CAAC;AAE9B,MAAM,CAAN,IAAkB,WAGjB;AAHD,WAAkB,WAAW;IACzB,4BAAa,CAAA;IACb,8BAAe,CAAA;AACnB,CAAC,EAHiB,WAAW,KAAX,WAAW,QAG5B;AAqCD,MAAM,UAAU,OAAO,CAAC,EAWT;IAVX,IAAA,QAAQ,cAAA,EACR,SAAS,eAAA,EACT,mBAAiC,EAAjC,WAAW,mBAAG,eAAe,CAAC,GAAG,KAAA,EACjC,cAAc,oBAAA,EACd,UAAU,gBAAA,EACV,gBAA4B,EAA5B,QAAQ,mBAAG,iBAAiB,KAAA,EAC5B,gBAAuB,EAAvB,QAAQ,mBAAG,QAAQ,CAAC,GAAG,KAAA,EACvB,iBAAgB,EAAhB,SAAS,mBAAG,IAAI,KAAA,EAChB,IAAI,UAAA,EACD,KAAK,cAVY,qHAWvB,CADW;IAER,OAAO,CACH,MAAC,gBAAgB,eACT,KAAK,IACT,SAAS,EAAE,UAAU,CAAC,2BAAoB,IAAI,CAAE,EAAE,SAAS,CAAC,EAC5D,SAAS,EAAE,QAAQ,EACnB,KAAK,EAAE,EAAC,QAAQ,UAAA,EAAC,iBAChB,IAAI,KAAK,MAAM,IAAI,CAChB,wBAAK,SAAS,EAAC,iBAAiB,iBAC5B,KAAC,KAAK,aAAC,SAAS,EAAC,sBAAsB,EAAC,IAAI,EAAE,IAAI,CAAC,EAAE,gBACjD,2BAAS,UAAU,GAAU,IACzB,EACP,cAAc,IAAI,CACf,KAAC,IAAI,IAAC,SAAS,EAAC,sBAAsB,EAAC,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,QAAQ,CAAC,EAAE,GAAI,CACrF,KACC,CACT,EACA,SAAS,IAAI,CACV,KAAC,qBAAqB,cAClB,uBAAK,SAAS,EAAC,gBAAgB,EAAC,MAAM,EAAC,IAAI,EAAC,OAAO,EAAC,WAAW,EAAC,KAAK,EAAC,IAAI,gBACtE,eAAM,CAAC,EAAC,0CAA0C,GAAG,IACnD,GACc,CAC3B,EACD,KAAC,QAAQ,aAAC,WAAW,EAAE,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,gBAC5C,QAAQ,IACF,KACI,CACtB,CAAC;AACN,CAAC","sourcesContent":["import {\n    OverlayArrow as ReactAriaOverlayArrow,\n    Tooltip as ReactAriaTooltip,\n    TooltipProps as ReactAriaTooltipProps\n} from 'react-aria-components';\nimport {classNames} from '../../../utils/classnames.js';\nimport {BodyText} from '../../text/bodytext/bodytext.js';\nimport {Size} from '../../../constants/size.js';\nimport {ElementType, ReactNode, RefAttributes} from 'react';\nimport {IconName} from '../../media/icon/icons.js';\nimport {Icon, IconSize} from '../../media/icon/icon.js';\nimport {Label} from '../../text/label/label.js';\nimport {Position} from '../../../constants/position.js';\nimport {HTMLElementType} from '../../../constants/index.js';\n\nconst DEFAULT_MAX_WIDTH = 160;\n\nexport const enum TooltipType {\n    Rich = 'rich',\n    Plain = 'plain'\n}\n\nexport interface TooltipProps extends ReactAriaTooltipProps, RefAttributes<HTMLDivElement> {\n    /**\n     * Content of the tooltip.\n     */\n    children: ReactNode | string;\n    /**\n     * Content wrapper element type.\n     */\n    elementType?: ElementType;\n    /**\n     * Header icon of the tooltip. Only shown for the rich tooltip type.\n     */\n    headerIconName?: IconName;\n    /**\n     * Header text of the tooltip. Only shown for the rich tooltip type.\n     */\n    headerText?: string;\n    /**\n     * Max width of the tooltip (px).\n     */\n    maxWidth?: number;\n    /**\n     * Position of the tooltip.\n     */\n    position?: Position;\n    /**\n     * Whether to show the arrow of the tooltip.\n     */\n    showArrow?: boolean;\n    /**\n     * Type of the tooltip.\n     */\n    type: TooltipType;\n}\n\nexport function Tooltip({\n    children,\n    className,\n    elementType = HTMLElementType.Div,\n    headerIconName,\n    headerText,\n    maxWidth = DEFAULT_MAX_WIDTH,\n    position = Position.Top,\n    showArrow = true,\n    type,\n    ...props\n}: TooltipProps) {\n    return (\n        <ReactAriaTooltip\n            {...props}\n            className={classNames(`tooltip tooltip--${type}`, className)}\n            placement={position}\n            style={{maxWidth}}>\n            {type === 'rich' && (\n                <div className=\"tooltip__header\">\n                    <Label className=\"tooltip__header-text\" size={Size.sm}>\n                        <strong>{headerText}</strong>\n                    </Label>\n                    {headerIconName && (\n                        <Icon className=\"tooltip__header-icon\" name={headerIconName} size={IconSize.SM} />\n                    )}\n                </div>\n            )}\n            {showArrow && (\n                <ReactAriaOverlayArrow>\n                    <svg className=\"tooltip__arrow\" height=\"12\" viewBox=\"0 0 12 12\" width=\"12\">\n                        <path d=\"M6 6.16614L7.15493e-08 0L12 0L6 6.16614Z\" />\n                    </svg>\n                </ReactAriaOverlayArrow>\n            )}\n            <BodyText elementType={elementType} size={Size.xs}>\n                {children}\n            </BodyText>\n        </ReactAriaTooltip>\n    );\n}\n"]}