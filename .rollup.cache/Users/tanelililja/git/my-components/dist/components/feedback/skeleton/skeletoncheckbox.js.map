{"version":3,"file":"skeletoncheckbox.js","sourceRoot":"","sources":["../../../../src/components/feedback/skeleton/skeletoncheckbox.tsx"],"names":[],"mappings":";;AACA,OAAO,EAAC,UAAU,EAAC,MAAM,8BAA8B,CAAC;AACxD,OAAO,EAAC,YAAY,EAAE,gBAAgB,EAAC,MAAM,mBAAmB,CAAC;AACjE,OAAO,EAAC,IAAI,EAAC,MAAM,6BAA6B,CAAC;AAyBjD,MAAM,UAAU,gBAAgB,CAAC,EAOT;QANL,UAAU,oBAAA,EACzB,SAAS,eAAA,EACT,WAAW,iBAAA,EACX,GAAG,SAAA,EACH,IAAI,UAAA,EACJ,KAAK,WAAA;IAEL,OAAO,CACH,uCACiB,UAAU,KAAK,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,EACpD,SAAS,EAAE,UAAU,CAAC,mBAAmB,EAAE,SAAS,CAAC,EAErD,GAAG,EAAE,GAAG,EACR,KAAK,EAAE,KAAK,iBACZ,KAAC,YAAY,mBACI,KAAK,EAClB,IAAI,EAAE,IAAI,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,EAC1C,IAAI,EAAE,gBAAgB,CAAC,KAAK,GAC9B,EACD,WAAW,IAAI,CACZ,KAAC,YAAY,mBAAc,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,gBAAgB,CAAC,KAAK,EAAE,KAAK,EAAC,KAAK,GAAG,CAChG,MAVI,UAAG,WAAW,CAAE,CAWnB,CACT,CAAC;AACN,CAAC","sourcesContent":["import {CSSProperties, RefAttributes} from 'react';\nimport {classNames} from '../../../utils/classnames.js';\nimport {SkeletonText, SkeletonTextType} from './skeletontext.js';\nimport {Size} from '../../../constants/index.js';\n\nexport interface SkeletonCheckboxProps extends RefAttributes<HTMLDivElement> {\n    /**\n     * ARIA hidden attribute.\n     */\n    ['aria-hidden']?: boolean;\n    /**\n     * CSS class name for the element.\n     */\n    className?: string;\n    /**\n     * Whether to show skeleton for help text.\n     */\n    hasHelpText?: boolean;\n    /**\n     * Size of the element.\n     */\n    size: Size.sm | Size.md;\n    /**\n     * CSS style for the element.\n     */\n    style?: CSSProperties;\n}\n\nexport function SkeletonCheckbox({\n    'aria-hidden': ariaHidden,\n    className,\n    hasHelpText,\n    ref,\n    size,\n    style\n}: SkeletonCheckboxProps) {\n    return (\n        <div\n            aria-hidden={ariaHidden === false ? undefined : true}\n            className={classNames('skeleton-checkbox', className)}\n            key={`${hasHelpText}`} // to sync animations when props change\n            ref={ref}\n            style={style}>\n            <SkeletonText\n                aria-hidden={false}\n                size={size === Size.md ? Size.lg : Size.md}\n                type={SkeletonTextType.Label}\n            />\n            {hasHelpText && (\n                <SkeletonText aria-hidden={false} size={Size.sm} type={SkeletonTextType.Label} width=\"25%\" />\n            )}\n        </div>\n    );\n}\n"]}