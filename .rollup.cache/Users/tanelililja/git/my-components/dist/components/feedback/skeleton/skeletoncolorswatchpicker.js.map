{"version":3,"file":"skeletoncolorswatchpicker.js","sourceRoot":"","sources":["../../../../src/components/feedback/skeleton/skeletoncolorswatchpicker.tsx"],"names":[],"mappings":";;;AACA,OAAO,EAAC,UAAU,EAAC,MAAM,8BAA8B,CAAC;AACxD,OAAO,EAAC,QAAQ,EAAE,aAAa,EAAC,MAAM,eAAe,CAAC;AACtD,OAAO,EAAC,IAAI,EAAC,MAAM,6BAA6B,CAAC;AAyBjD,IAAM,gBAAgB;IAClB,GAAC,IAAI,CAAC,EAAE,IAAG,EAAE;IACb,GAAC,IAAI,CAAC,EAAE,IAAG,EAAE;IACb,GAAC,IAAI,CAAC,EAAE,IAAG,EAAE;OAChB,CAAC;AAEF,MAAM,UAAU,yBAAyB,CAAC,EAOT;QANd,UAAU,oBAAA,EACzB,SAAS,eAAA,EACT,SAAS,eAAA,EACT,cAAe,EAAf,MAAM,mBAAG,MAAM,KAAA,EACf,GAAG,SAAA,EACH,IAAI,UAAA;IAEJ,IAAM,SAAS,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC;IAEzC,OAAO,CACH,sCACiB,UAAU,KAAK,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,EACpD,SAAS,EAAE,UAAU,CAAC,8BAA8B,EAAE,SAAS,CAAC,iBACnD,MAAM,EACnB,GAAG,EAAE,GAAG,gBACP,KAAK,CAAC,IAAI,CAAC,EAAC,MAAM,EAAE,SAAS,EAAC,EAAE,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CACvC,KAAC,QAAQ,mBACQ,KAAK,EAClB,MAAM,EAAE,SAAS,EAEjB,KAAK,EAAE,aAAa,CAAC,SAAS,EAC9B,KAAK,EAAE,SAAS,IAFX,CAAC,CAGR,CACL,EAR0C,CAQ1C,CAAC,IACA,CACT,CAAC;AACN,CAAC","sourcesContent":["import {RefAttributes} from 'react';\nimport {classNames} from '../../../utils/classnames.js';\nimport {Skeleton, SkeletonShape} from './skeleton.js';\nimport {Size} from '../../../constants/index.js';\n\nexport interface SkeletonColorSwatchPickerProps extends RefAttributes<HTMLDivElement> {\n    /**\n     * ARIA hidden attribute.\n     */\n    ['aria-hidden']?: boolean;\n    /**\n     * CSS class name for the element.\n     */\n    className?: string;\n    /**\n     * Number of skeleton items to render.\n     */\n    itemCount: number;\n    /**\n     * Whether items are displayed in a grid or stack.\n     */\n    layout?: 'grid' | 'stack';\n    /**\n     * Size of the element.\n     */\n    size: Size.xs | Size.sm | Size.md;\n}\n\nconst rectWidthForSize = {\n    [Size.xs]: 28,\n    [Size.sm]: 32,\n    [Size.md]: 40\n};\n\nexport function SkeletonColorSwatchPicker({\n    'aria-hidden': ariaHidden,\n    className,\n    itemCount,\n    layout = 'grid',\n    ref,\n    size\n}: SkeletonColorSwatchPickerProps) {\n    const rectWidth = rectWidthForSize[size];\n\n    return (\n        <div\n            aria-hidden={ariaHidden === false ? undefined : true}\n            className={classNames('skeleton-color-swatch-picker', className)}\n            data-layout={layout}\n            ref={ref}>\n            {Array.from({length: itemCount}, (_, i) => (\n                <Skeleton\n                    aria-hidden={false}\n                    height={rectWidth}\n                    key={i}\n                    shape={SkeletonShape.Rectangle}\n                    width={rectWidth}\n                />\n            ))}\n        </div>\n    );\n}\n"]}