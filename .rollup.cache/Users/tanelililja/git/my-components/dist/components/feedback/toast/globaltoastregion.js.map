{"version":3,"file":"globaltoastregion.js","sourceRoot":"","sources":["../../../../src/components/feedback/toast/globaltoastregion.tsx"],"names":[],"mappings":";;AAAA,OAAO,EAAC,KAAK,EAAE,YAAY,EAAC,MAAM,YAAY,CAAC;AAE/C,OAAO,EAAC,UAAU,EAAC,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAC,YAAY,EAAC,MAAM,mBAAmB,CAAC;AAC/C,OAAO,EAAC,UAAU,EAAC,MAAM,kCAAkC,CAAC;AAC5D,OAAO,EAAC,YAAY,EAAC,MAAM,mBAAmB,CAAC;AAS/C,IAAM,eAAe,GAAG,KAAK,CAAC;AAE9B,SAAS,QAAQ,CAAC,QAAmB,EAAE,OAAqB,EAAE,OAAqB;IACxE,IAAA,mBAAmB,GAAoC,OAAO,oBAA3C,EAAE,WAAW,GAAuB,OAAO,YAA9B,EAAE,QAAQ,GAAa,OAAO,SAApB,EAAE,OAAO,GAAI,OAAO,QAAX,CAAY;IAEtE,OAAO,YAAY,CAAC,GAAG,CACnB,UAAC,CAAC,IAAK,OAAA,CACH,KAAC,KAAK,IACF,KAAK,wBACE,CAAC,KACJ,OAAO,EAAE;gBACL,WAAW,aAAA;gBACX,QAAQ,UAAA;gBACR,QAAQ,UAAA;gBACR,mBAAmB,qBAAA;gBACnB,OAAO,SAAA;aACV,MAEP,CACL,EAbM,CAaN,EACD,EAAC,QAAQ,EAAE,OAAO,aAAP,OAAO,cAAP,OAAO,GAAI,eAAe,EAAC,CACzC,CAAC;AACN,CAAC;AAED,MAAM,UAAU,UAAU,CAAC,EAAU;IACjC,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;AAC7B,CAAC;AAED,MAAM,CAAC,IAAM,UAAU,GAAG;IACtB,OAAO,YAAC,QAAmB,EAAE,OAA0B;QAA1B,wBAAA,EAAA,YAA0B;QACnD,OAAO,QAAQ,CAAC,QAAQ,EAAE,YAAY,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC7D,CAAC;IACD,WAAW,YAAC,QAAmB,EAAE,OAA0B;QAA1B,wBAAA,EAAA,YAA0B;QACvD,OAAO,QAAQ,CAAC,QAAQ,EAAE,YAAY,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;IACjE,CAAC;IACD,OAAO,YAAC,QAAmB,EAAE,OAA0B;QAA1B,wBAAA,EAAA,YAA0B;QACnD,OAAO,QAAQ,CAAC,QAAQ,EAAE,YAAY,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC7D,CAAC;IACD,MAAM,YAAC,QAAmB,EAAE,OAA0B;QAA1B,wBAAA,EAAA,YAA0B;QAClD,OAAO,QAAQ,CAAC,QAAQ,EAAE,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IAC5D,CAAC;IACD,OAAO,YAAC,QAAmB,EAAE,OAA0B;QAA1B,wBAAA,EAAA,YAA0B;QACnD,OAAO,QAAQ,CAAC,QAAQ,EAAE,YAAY,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC7D,CAAC;IACD,OAAO,YAAC,QAAmB,EAAE,OAA0B;QAA1B,wBAAA,EAAA,YAA0B;QACnD,OAAO,QAAQ,CAAC,QAAQ,EAAE,YAAY,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC7D,CAAC;CACJ,CAAC;AAwBF,MAAM,UAAU,iBAAiB,CAAC,KAA6B;IACrD,IAAA,KAAqB,UAAU,EAAE,EAAhC,QAAQ,cAAA,EAAE,MAAM,YAAgB,CAAC;IAExC,OAAO,CACH,yBACQ,KAAK,IACT,SAAS,EAAC,qBAAqB,EAC/B,YAAY,EAAE,QAAQ,CAAC,UAAU,EACjC,YAAY,EAAE,QAAQ,CAAC,QAAQ,gBAC9B,MAAM,CAAC,GAAG,CAAC,UAAC,CAAC;YACV,IAAM,MAAM,GAAG,QAAQ,CAAC,eAAe,CAAC,CAAC,EAAE;gBACvC,YAAY,EAAE,IAAI;gBAClB,MAAM,EAAE,CAAC;gBACT,eAAe,EAAE,eAAe;aACnC,CAAC,CAAC;YACI,IAAA,EAAE,GAAa,CAAC,GAAd,EAAE,OAAO,GAAI,CAAC,QAAL,CAAM;YAExB,OAAO,CACH,KAAC,YAAY,aACT,EAAE,EAAE,EAAE,EACN,QAAQ,EAAE,CAAC,CAAC,OAAO,EAEnB,cAAc,EAAE,QAAQ,CAAC,YAAY,EACrC,KAAK,EAAE;oBACH,SAAS,EAAE,qBAAc,MAAM,GAAG,CAAC,CAAC,QAAK;iBAC5C,gBACA,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,KALtC,EAAE,CAMI,CAClB,CAAC;QACN,CAAC,CAAC,IACA,CACT,CAAC;AACN,CAAC","sourcesContent":["import {Toast, ToastVariant} from './toast.js';\nimport {ReactNode, RefAttributes} from 'react';\nimport {useToaster} from 'react-hot-toast/headless';\nimport {ToastWrapper} from './toastwrapper.js';\nimport {isFunction} from '../../../utils/functionhelper.js';\nimport {toastHandler} from './toasthandler.js';\n\nexport interface ToastOptions {\n    actionLabel?: string;\n    onAction?: () => void;\n    shouldCloseOnAction?: boolean;\n    timeout?: number;\n}\n\nconst DEFAULT_TIMEOUT = 10000;\n\nfunction addToast(children: ReactNode, variant: ToastVariant, options: ToastOptions) {\n    const {shouldCloseOnAction, actionLabel, onAction, timeout} = options;\n\n    return toastHandler.add(\n        (t) => (\n            <Toast\n                toast={{\n                    ...t,\n                    content: {\n                        actionLabel,\n                        children,\n                        onAction,\n                        shouldCloseOnAction,\n                        variant\n                    }\n                }}\n            />\n        ),\n        {duration: timeout ?? DEFAULT_TIMEOUT}\n    );\n}\n\nexport function closeToast(id: string) {\n    toastHandler.dismiss(id);\n}\n\nexport const ToastQueue = {\n    neutral(children: ReactNode, options: ToastOptions = {}): string {\n        return addToast(children, ToastVariant.Neutral, options);\n    },\n    informative(children: ReactNode, options: ToastOptions = {}): string {\n        return addToast(children, ToastVariant.Informative, options);\n    },\n    success(children: ReactNode, options: ToastOptions = {}): string {\n        return addToast(children, ToastVariant.Success, options);\n    },\n    danger(children: ReactNode, options: ToastOptions = {}): string {\n        return addToast(children, ToastVariant.Danger, options);\n    },\n    warning(children: ReactNode, options: ToastOptions = {}): string {\n        return addToast(children, ToastVariant.Warning, options);\n    },\n    loading(children: ReactNode, options: ToastOptions = {}): string {\n        return addToast(children, ToastVariant.Loading, options);\n    }\n};\n\nexport interface GlobalToastRegionProps extends RefAttributes<HTMLDivElement> {\n    /**\n     * Defines a string value that labels the current element.\n     */\n    'aria-label'?: string;\n\n    /**\n     * Identifies the element (or elements) that labels the current element.\n     */\n    'aria-labelledby'?: string;\n\n    /**\n     * Identifies the element (or elements) that describes the object.\n     */\n    'aria-describedby'?: string;\n\n    /**\n     * Identifies the element (or elements) that provide a detailed, extended description for the object.\n     */\n    'aria-details'?: string;\n}\n\nexport function GlobalToastRegion(props: GlobalToastRegionProps) {\n    const {handlers, toasts} = useToaster();\n\n    return (\n        <div\n            {...props}\n            className=\"global-toast-region\"\n            onMouseEnter={handlers.startPause}\n            onMouseLeave={handlers.endPause}>\n            {toasts.map((t) => {\n                const offset = handlers.calculateOffset(t, {\n                    reverseOrder: true,\n                    gutter: 8,\n                    defaultPosition: 'bottom-center'\n                });\n                const {id, message} = t;\n\n                return (\n                    <ToastWrapper\n                        id={id}\n                        isActive={t.visible}\n                        key={id}\n                        onHeightUpdate={handlers.updateHeight}\n                        style={{\n                            transform: `translateY(${offset * -1}px)`\n                        }}>\n                        {isFunction(message) ? message(t) : message}\n                    </ToastWrapper>\n                );\n            })}\n        </div>\n    );\n}\n"]}