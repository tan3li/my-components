{"version":3,"file":"callout.js","sourceRoot":"","sources":["../../../../src/components/feedback/callout/callout.tsx"],"names":[],"mappings":";;AAAA,OAAO,EAAC,kBAAkB,EAAC,MAAM,eAAe,CAAC;AACjD,OAAO,EAA2B,MAAM,EAAC,MAAM,OAAO,CAAC;AACvD,OAAO,EAAC,UAAU,EAAE,SAAS,EAAE,aAAa,EAAE,YAAY,EAAC,MAAM,YAAY,CAAC;AAC9E,OAAO,EAAC,IAAI,EAAY,SAAS,EAAE,QAAQ,EAAC,MAAM,sBAAsB,CAAC;AACzE,OAAO,EAAC,UAAU,EAAC,MAAM,8BAA8B,CAAC;AACxD,OAAO,EAAC,sBAAsB,EAAC,MAAM,0CAA0C,CAAC;AAChF,OAAO,EAAC,QAAQ,EAAE,KAAK,EAAC,MAAM,qBAAqB,CAAC;AACpD,OAAO,EAAC,eAAe,EAAE,IAAI,EAAC,MAAM,6BAA6B,CAAC;AAiClE,MAAM,UAAU,OAAO,CAAC,EAAmE;IAAlE,IAAA,QAAQ,cAAA,EAAE,SAAS,eAAA,EAAE,QAAQ,cAAA,EAAE,GAAG,SAAA,EAAE,KAAK,WAAA,EAAK,KAAK,cAApD,qDAAqD,CAAD;IACxE,IAAM,KAAK,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC;IACxC,IAAM,QAAQ,GAAG,MAAM,CAAiB,IAAI,CAAC,CAAC;IAC9C,IAAM,UAAU,GAAG,MAAM,CAAoB,IAAI,CAAC,CAAC;IAC7C,IAAA,KAA0C,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,EAAjE,YAAY,iBAAA,EAAE,UAAU,gBAAyC,CAAC;IAC/E,IAAA,WAAW,GAAI,SAAS,CAAC,YAAY,EAAE,UAAU,CAAC,YAAvC,CAAwC;IACpD,IAAA,KAA+B,YAAY,EAAE,EAA5C,cAAc,oBAAA,EAAE,UAAU,gBAAkB,CAAC;IACpD,IAAM,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;IAC9B,IAAA,KAAoC,sBAAsB,CAAC,EAAC,UAAU,YAAA,EAAE,GAAG,EAAE,QAAQ,EAAC,CAAC,EAAtF,QAAQ,cAAA,EAAS,cAAc,WAAuD,CAAC;IAE9F,OAAO,CACH,wBAAK,SAAS,EAAE,UAAU,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,GAAG,iBACtD,6BACQ,UAAU,CAAC,WAAW,EAAE,UAAU,CAAC,IACvC,SAAS,EAAC,iBAAiB,wBACP,cAAc,IAAI,SAAS,EAC/C,GAAG,EAAE,UAAU,iBACf,wBAAK,SAAS,EAAC,sBAAsB,iBACjC,KAAC,IAAI,IAAC,UAAU,EAAE,IAAI,EAAE,SAAS,EAAC,eAAe,EAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC,EAAE,GAAI,EACvF,KAAC,KAAK,aAAC,SAAS,EAAC,gBAAgB,EAAC,IAAI,EAAE,IAAI,CAAC,EAAE,gBAC3C,2BAAS,KAAK,GAAU,IACpB,KACN,EACN,KAAC,IAAI,IACD,UAAU,EAAE,IAAI,EAChB,SAAS,EAAC,wBAAwB,EAClC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,YAAY,EAChE,IAAI,EAAE,QAAQ,CAAC,EAAE,GACnB,KACG,EACT,yBAAS,UAAU,CAAC,UAAU,EAAE,cAAc,CAAC,IAAE,SAAS,EAAC,gBAAgB,EAAC,GAAG,EAAE,QAAQ,gBACpF,CAAC,UAAU,IAAI,QAAQ,CAAC,IAAI,CACzB,uBAAK,SAAS,EAAC,wBAAwB,gBACnC,KAAC,QAAQ,aAAC,WAAW,EAAE,eAAe,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,gBACpD,QAAQ,IACF,IACT,CACT,IACC,KACJ,CACT,CAAC;AACN,CAAC","sourcesContent":["import {useDisclosureState} from 'react-stately';\nimport {ReactNode, RefAttributes, useRef} from 'react';\nimport {mergeProps, useButton, useDisclosure, useFocusRing} from 'react-aria';\nimport {Icon, IconName, iconNames, IconSize} from '../../media/index.js';\nimport {classNames} from '../../../utils/classnames.js';\nimport {useAutoHeightAnimation} from '../../../hooks/useautoheightanimation.js';\nimport {BodyText, Label} from '../../text/index.js';\nimport {HTMLElementType, Size} from '../../../constants/index.js';\n\nexport interface CalloutProps extends RefAttributes<HTMLDivElement> {\n    /**\n     * Callout content.\n     */\n    children?: ReactNode;\n    /**\n     * CSS class name for the element.\n     */\n    className?: string;\n    /**\n     * Whether elements is expanded by default.\n     */\n    defaultExpanded?: boolean;\n    /**\n     * Name of decorative icon displayed in the header.\n     */\n    iconName: IconName;\n    /**\n     * Whether element is expanded (controlled).\n     */\n    isExpanded?: boolean;\n    /**\n     * Handler called when expanded state changes. Use together with isExpanded to control state from outside.\n     */\n    onExpandedChange?: (isExpanded: boolean) => void;\n    /**\n     * Title displayed in the header.\n     */\n    title: ReactNode;\n}\n\nexport function Callout({children, className, iconName, ref, title, ...props}: CalloutProps) {\n    const state = useDisclosureState(props);\n    const panelRef = useRef<HTMLDivElement>(null);\n    const triggerRef = useRef<HTMLButtonElement>(null);\n    const {buttonProps: triggerProps, panelProps} = useDisclosure(props, state, panelRef);\n    const {buttonProps} = useButton(triggerProps, triggerRef);\n    const {isFocusVisible, focusProps} = useFocusRing();\n    const isExpanded = state.isExpanded;\n    const {isLoaded, props: animationProps} = useAutoHeightAnimation({isExpanded, ref: panelRef});\n\n    return (\n        <div className={classNames('callout', className)} ref={ref}>\n            <button\n                {...mergeProps(buttonProps, focusProps)}\n                className=\"callout__header\"\n                data-focus-visible={isFocusVisible || undefined}\n                ref={triggerRef}>\n                <div className=\"callout__header-left\">\n                    <Icon ariaHidden={true} className=\"callout__icon\" name={iconName} size={IconSize.MD} />\n                    <Label className=\"callout__title\" size={Size.md}>\n                        <strong>{title}</strong>\n                    </Label>\n                </div>\n                <Icon\n                    ariaHidden={true}\n                    className=\"callout__expander-icon\"\n                    name={isExpanded ? iconNames.ExpandMore : iconNames.ChevronRight}\n                    size={IconSize.MD}\n                />\n            </button>\n            <div {...mergeProps(panelProps, animationProps)} className=\"callout__panel\" ref={panelRef}>\n                {(isExpanded || isLoaded) && (\n                    <div className=\"callout__panel-content\">\n                        <BodyText elementType={HTMLElementType.Div} size={Size.sm}>\n                            {children}\n                        </BodyText>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n"]}