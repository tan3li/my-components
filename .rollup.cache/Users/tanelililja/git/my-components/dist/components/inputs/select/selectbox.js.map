{"version":3,"file":"selectbox.js","sourceRoot":"","sources":["../../../../src/components/inputs/select/selectbox.tsx"],"names":[],"mappings":";;AAGA,OAAO,EAAC,eAAe,EAAC,MAAM,sBAAsB,CAAC;AACrD,OAAO,EAAC,SAAS,EAAC,MAAM,WAAW,CAAC;AACpC,OAAO,EAAC,YAAY,EAAC,MAAM,gCAAgC,CAAC;AAC5D,OAAO,EAAC,UAAU,EAAC,MAAM,8BAA8B,CAAC;AACxD,OAAO,EAAC,KAAK,EAAC,MAAM,YAAY,CAAC;AACjC,OAAO,EAAC,IAAI,EAAE,SAAS,EAAC,MAAM,sBAAsB,CAAC;AACrD,OAAO,EAAC,UAAU,EAAE,QAAQ,EAAC,MAAM,kCAAkC,CAAC;AACtE,OAAO,EAAC,IAAI,EAAC,MAAM,6BAA6B,CAAC;AACjD,OAAO,EAAC,uBAAuB,EAAE,uBAAuB,EAAC,MAAM,qBAAqB,CAAC;AACrF,OAAO,EAAC,WAAW,EAAC,MAAM,uBAAuB,CAAC;AAClD,OAAO,EAAC,WAAW,EAAC,MAAM,kBAAkB,CAAC;AAC7C,OAAO,EAAgB,QAAQ,EAAC,MAAM,OAAO,CAAC;AAE9C,MAAM,UAAU,SAAS,CAA2D,KAA4B;IACrG,IAAA,YAAY,GAAyF,KAAK,aAA9F,EAAE,WAAW,GAA4E,KAAK,YAAjF,EAAE,UAAU,GAAgE,KAAK,WAArE,EAAE,OAAO,GAAuD,KAAK,QAA5D,EAAE,kBAAkB,GAAmC,KAAK,mBAAxC,EAAE,aAAa,GAAoB,KAAK,cAAzB,EAAE,KAAkB,KAAK,KAAT,EAAd,IAAI,mBAAG,IAAI,CAAC,EAAE,KAAA,CAAU;IAC5G,IAAA,KAwBF,eAAe,CAAC,KAAK,CAAC,EAvBtB,UAAU,gBAAA,EACV,SAAS,eAAA,EACT,cAAc,oBAAA,EACd,UAAU,gBAAA,EACV,SAAS,eAAA,EACT,QAAQ,cAAA,EACR,UAAU,gBAAA,EACV,SAAS,eAAA,EACT,MAAM,YAAA,EACN,YAAY,kBAAA,EACZ,iBAAiB,uBAAA,EACjB,UAAU,gBAAA,EACV,eAAe,qBAAA,EACf,iBAAiB,uBAAA,EACjB,SAAS,eAAA,EACT,aAAa,mBAAA,EACb,SAAS,eAAA,EACT,UAAU,gBAAA,EACV,aAAa,mBAAA,EACb,UAAU,gBAAA,EACV,wBAAwB,8BAAA,EACxB,gBAAgB,sBAAA,EAChB,eAAe,qBACO,CAAC;IACrB,IAAA,KAAsC,QAAQ,CAAC,KAAK,CAAC,EAApD,cAAc,QAAA,EAAE,iBAAiB,QAAmB,CAAC;IAEtD,IAAA,KAAgF,SAAS,CAAC;QAC5F,gBAAgB,kBAAA;QAChB,MAAM,QAAA;QACN,KAAK,EAAE,SAAS;QAChB,YAAY,EAAE,UAAC,IAAI,IAAK,OAAA,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAvB,CAAuB;QAC/C,cAAc,EAAE,UAAC,IAAI,IAAK,OAAA,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,CAAC,CAAC,CAAC,KAAK,CAAC,EAArD,CAAqD;QAC/E,YAAY,cAAA;QACZ,wBAAwB,0BAAA;QACxB,oBAAoB,EAAE,UAAC,EAA+B;gBAAhB,eAAe,kBAAA;YACjD,iBAAiB,CAAC,eAAe,aAAf,eAAe,cAAf,eAAe,GAAI,IAAI,CAAC,CAAC;QAC/C,CAAC;QACD,cAAc,EAAE,UAAC,EAAmB;gBAAV,SAAS,YAAA;YAC/B,IAAI,UAAU,IAAI,SAAS,KAAK,MAAM,IAAI,cAAc,EAAE;gBACtD,OAAO;aACV;YAED,IAAI,SAAS,EAAE;gBACX,eAAe,EAAE,CAAC;aACrB;YAED,SAAS,CAAC,SAAS,aAAT,SAAS,cAAT,SAAS,GAAI,KAAK,CAAC,CAAC;QAClC,CAAC;QACD,aAAa,EAAE,UAAC,OAAO;YACnB,IACI,OAAO,CAAC,IAAI,KAAK,SAAS,CAAC,gBAAgB,CAAC,4BAA4B;gBACxE,OAAO,CAAC,gBAAgB,KAAK,SAAS,CAAC,MAAM,GAAG,CAAC,EACnD;gBACE,oFAAoF;gBACpF,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;aACpC;QACL,CAAC;QACD,YAAY,EAAE,UAAC,KAAK,EAAE,gBAAgB;;YAC3B,IAAA,OAAO,GAAU,gBAAgB,QAA1B,EAAE,IAAI,GAAI,gBAAgB,KAApB,CAAqB;YAEzC,QAAQ,IAAI,EAAE;gBACV,KAAK,SAAS,CAAC,gBAAgB,CAAC,wBAAwB,CAAC;gBACzD,KAAK,SAAS,CAAC,gBAAgB,CAAC,SAAS;oBACrC,IAAI,MAAA,OAAO,CAAC,YAAY,0CAAE,MAAM,EAAE;wBAC9B,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;wBAEvC,6BACO,OAAO,KACV,YAAY,EAAE,KAAK,CAAC,YAAY,EAChC,UAAU,EAAE,KAAK,CAAC,UAAU,IAC9B;qBACL;oBACD,IAAI,MAAA,OAAO,CAAC,YAAY,0CAAE,UAAU,EAAE;wBAClC,6BACO,OAAO,KACV,MAAM,EAAE,IAAI,EACZ,YAAY,EAAE,KAAK,CAAC,YAAY,EAChC,UAAU,EAAE,KAAK,CAAC,UAAU,EAC5B,gBAAgB,EAAE,KAAK,CAAC,gBAAgB,IAC1C;qBACL;oBAED,OAAO,OAAO,CAAC;gBACnB;oBACI,OAAO,OAAO,CAAC;aACtB;QACL,CAAC;KACJ,CAAC,EA7DK,oBAAoB,0BAAA,EAAE,aAAa,mBAAA,EAAE,YAAY,kBAAA,EAAE,YAAY,kBAAA,EAAE,UAAU,gBA6DhF,CAAC;IAEH,IAAM,SAAS,GAAG,UAAC,CAAgB;QAC/B,QAAQ,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,EAAE,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IAClG,CAAC,CAAC;IAEF,IAAM,eAAe,GAAG,WAAW,IAAI,CAAC,MAAM,IAAI,CAAC,UAAU,IAAI,CAAC,UAAU,IAAI,YAAY,CAAC;IAC7F,IAAM,iBAAiB,GAAG,oBAAoB,CAC1C,EAAC,QAAQ,EAAE,UAAU,EAAE,GAAG,EAAE,iBAAiB,EAAC,EAC9C,EAAC,gBAAgB,EAAE,IAAI,EAAC,CAC3B,CAAC;IAEF,OAAO,CACH,KAAC,WAAW,eACJ,KAAK,IACT,YAAY,EAAE,YAAY,EAC1B,aAAa,EAAE,aAAa,EAC5B,YAAY,EAAE,YAAY,EAC1B,QAAQ,EAAE,QAAQ,EAClB,aAAa,EAAE,aAAa,EAC5B,eAAe,EAAE,eAAe,EAChC,gBAAgB,EAAE,gBAAgB,EAClC,MAAM,EAAE,MAAM,EACd,aAAa,EAAE,aAAa,EAC5B,UAAU,EAAE,UAAU,EACtB,SAAS,EAAE,SAAS,EACpB,UAAU,EAAE,UAAU,EACtB,YAAY,EAAE,YAAY,EAC1B,iBAAiB,EAAE,iBAAiB,gBAGpC,0BACQ,UAAU,EACV,UAAU,EACV,iBAAiB,EACjB,UAAU,kBACF,KAAK,CAAC,YAAY,CAAC,EAC/B,SAAS,EAAE,UAAU,CAAC,2CAAoC,IAAI,oBAAiB,EAAE;gBAC7E,wBAAwB,EAAE,OAAO;aACpC,CAAC,mBACa,CAAC,CAAC,UAAU,IAAI,SAAS,wBACpB,cAAc,IAAI,SAAS,kBACjC,CAAC,SAAS,IAAI,CAAC,UAAU,CAAC,IAAI,SAAS,kBACvC,SAAS,IAAI,SAAS,kBACtB,CAAC,CAAC,QAAQ,IAAI,SAAS,mBACtB,CAAC,CAAC,UAAU,IAAI,SAAS,EACxC,MAAM,EAAE,KAAK,CAAC,UAAU,CAAC,MAAM,EAAE,iBAAiB,CAAC,MAAM,CAAC,EAC1D,SAAS,EAAE,KAAK,CAAC,SAAS,EAAE,iBAAiB,CAAC,SAAS,CAAC,iBACvD,aAAa,IAAI,KAAC,IAAI,IAAC,SAAS,EAAC,oBAAoB,EAAC,IAAI,EAAE,aAAa,GAAI,EAC7E,UAAU,CAAC,kBAAkB,CAAC,IAAI,kBAAkB,CAAC,YAAY,CAAC,EACnE,wBACI,SAAS,EAAE,UAAU,CACjB,eAAe,EACf,IAAI,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC,uBAAuB,CACvE,sBACiB,CAAC,YAAY,IAAI,SAAS,gBAC3C,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,IAClD,EACP,wBAAK,SAAS,EAAC,wBAAwB,iBAClC,eAAe,IAAI,CAChB,KAAC,WAAW,IACR,SAAS,EAAC,sBAAsB,EAChC,aAAa,EAAE,iBAAiB,EAChC,OAAO,EAAE;;gCACL,UAAU,CAAC,IAAI,CAAC,CAAC;gCACjB,MAAA,iBAAiB,CAAC,OAAO,0CAAE,KAAK,EAAE,CAAC;4BACvC,CAAC,GACH,CACL,EACD,uBAAK,SAAS,EAAC,kBAAkB,gBAC7B,KAAC,IAAI,IACD,SAAS,EAAC,qBAAqB,EAC/B,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,CAAC,gBAAgB,GACxE,IACA,KACJ,KACJ,IACI,CACjB,CAAC;AACN,CAAC","sourcesContent":["import {AnyObject} from '../../../hooks/usechangeparamscallback.js';\nimport {SelectItemBase} from './selectitem.js';\nimport {SelectProps} from './selectprops.js';\nimport {useSelectCommon} from './useselectcommon.js';\nimport {useSelect} from 'downshift';\nimport {scrollBottom} from '../../../utils/scrollbottom.js';\nimport {classNames} from '../../../utils/classnames.js';\nimport {chain} from 'react-aria';\nimport {Icon, iconNames} from '../../media/index.js';\nimport {isFunction, safeCall} from '../../../utils/functionhelper.js';\nimport {Size} from '../../../constants/index.js';\nimport {LABEL_SIZE_LG_CSS_CLASS, LABEL_SIZE_MD_CSS_CLASS} from '../../text/index.js';\nimport {ClearButton} from '../../action/index.js';\nimport {SelectField} from './selectfield.js';\nimport {KeyboardEvent, useState} from 'react';\n\nexport function SelectBox<P extends AnyObject, TItem extends SelectItemBase<TItem>>(props: SelectProps<P, TItem>) {\n    const {disabledKeys, isClearable, isDisabled, isPlain, renderStartContent, startIconName, size = Size.md} = props;\n    const {\n        focusProps,\n        isFocused,\n        isFocusVisible,\n        hoverProps,\n        isHovered,\n        hasError,\n        isReadOnly,\n        setIsOpen,\n        isOpen,\n        selectedItem,\n        triggerContentRef,\n        listBoxRef,\n        updateMenuWidth,\n        onSelectionChange,\n        flatItems,\n        itemsToRender,\n        menuWidth,\n        fieldProps,\n        helpTextProps,\n        popoverRef,\n        onHighlightedIndexChange,\n        highlightedIndex,\n        highlightSource\n    } = useSelectCommon(props);\n    const [isClearFocused, setIsClearFocused] = useState(false);\n\n    const {getToggleButtonProps, getLabelProps, getMenuProps, getItemProps, selectItem} = useSelect({\n        highlightedIndex,\n        isOpen,\n        items: flatItems,\n        itemToString: (item) => (item ? item.text : ''),\n        isItemDisabled: (item) => (item ? !!disabledKeys?.includes(item.value) : false),\n        selectedItem,\n        onHighlightedIndexChange,\n        onSelectedItemChange: ({selectedItem: newSelectedItem}) => {\n            onSelectionChange(newSelectedItem ?? null);\n        },\n        onIsOpenChange: ({isOpen: newIsOpen}) => {\n            if (isReadOnly || newIsOpen === isOpen || isClearFocused) {\n                return;\n            }\n\n            if (newIsOpen) {\n                updateMenuWidth();\n            }\n\n            setIsOpen(newIsOpen ?? false);\n        },\n        onStateChange: (changes) => {\n            if (\n                changes.type === useSelect.stateChangeTypes.ToggleButtonKeyDownArrowDown &&\n                changes.highlightedIndex === flatItems.length - 1\n            ) {\n                // scroll at the bottom when last item is highlighted to make sure loader is visible\n                scrollBottom(listBoxRef.current);\n            }\n        },\n        stateReducer: (state, actionAndChanges) => {\n            const {changes, type} = actionAndChanges;\n\n            switch (type) {\n                case useSelect.stateChangeTypes.ToggleButtonKeyDownEnter:\n                case useSelect.stateChangeTypes.ItemClick:\n                    if (changes.selectedItem?.action) {\n                        changes.selectedItem.action.callback();\n\n                        return {\n                            ...changes,\n                            selectedItem: state.selectedItem,\n                            inputValue: state.inputValue\n                        };\n                    }\n                    if (changes.selectedItem?.isReadOnly) {\n                        return {\n                            ...changes,\n                            isOpen: true,\n                            selectedItem: state.selectedItem,\n                            inputValue: state.inputValue,\n                            highlightedIndex: state.highlightedIndex\n                        };\n                    }\n\n                    return changes;\n                default:\n                    return changes;\n            }\n        }\n    });\n\n    const onKeyDown = (e: KeyboardEvent) => {\n        safeCall(props.onKeyDown, e, highlightedIndex >= 0 ? flatItems[highlightedIndex] : undefined);\n    };\n\n    const showClearButton = isClearable && !isOpen && !isDisabled && !isReadOnly && selectedItem;\n    const toggleButtonProps = getToggleButtonProps(\n        {disabled: isDisabled, ref: triggerContentRef},\n        {suppressRefError: true}\n    );\n\n    return (\n        <SelectField\n            {...props}\n            getItemProps={getItemProps}\n            getLabelProps={getLabelProps}\n            getMenuProps={getMenuProps}\n            hasError={hasError}\n            helpTextProps={helpTextProps}\n            highlightSource={highlightSource}\n            highlightedIndex={highlightedIndex}\n            isOpen={isOpen}\n            itemsToRender={itemsToRender}\n            listBoxRef={listBoxRef}\n            menuWidth={menuWidth}\n            popoverRef={popoverRef}\n            selectedItem={selectedItem}\n            triggerContentRef={triggerContentRef}>\n            {/* Interaction related a11y props are included in toggleButtonProps */}\n            {/* eslint-disable-next-line jsx-a11y/no-static-element-interactions */}\n            <div\n                {...hoverProps}\n                {...focusProps}\n                {...toggleButtonProps}\n                {...fieldProps}\n                aria-label={props['aria-label']}\n                className={classNames(`select__content select__content--${size} select__button`, {\n                    'select__content--plain': isPlain\n                })}\n                data-disabled={!!isDisabled || undefined}\n                data-focus-visible={isFocusVisible || undefined}\n                data-focused={(isFocused && !isDisabled) || undefined}\n                data-hovered={isHovered || undefined}\n                data-invalid={!!hasError || undefined}\n                data-readonly={!!isReadOnly || undefined}\n                onBlur={chain(focusProps.onBlur, toggleButtonProps.onBlur)}\n                onKeyDown={chain(onKeyDown, toggleButtonProps.onKeyDown)}>\n                {startIconName && <Icon className=\"select__start-icon\" name={startIconName} />}\n                {isFunction(renderStartContent) && renderStartContent(selectedItem)}\n                <span\n                    className={classNames(\n                        'select__value',\n                        size === Size.xs ? LABEL_SIZE_MD_CSS_CLASS : LABEL_SIZE_LG_CSS_CLASS\n                    )}\n                    data-placeholder={!selectedItem || undefined}>\n                    {selectedItem ? selectedItem.text : props.placeholder}\n                </span>\n                <div className=\"select__action-buttons\">\n                    {showClearButton && (\n                        <ClearButton\n                            className=\"select__clear-button\"\n                            onFocusChange={setIsClearFocused}\n                            onPress={() => {\n                                selectItem(null);\n                                triggerContentRef.current?.focus();\n                            }}\n                        />\n                    )}\n                    <div className=\"select__expander\">\n                        <Icon\n                            className=\"select__expand-icon\"\n                            name={isOpen ? iconNames.ExpandLessFilled : iconNames.ExpandMoreFilled}\n                        />\n                    </div>\n                </div>\n            </div>\n        </SelectField>\n    );\n}\n"]}