{"version":3,"file":"rendermultiselectitems.js","sourceRoot":"","sources":["../../../../src/components/inputs/multiselect/rendermultiselectitems.tsx"],"names":[],"mappings":"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","sourcesContent":["import {ReactNode} from 'react';\nimport {Label} from '../../text/index.js';\nimport {Size} from '../../../constants/index.js';\nimport {Icon, iconNames, IconSize} from '../../media/index.js';\nimport {SelectOption} from '../select/selectoption.js';\nimport {isFunction} from '../../../utils/functionhelper.js';\nimport {MultiSelectHeader} from './multiselectheader.js';\nimport {SelectItemBase, SpecialSelectItemKey} from '../select/index.js';\nimport {Divider} from '../../datadisplay/index.js';\nimport {UseComboboxReturnValue, UseSelectReturnValue} from 'downshift';\nimport {isAllItemsSelected} from './isallitemsselected.js';\nimport {SelectOptionContentProps} from '../select/selectoptioncontentprops.js';\nimport {SelectOptionContent} from '../select/selectoptioncontent.js';\nimport {InteractionSource} from '../../../constants/interactionsource.js';\n\nexport function renderMultiSelectItems<TItem extends SelectItemBase<TItem>>({\n    createText,\n    disabledKeys,\n    expandedKeys,\n    getItemProps,\n    highlightedIndex,\n    highlightSource,\n    itemClassName,\n    items,\n    renderItemContent,\n    selectedItemsMap,\n    size\n}: {\n    createText: string | ((text: string) => ReactNode);\n    disabledKeys?: Array<TItem['value']>;\n    expandedKeys?: Set<TItem['value']>;\n    getItemProps:\n        | UseComboboxReturnValue<SelectItemBase<TItem>>['getItemProps']\n        | UseSelectReturnValue<SelectItemBase<TItem>>['getItemProps'];\n    highlightedIndex: number;\n    highlightSource?: InteractionSource;\n    itemClassName?: string | ((item: TItem) => string);\n    items: TItem[];\n    renderItemContent?: (props: SelectOptionContentProps<TItem>) => ReactNode;\n    selectedItemsMap: Map<TItem['value'], TItem>;\n    size: Size.md | Size.sm | Size.xs;\n}) {\n    let itemIndex = 0;\n\n    const renderItem = (item: TItem, level: number) => {\n        const itemValue = item.value;\n        const isSelected = selectedItemsMap.has(itemValue);\n\n        return (\n            <SelectOption\n                disabledKeys={disabledKeys}\n                getItemProps={getItemProps}\n                highlightSource={highlightSource}\n                isFocused={highlightedIndex === itemIndex}\n                isSelected={isSelected}\n                item={item}\n                itemClassName={itemClassName}\n                itemIndex={itemIndex}\n                key={itemValue}\n                level={level}\n                renderItemContent={renderItemContent}\n                size={size}\n            />\n        );\n    };\n\n    const renderItems = (itemArr: TItem[], level: number) => {\n        const itemNodes: ReactNode[] = [];\n\n        for (let i = 0, len = itemArr.length; i < len; i++) {\n            const item = itemArr[i];\n            const {value, text, children, hasSeparator} = item;\n            const subItems = item.items;\n\n            if (subItems) {\n                if (level > 0) {\n                    throw new Error('Sub-items are only supported on root level.');\n                }\n\n                const isSelected = isAllItemsSelected(subItems, selectedItemsMap);\n\n                itemNodes.push(\n                    <MultiSelectHeader\n                        {...getItemProps({item, index: itemIndex})}\n                        isDisabled={disabledKeys?.includes(value)}\n                        isFocused={highlightedIndex === itemIndex}\n                        isSelected={isSelected}\n                        key={value}>\n                        <Label size={Size.sm}>{text}</Label>\n                        {isSelected && (\n                            <Icon\n                                aria-hidden={true}\n                                className=\"multiselect-header__check\"\n                                name={iconNames.InputCheck}\n                                size={IconSize.MD}\n                            />\n                        )}\n                    </MultiSelectHeader>\n                );\n                itemIndex++;\n                itemNodes.push(...renderItems(subItems, level));\n            } else if (children) {\n                itemNodes.push(renderItem(item, level));\n                itemIndex++;\n                if (expandedKeys?.has(value) !== false) {\n                    itemNodes.push(...renderItems(children, level + 1));\n                }\n            } else if (value === SpecialSelectItemKey.CREATABLE) {\n                itemNodes.push(\n                    <SelectOption\n                        getItemProps={getItemProps}\n                        isFocused={highlightedIndex === itemIndex}\n                        item={item}\n                        itemIndex={itemIndex}\n                        key={value}\n                        level={level}\n                        renderItemContent={(optionContentProps) => (\n                            <SelectOptionContent\n                                {...optionContentProps}\n                                bodyPrefix={\n                                    <Icon className=\"select-option__start-icon\" name={iconNames.AddCircleFilled} />\n                                }\n                                label={\n                                    <Label size={size === Size.xs ? Size.md : Size.lg}>\n                                        {isFunction(createText) ? createText(text) : createText}\n                                    </Label>\n                                }\n                            />\n                        )}\n                        size={size}\n                    />\n                );\n                itemIndex++;\n            } else {\n                itemNodes.push(renderItem(item, level));\n                itemIndex++;\n            }\n\n            if (hasSeparator) {\n                itemNodes.push(<Divider key={`${value}--separator`} size={Size.sm} />);\n            }\n        }\n\n        return itemNodes;\n    };\n\n    return renderItems(items, 0);\n}\n"]}