{"version":3,"file":"uploaditem.js","sourceRoot":"","sources":["../../../../src/components/inputs/uploaditem/uploaditem.tsx"],"names":[],"mappings":"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","sourcesContent":["import {Icon, IconName, IconSize} from '../../media/index.js';\nimport {ReactNode, RefAttributes} from 'react';\nimport {classNames} from '../../../utils/classnames.js';\nimport {BodyText, HelpText, HelpTextVariant} from '../../text/index.js';\nimport {HTMLElementType, Position, Size} from '../../../constants/index.js';\nimport {TDataState} from '../../../constants/datastate.js';\nimport {useDataState} from '../../../hooks/usedatastate.js';\nimport {Divider} from '../../datadisplay/index.js';\nimport {isFunction} from '../../../utils/functionhelper.js';\nimport {isNullOrUndefined} from '../../../utils/objecthelper.js';\nimport {useTranslateProject} from '../../../hooks/translations/usetranslateproject.js';\nimport {Button, ButtonStyle, ButtonVariant} from '../../action/index.js';\nimport {ProgressBar, Tooltip, TooltipTrigger, TooltipType} from '../../feedback/index.js';\nimport {PressEvent} from 'react-aria-components';\n\nexport const enum UploadItemStyle {\n    Card = 'card',\n    Plain = 'plain'\n}\n\nexport interface UploadItemProps extends RefAttributes<HTMLDivElement> {\n    /**\n     * Element or renderer for displaying actions.\n     */\n    actions?: ReactNode | ((props: UploadItemProps) => ReactNode);\n    /**\n     * CSS class name for the element.\n     */\n    className?: string;\n    /**\n     * Map that contains model property states with messages.\n     */\n    dataState?: Map<TDataState, string> | null;\n    /**\n     * Description text.\n     */\n    description: ReactNode;\n    /**\n     * Error text.\n     */\n    errorMessage?: string;\n    /**\n     * Descriptive icon.\n     */\n    iconName: IconName;\n    /**\n     * Whether item is disabled.\n     */\n    isDisabled?: boolean;\n    /**\n     * Whether item is invalid.\n     */\n    isInvalid?: boolean;\n    /**\n     * Whether item is read-only.\n     */\n    isReadOnly?: boolean;\n    /**\n     * Name of the item.\n     */\n    name: ReactNode;\n    /**\n     * Press handler for the name.\n     */\n    onNamePress?: (e: PressEvent) => void;\n    /**\n     * Item display style.\n     */\n    style: UploadItemStyle;\n    /**\n     * Tooltip text for the name.\n     */\n    tooltipText?: string;\n    /**\n     * Value between 0-100 to display progress bar.\n     */\n    uploadProgress?: number;\n}\n\nexport function UploadItem(props: UploadItemProps) {\n    const {\n        actions,\n        className,\n        dataState,\n        description,\n        iconName,\n        isDisabled,\n        isInvalid,\n        onNamePress,\n        name,\n        ref,\n        style,\n        tooltipText,\n        uploadProgress\n    } = props;\n    const {hasError, errorMessage} = useDataState(dataState, isInvalid, props.isReadOnly);\n    const errorMsg = errorMessage || props.errorMessage;\n    const showErrorMessage = hasError && !!errorMsg;\n    const translateProject = useTranslateProject();\n\n    return (\n        <div\n            className={classNames(`upload-item upload-item--${style}`, className, {\n                'upload-item--invalid': hasError,\n                'upload-item--disabled': isDisabled\n            })}\n            ref={ref}>\n            <div className=\"upload-item__top\">\n                <Icon className=\"upload-item__icon\" name={iconName} size={IconSize.LG} />\n                <div className=\"upload-item__content\">\n                    <div className=\"upload-item__heading\">\n                        <div className=\"upload-item__texts\">\n                            <TooltipTrigger isDisabled={!tooltipText}>\n                                <Button\n                                    className=\"upload-item__name\"\n                                    isDisabled={isDisabled}\n                                    onPress={onNamePress}\n                                    size={Size.md}\n                                    style={ButtonStyle.Link}\n                                    variant={hasError ? ButtonVariant.Danger : ButtonVariant.Neutral}>\n                                    {name}\n                                </Button>\n                                <Tooltip type={TooltipType.Plain}>{tooltipText}</Tooltip>\n                            </TooltipTrigger>\n                            <BodyText\n                                className=\"upload-item__description\"\n                                elementType={HTMLElementType.Div}\n                                size={Size.xs}>\n                                {description}\n                            </BodyText>\n                        </div>\n                        {isFunction(actions) ? actions(props) : actions}\n                    </div>\n                    {!isNullOrUndefined(uploadProgress) && (\n                        <ProgressBar\n                            aria-label={translateProject('progress')}\n                            value={uploadProgress}\n                            valueLabelPosition={Position.Right}\n                        />\n                    )}\n                </div>\n            </div>\n            {showErrorMessage && (\n                <>\n                    <Divider size={Size.sm} />\n                    <HelpText variant={HelpTextVariant.Danger}>{errorMsg}</HelpText>\n                </>\n            )}\n        </div>\n    );\n}\n"]}