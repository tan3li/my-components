{"version":3,"file":"getdatetimerangevalue.js","sourceRoot":"","sources":["../../../../src/components/inputs/datetimerangefields/getdatetimerangevalue.ts"],"names":[],"mappings":"AACA,OAAO,EAAC,QAAQ,EAAC,MAAM,6BAA6B,CAAC;AACrD,OAAO,EAAmB,aAAa,EAAC,MAAM,yBAAyB,CAAC;AAExE,MAAM,UAAU,qBAAqB,CACjC,KAA2D;IAE3D,IAAI,KAAK,EAAE;QACF,IAAA,KAAK,GAAS,KAAK,MAAd,EAAE,GAAG,GAAI,KAAK,IAAT,CAAU;QAEzB,IAAI,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;YAC1B,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC;SAChC;QACD,IAAI,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAE;YACtB,GAAG,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC;SAC5B;QAED,OAAO,EAAC,KAAK,OAAA,EAAE,GAAG,KAAA,EAAmD,CAAC;KACzE;IAED,OAAO,IAAI,CAAC;AAChB,CAAC","sourcesContent":["import {RangeValue} from '@react-types/shared';\nimport {isString} from '../../../utils/stringhelper';\nimport {CalendarDateTime, parseDateTime} from '@internationalized/date';\n\nexport function getDateTimeRangeValue(\n    value?: RangeValue<CalendarDateTime | string | null> | null\n): RangeValue<CalendarDateTime | null> | null {\n    if (value) {\n        let {start, end} = value;\n\n        if (start && isString(start)) {\n            start = parseDateTime(start);\n        }\n        if (end && isString(end)) {\n            end = parseDateTime(end);\n        }\n\n        return {start, end} as unknown as RangeValue<CalendarDateTime | null>;\n    }\n\n    return null;\n}\n"]}