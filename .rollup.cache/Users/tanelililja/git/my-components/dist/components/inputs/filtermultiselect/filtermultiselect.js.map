{"version":3,"file":"filtermultiselect.js","sourceRoot":"","sources":["../../../../src/components/inputs/filtermultiselect/filtermultiselect.tsx"],"names":[],"mappings":";;;AACA,OAAO,EAAC,wBAAwB,EAAiB,MAAM,oBAAoB,CAAC;AAC5E,OAAO,EAA0C,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAC,MAAM,OAAO,CAAC;AAC3F,OAAO,EAAC,UAAU,EAAC,MAAM,8BAA8B,CAAC;AACxD,OAAO,EAAC,IAAI,EAAC,MAAM,6BAA6B,CAAC;AACjD,OAAO,EAAC,SAAS,EAAC,MAAM,YAAY,CAAC;AACrC,OAAO,EAAC,wBAAwB,EAAC,MAAM,uCAAuC,CAAC;AAC/E,OAAO,EAAC,WAAW,EAAC,MAAM,WAAW,CAAC;AACtC,OAAO,EAAC,QAAQ,EAAC,MAAM,kCAAkC,CAAC;AAC1D,OAAO,EAAC,YAAY,EAAC,MAAM,iCAAiC,CAAC;AAC7D,OAAO,EAAC,MAAM,EAAE,OAAO,EAAC,MAAM,uBAAuB,CAAC;AACtD,OAAO,EAAC,WAAW,EAAC,MAAM,yBAAyB,CAAC;AACpD,OAAO,EAAC,uBAAuB,EAAC,MAAM,sCAAsC,CAAC;AAC7E,OAAO,EAAC,WAAW,EAAC,MAAM,0BAA0B,CAAC;AACrD,OAAO,EAAC,YAAY,EAAC,MAAM,2BAA2B,CAAC;AACvD,OAAO,EAAC,kBAAkB,EAAC,MAAM,mDAAmD,CAAC;AACrF,OAAO,EAAC,mBAAmB,EAAC,MAAM,uCAAuC,CAAC;AAC1E,OAAO,EAAC,sBAAsB,EAAC,MAAM,0CAA0C,CAAC;AAChF,OAAO,EAAC,WAAW,EAAC,MAAM,0BAA0B,CAAC;AACrD,OAAO,EAAC,mBAAmB,EAAC,MAAM,uCAAuC,CAAC;AAC1E,OAAO,EAAC,cAAc,EAAC,MAAM,kCAAkC,CAAC;AAChE,OAAO,EAAC,MAAM,EAAe,WAAW,EAAE,aAAa,EAAC,MAAM,uBAAuB,CAAC;AACtF,OAAO,EAAC,iBAAiB,EAAC,MAAM,gCAAgC,CAAC;AAEjE,OAAO,EAAC,YAAY,EAAC,MAAM,gCAAgC,CAAC;AAE5D,OAAO,EAAC,iBAAiB,EAAC,MAAM,yCAAyC,CAAC;AAC1E,OAAO,EAAC,sBAAsB,EAAC,MAAM,qCAAqC,CAAC;AAC3E,OAAO,EAAC,gCAAgC,EAAC,MAAM,+CAA+C,CAAC;AAyG/F,IAAM,gBAAgB;IAClB,GAAC,IAAI,CAAC,EAAE,IAAG,IAAI,CAAC,EAAE;IAClB,GAAC,IAAI,CAAC,EAAE,IAAG,IAAI,CAAC,EAAE;IAClB,GAAC,IAAI,CAAC,EAAE,IAAG,IAAI,CAAC,EAAE;OACrB,CAAC;AAEF,IAAM,gBAAgB;IAClB,GAAC,IAAI,CAAC,EAAE,IAAG,GAAG;IACd,GAAC,IAAI,CAAC,EAAE,IAAG,GAAG;IACd,GAAC,IAAI,CAAC,EAAE,IAAG,GAAG;OACjB,CAAC;AAEF,MAAM,UAAU,iBAAiB,CAA2D,EA0BzD;QAzB/B,cAAc,oBAAA,EACd,YAAY,kBAAA,EACZ,SAAS,eAAA,EACT,YAAY,kBAAA,EACZ,YAAY,kBAAA,EACZ,QAAQ,cAAA,EACR,mBAAkB,EAAlB,WAAW,mBAAG,IAAI,KAAA,EAClB,UAAU,gBAAA,EACV,SAAS,eAAA,EACT,oBAAmB,EAAnB,YAAY,mBAAG,IAAI,KAAA,EACnB,UAAU,gBAAA,EACV,aAAa,mBAAA,EACb,KAAK,WAAA,EACL,KAAK,WAAA,EACL,SAAS,eAAA,EACT,qBAAqB,2BAAA,EACN,kBAAkB,mBAAA,EACnB,iBAAiB,kBAAA,EAC/B,GAAG,SAAA,EACH,iBAAiB,uBAAA,EACjB,iBAAiB,uBAAA,EACF,kBAAkB,mBAAA,EACjC,gBAAgB,sBAAA,EAChB,YAAc,EAAd,IAAI,mBAAG,IAAI,CAAC,EAAE,KAAA,EACd,aAAa,mBAAA;IAEb,IAAM,eAAe,GAAG,kBAAkB,EAAE,CAAC;IAC7C,IAAM,WAAW,GAAG,SAAS,CAAC,EAAC,WAAW,EAAE,MAAM,EAAC,CAAC,CAAC;IACrD,IAAM,UAAU,GAAG,MAAM,CAAoB,IAAI,CAAC,CAAC;IACnD,IAAM,OAAO,GAAG,MAAM,CAAiB,IAAI,CAAC,CAAC;IACvC,IAAA,KAAwC,QAAQ,CAAC,KAAK,CAAC,EAAtD,eAAe,QAAA,EAAE,kBAAkB,QAAmB,CAAC;IACxD,IAAA,KAA8B,QAAQ,CAAC,EAAE,CAAC,EAAzC,UAAU,QAAA,EAAE,aAAa,QAAgB,CAAC;IAC3C,IAAA,KAAsB,QAAQ,CAAC,KAAK,CAAC,EAApC,MAAM,QAAA,EAAE,SAAS,QAAmB,CAAC;IACtC,IAAA,KAAoF,sBAAsB,EAAE,EAA3G,gBAAgB,sBAAA,EAAE,wBAAwB,8BAAA,EAAE,eAAe,qBAAA,EAAE,kBAAkB,wBAA4B,CAAC;IAC7G,IAAA,KAA4C,QAAQ,CAAiB,IAAI,CAAC,EAAzE,iBAAiB,QAAA,EAAE,oBAAoB,QAAkC,CAAC;IAC3E,IAAA,KAAoC,QAAQ,CAAU,kBAAkB,CAAC,CAAC,mBAAK,kBAAkB,QAAE,CAAC,CAAC,EAAE,CAAC,EAAvG,aAAa,QAAA,EAAE,gBAAgB,QAAwE,CAAC;IACzG,IAAA,KAAoC,QAAQ,CAAiB,IAAI,CAAC,EAAjE,aAAa,QAAA,EAAE,gBAAgB,QAAkC,CAAC;IACzE,IAAM,aAAa,GAAG,CAAC,aAAa,aAAb,aAAa,cAAb,aAAa,GAAI,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;IACvD,IAAM,SAAS,GAAG,wBAAwB,CAAC,aAAa,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;IAE9E,IAAM,mBAAmB,GAAG,UAAC,SAAkB;QAC3C,kBAAkB,CAAC,SAAS,CAAC,CAAC;QAC9B,kBAAkB,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;IAChD,CAAC,CAAC;IAEF,IAAM,aAAa,GAAG,UAAC,GAAW;QAC9B,aAAa,CAAC,GAAG,CAAC,CAAC;QACnB,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE,wBAAwB,CAAC,KAAK,CAAC,CAAC;QAElE,IAAI,CAAC,kBAAkB,EAAE;YACrB,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,GAAG,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SACvE;IACL,CAAC,CAAC;IAEF,IAAM,aAAa,GAAG,UAAC,gBAAyB;QAC5C,IAAI,cAAc,CAAC,gBAAgB,EAAE,kBAAkB,CAAC,EAAE;YACtD,QAAQ,CAAC,cAAc,EAAE,sBAAI,YAAY,KAAE,KAAK,EAAE,gBAAgB,CAAC,KAAK,EAAE,GAAyB,CAAC,CAAC;SACxG;IACL,CAAC,CAAC;IAEF,IAAM,kBAAkB,GAAG;QACvB,IAAM,gBAAgB,GAAG,EAAE,CAAC;QAE5B,gBAAgB,CAAC,gBAAgB,CAAC,CAAC;QACnC,aAAa,CAAC,gBAAgB,CAAC,CAAC;IACpC,CAAC,CAAC;IAEI,IAAA,KACF,WAAW,CAAC;QACR,gBAAgB,kBAAA;QAChB,YAAY,EAAE,IAAI;QAClB,UAAU,YAAA;QACV,MAAM,QAAA;QACN,KAAK,EAAE,SAAS;QAChB,YAAY,EAAE,UAAC,IAAI,IAAK,OAAA,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAvB,CAAuB;QAC/C,cAAc,EAAE,UAAC,IAAI,IAAK,OAAA,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,CAAC,CAAC,CAAC,KAAK,CAAC,EAArD,CAAqD;QAC/E,wBAAwB,0BAAA;QACxB,oBAAoB,EAAE,UAAC,EAA+B;gBAAhB,eAAe,kBAAA;YACjD,IAAI,eAAe,IAAI,iBAAiB,EAAE;gBACtC,mBAAmB,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;gBACxD,oBAAoB,mBAAK,iBAAiB,QAAE,CAAC;aAChD;QACL,CAAC;QACD,cAAc,EAAE,UAAC,EAAmB;gBAAV,SAAS,YAAA;YAC/B,IAAI,CAAC,YAAY,EAAE;gBACf,OAAO;aACV;YAED,IAAI,SAAS,EAAE;gBACX,0BAA0B;gBAC1B,QAAQ,CAAC,kBAAkB,EAAE,EAAE,EAAE,wBAAwB,CAAC,KAAK,CAAC,CAAC;gBACjE,aAAa,CAAC,EAAE,CAAC,CAAC;gBAClB,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBACvB,oBAAoB,mBAAK,aAAa,QAAE,CAAC;aAC5C;iBAAM;gBACH,oBAAoB,CAAC,IAAI,CAAC,CAAC;aAC9B;YAED,SAAS,CAAC,SAAS,CAAC,CAAC;YACrB,iBAAiB,aAAjB,iBAAiB,uBAAjB,iBAAiB,CAAG,SAAS,CAAC,CAAC;QACnC,CAAC;QACD,YAAY,EAAE,UAAC,KAAK,EAAE,gBAAgB;YAC3B,IAAA,OAAO,GAAU,gBAAgB,QAA1B,EAAE,IAAI,GAAI,gBAAgB,KAApB,CAAqB;YAEzC,QAAQ,IAAI,EAAE;gBACV,KAAK,WAAW,CAAC,gBAAgB,CAAC,iBAAiB,CAAC;gBACpD,KAAK,WAAW,CAAC,gBAAgB,CAAC,SAAS;oBACvC,6BACO,OAAO,KACV,MAAM,EAAE,IAAI,EACZ,gBAAgB,EAAE,KAAK,CAAC,gBAAgB,CAAC,kCAAkC;wBAC7E;gBACN,KAAK,WAAW,CAAC,gBAAgB,CAAC,SAAS;oBACvC,6DAA6D;oBAC7D,6BACO,OAAO,KACV,YAAY,EAAE,KAAK,CAAC,YAAY,EAChC,UAAU,EAAE,KAAK,CAAC,UAAU,EAC5B,gBAAgB,EAAE,KAAK,CAAC,gBAAgB,EACxC,MAAM,EAAE,IAAI,IACd;gBACN;oBACI,OAAO,OAAO,CAAC;aACtB;QACL,CAAC;QACD,aAAa,EAAE,UAAC,OAAO;YACZ,IAAA,IAAI,GAAI,OAAO,KAAX,CAAY;YAEvB,QAAQ,IAAI,EAAE;gBACV,KAAK,WAAW,CAAC,gBAAgB,CAAC,mBAAmB,CAAC;gBACtD,KAAK,WAAW,CAAC,gBAAgB,CAAC,qBAAqB;oBACnD,IAAI,OAAO,CAAC,gBAAgB,KAAK,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;wBACnD,oFAAoF;wBACpF,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;qBACjC;oBACD,MAAM;gBACV;oBACI,MAAM;aACb;QACL,CAAC;KACJ,CAAC,EAzEC,oBAAoB,0BAAA,EAAE,aAAa,mBAAA,EAAE,YAAY,kBAAA,EAAE,aAAa,mBAAA,EAAE,YAAY,kBAAA,EAAE,QAAQ,cAAA,EAAE,SAAS,eAyEpG,CAAC;IAEP,IAAM,sBAAsB,GAAG;QAC3B,oBAAoB,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC,CAAC;IAEF,IAAM,wBAAwB,GAAG;QAC7B,IAAI,iBAAiB,EAAE;YACnB,gBAAgB,mBAAK,iBAAiB,QAAE,CAAC;YACzC,aAAa,CAAC,iBAAiB,CAAC,CAAC;YACjC,SAAS,EAAE,CAAC;SACf;IACL,CAAC,CAAC;IAEF,SAAS,CAAC;QACN,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,mBAAK,kBAAkB,QAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxE,CAAC,EAAE,CAAC,kBAAkB,CAAC,CAAC,CAAC;IAEzB,gCAAgC,CAAC,EAAC,MAAM,QAAA,EAAE,SAAS,EAAE,aAAa,CAAC,MAAM,EAAC,CAAC,CAAC;IAE5E,6DAA6D;IAC7D,IAAM,KAA2C,oBAAoB,EAAE,EAAhE,OAAO,aAAA,EAAE,OAAO,aAAA,EAAK,iBAAiB,cAAvC,sBAAwC,CAAyB,CAAC;IACxE,IAAM,UAAU,GAAG,aAAa,CAAC,EAAE,EAAE,EAAC,gBAAgB,EAAE,IAAI,EAAC,CAAC,CAAC;IAC/D,IAAM,SAAS,GAAG,YAAY,CAAC,EAAC,GAAG,EAAE,OAAO,EAAC,EAAE,EAAC,gBAAgB,EAAE,IAAI,EAAC,CAAC,CAAC;IACzE,IAAM,UAAU,GAAG,aAAa,EAAE,CAAC;IACnC,IAAM,aAAa,GAAG,aAAa,CAAC,MAAM,CAAC;IAC3C,IAAM,iBAAiB,GAAG,iBAAiB,aAAjB,iBAAiB,uBAAjB,iBAAiB,CAAE,MAAM,CAAC;IACpD,IAAM,gBAAgB,GAAG,mBAAmB,CAAC,iBAAiB,aAAjB,iBAAiB,cAAjB,iBAAiB,GAAI,EAAE,CAAC,CAAC;IACtE,IAAM,sBAAsB,GAAG,iBAAiB,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,iBAAiB,CAAC;IACxG,IAAI,iBAAiB,GAAG,sBAAsB,GAAG,CAAC,CAAC,CAAC,CAAC,YAAK,sBAAsB,MAAG,CAAC,CAAC,CAAC,EAAE,CAAC;IAEzF,IAAI,sBAAsB,KAAK,CAAC,EAAE;QAC9B,iBAAiB,GAAG,YAAK,CAAC,iBAAiB,aAAjB,iBAAiB,cAAjB,iBAAiB,GAAI,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAE,CAAC;KAC3E;IAED,OAAO,CACH,8BACI,KAAC,YAAY,aACT,SAAS,EAAE,UAAU,CAAC,oBAAoB,EAAE,SAAS,CAAC,EACtD,gBAAgB,EAAE,EAAC,OAAO,EAAE,kBAAkB,EAAC,EAC/C,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,aAAa,GAAG,CAAC,EAC3B,UAAU,EAAE,UAAU,EACtB,WAAW,EAAE,YAAY,EACzB,MAAM,EAAE,MAAM,EACd,UAAU,EAAE,UAAU,EACtB,KAAK,EAAE,KAAK,EACZ,UAAU,wBAAM,UAAU,KAAE,OAAO,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,iBAAiB,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KACzF,YAAY,EAAE,UAAC,SAAS,IAAK,OAAA,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,EAAtC,CAAsC,EACnE,GAAG,EAAE,GAAG,EACR,eAAe,EAAE,WAAW,EAC5B,gBAAgB,EAAE,gBAAgB,EAClC,IAAI,EAAE,IAAI,EACV,aAAa,EAAE,aAAa,EAC5B,iBAAiB,wBACV,iBAAiB,KACpB,GAAG,EAAE,UAAU,mBAEnB,8BACK,KAAK,EACL,iBAAiB,IACnB,IACQ,EACf,KAAC,OAAO,aACJ,SAAS,EAAC,wBAAwB,EAClC,MAAM,EAAE,MAAM,EACd,SAAS,EAAE,GAAG,EACd,YAAY,EAAE,SAAS,EACvB,SAAS,EAAC,cAAc,EACxB,UAAU,EAAE,IAAI,EAChB,KAAK,EAAE,EAAC,KAAK,EAAE,SAAS,aAAT,SAAS,cAAT,SAAS,GAAI,gBAAgB,CAAC,IAAI,CAAC,EAAC,EACnD,UAAU,EAAE,UAAU,gBACtB,KAAC,MAAM,2BAAa,KAAK,EAAE,SAAS,EAAC,uBAAuB,gBACxD,wBAAK,SAAS,EAAC,qBAAqB,iBAChC,uBAAK,SAAS,EAAC,4BAA4B,gBACvC,KAAC,WAAW,eACJ,UAAU,kBACF,eAAe,CAAC,QAAQ,CAAC,EACrC,SAAS,EAAE,IAAI,EACf,QAAQ,EAAE,aAAa,EACvB,aAAa,EAAE,mBAAmB,EAClC,WAAW,EAAE,iBAAiB,aAAjB,iBAAiB,cAAjB,iBAAiB,GAAI,eAAe,CAAC,QAAQ,CAAC,EAC3D,IAAI,EAAE,IAAI,IACZ,IACA,EACN,0BAAS,SAAS,IAAE,SAAS,EAAC,0BAA0B,EAAC,QAAQ,EAAE,CAAC,CAAC,iBAChE,aAAa,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,SAAS,IAAI,CACzC,KAAC,uBAAuB,IAAa,IAAI,EAAE,IAAI,IAAlB,OAAO,CAAe,CACtD,EACA,sBAAsB,CAAC;wCACpB,UAAU,EAAE,EAAE;wCACd,YAAY,cAAA;wCACZ,YAAY,cAAA;wCACZ,YAAY,cAAA;wCACZ,gBAAgB,kBAAA;wCAChB,eAAe,EAAE,eAAe,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS;wCAC9D,aAAa,eAAA;wCACb,KAAK,EAAE,aAAa;wCACpB,iBAAiB,mBAAA;wCACjB,gBAAgB,kBAAA;wCAChB,IAAI,MAAA;qCACP,CAAC,EACD,SAAS,IAAI,KAAC,WAAW,IAAe,IAAI,EAAE,IAAI,IAApB,SAAS,CAAe,EACtD,qBAAqB,IAAI,KAAC,YAAY,IAAc,SAAS,EAAE,qBAAqB,IAAzC,QAAQ,CAAqC,KACvF,EACN,wBAAK,SAAS,EAAC,4BAA4B,iBACtC,WAAW,IAAI,CACZ,KAAC,MAAM,aACH,OAAO,EAAE,sBAAsB,EAC/B,IAAI,EAAE,gBAAgB,CAAC,IAAI,CAAC,EAC5B,KAAK,EAAE,WAAW,CAAC,KAAK,EACxB,OAAO,EAAE,aAAa,CAAC,MAAM,gBAC5B,eAAe,CAAC,OAAO,CAAC,IACpB,CACZ,EACD,uBAAK,SAAS,EAAC,sCAAsC,gBACjD,MAAC,MAAM,aACH,UAAU,EAAE,CAAC,WAAW,IAAI,iBAAiB,KAAK,CAAC,EACnD,OAAO,EAAE,wBAAwB,EACjC,IAAI,EAAE,gBAAgB,CAAC,IAAI,CAAC,EAC5B,KAAK,EAAE,WAAW,CAAC,IAAI,EACvB,OAAO,EAAE,aAAa,CAAC,MAAM,iBAC5B,eAAe,CAAC,OAAO,CAAC,EACxB,iBAAiB,CAAC,CAAC,CAAC,YAAK,iBAAiB,MAAG,CAAC,CAAC,CAAC,EAAE,KAC9C,IACP,KACJ,KACJ,IACD,IACH,IACX,CACN,CAAC;AACN,CAAC","sourcesContent":["import {AnyObject} from '../../../hooks/usechangeparamscallback.js';\nimport {InputChangeTriggerAction, SelectItemBase} from '../select/index.js';\nimport {CSSProperties, ReactNode, RefAttributes, useEffect, useRef, useState} from 'react';\nimport {classNames} from '../../../utils/classnames.js';\nimport {Size} from '../../../constants/index.js';\nimport {useFilter} from 'react-aria';\nimport {createFlatSelectItemList} from '../select/createflatselectitemlist.js';\nimport {useCombobox} from 'downshift';\nimport {safeCall} from '../../../utils/functionhelper.js';\nimport {FilterButton} from '../filterselect/filterbutton.js';\nimport {Dialog, Popover} from 'react-aria-components';\nimport {SearchField} from '../searchfield/index.js';\nimport {SelectOptionsEmptyState} from '../select/selectoptionsemptystate.js';\nimport {LoadingItem} from '../select/loadingitem.js';\nimport {BottomLoader} from '../select/bottomloader.js';\nimport {useTranslateCommon} from '../../../hooks/translations/usetranslatecommon.js';\nimport {useSelectedItemsMap} from '../multiselect/useselecteditemsmap.js';\nimport {renderMultiSelectItems} from '../multiselect/rendermultiselectitems.js';\nimport {filterItems} from '../select/filteritems.js';\nimport {updateSelectedItems} from '../multiselect/updateselecteditems.js';\nimport {isItemsChanged} from '../multiselect/isitemschanged.js';\nimport {Button, ButtonProps, ButtonStyle, ButtonVariant} from '../../action/index.js';\nimport {isNullOrUndefined} from '../../../utils/objecthelper.js';\nimport {IconName} from '../../media/index.js';\nimport {scrollBottom} from '../../../utils/scrollbottom.js';\nimport {SelectOptionContentProps} from '../select/selectoptioncontentprops.js';\nimport {InteractionSource} from '../../../constants/interactionsource.js';\nimport {useSelectItemHighlight} from '../select/useselectitemhighlight.js';\nimport {useSelectOptionCountAnnouncement} from '../select/useselectoptioncountannouncement.js';\n\ntype FilterMultiSelectSize = Size.md | Size.sm | Size.xs;\n\nexport interface FilterMultiSelectProps<P extends AnyObject, TItem extends SelectItemBase<TItem>>\n    extends RefAttributes<HTMLDivElement> {\n    /**\n     * Handler that is called with object containing selection state value and changeParams when the element's\n     * selection state changes.\n     */\n    changeCallback?: (args: P & {value: TItem[]}) => void;\n    /**\n     * Object which is provided with element's selection state value property in changeCallback.\n     */\n    changeParams?: P;\n    /**\n     * CSS class name for the element.\n     */\n    className?: string;\n    /**\n     * The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.\n     */\n    disabledKeys?: Array<TItem['value']>;\n    /**\n     * Set of item keys whose children should be visible.\n     */\n    expandedKeys?: Set<TItem['value']>;\n    /**\n     * Help text\n     */\n    helpText?: string;\n    /**\n     * Whether selected value can be cleared. True by default.\n     */\n    isClearable?: boolean;\n    /**\n     * Whether element is disabled.\n     */\n    isDisabled?: boolean;\n    /**\n     * Whether loading item should be displayed among options.\n     */\n    isLoading?: boolean;\n    /**\n     * Whether menu can be opened for selection.\n     */\n    isSelectable?: boolean;\n    /**\n     * Whether to show skeleton instead of an actual element.\n     */\n    isSkeleton?: boolean;\n    /**\n     * Custom CSS class name for item.\n     */\n    itemClassName?: string | ((item: TItem) => string);\n    /**\n     * List of items to show.\n     */\n    items: TItem[];\n    /**\n     * Label for the element.\n     */\n    label: string;\n    /**\n     * Width for the menu.\n     */\n    menuWidth?: CSSProperties['width'];\n    /**\n     * Handler that is called when bottom loader is reached.\n     */\n    onBottomLoaderVisible?: (entry: IntersectionObserverEntry) => void;\n    /**\n     * Handler that is called when something is typed to input field. Local search will not be used if this is set.\n     */\n    onInputChange?: (value: string, inputChangeTrigger: InputChangeTriggerAction) => void;\n    /**\n     * Handler that is called when menu open status changes.\n     */\n    onOpenChange?: (isOpen: boolean) => void;\n    /**\n     * Custom renderer for item content.\n     */\n    renderItemContent?: (props: SelectOptionContentProps<TItem>) => ReactNode;\n    /**\n     * Placeholder to show in search field.\n     */\n    searchPlaceholder?: string;\n    /**\n     * List of selected items.\n     */\n    selectedItems?: TItem[];\n    /**\n     * Whether to show icon for help text.\n     */\n    showHelpTextIcon?: boolean;\n    /**\n     * Size of the element.\n     */\n    size?: FilterMultiSelectSize;\n    /**\n     * Icon that will be rendered at the start of toggle button.\n     */\n    startIconName?: IconName;\n}\n\nconst footerButtonSize: Record<FilterMultiSelectSize, ButtonProps['size']> = {\n    [Size.xs]: Size.sm,\n    [Size.sm]: Size.md,\n    [Size.md]: Size.lg\n};\n\nconst defaultMenuWidth: Record<FilterMultiSelectSize, number> = {\n    [Size.xs]: 250,\n    [Size.sm]: 250,\n    [Size.md]: 300\n};\n\nexport function FilterMultiSelect<P extends AnyObject, TItem extends SelectItemBase<TItem>>({\n    changeCallback,\n    changeParams,\n    className,\n    disabledKeys,\n    expandedKeys,\n    helpText,\n    isClearable = true,\n    isDisabled,\n    isLoading,\n    isSelectable = true,\n    isSkeleton,\n    itemClassName,\n    items,\n    label,\n    menuWidth,\n    onBottomLoaderVisible,\n    onInputChange: propsOnInputChange,\n    onOpenChange: propsOnOpenChange,\n    ref,\n    renderItemContent,\n    searchPlaceholder,\n    selectedItems: propsSelectedItems,\n    showHelpTextIcon,\n    size = Size.md,\n    startIconName\n}: FilterMultiSelectProps<P, TItem>) {\n    const translateCommon = useTranslateCommon();\n    const localFilter = useFilter({sensitivity: 'base'});\n    const triggerRef = useRef<HTMLButtonElement>(null);\n    const menuRef = useRef<HTMLDivElement>(null);\n    const [isSearchFocused, setIsSearchFocused] = useState(false);\n    const [inputValue, setInputValue] = useState('');\n    const [isOpen, setIsOpen] = useState(false);\n    const {highlightedIndex, onHighlightedIndexChange, highlightSource, setHighlightSource} = useSelectItemHighlight();\n    const [tempSelectedItems, setTempSelectedItems] = useState<TItem[] | null>(null);\n    const [selectedItems, setSelectedItems] = useState<TItem[]>(propsSelectedItems ? [...propsSelectedItems] : []);\n    const [filteredItems, setFilteredItems] = useState<TItem[] | null>(null);\n    const itemsToRender = (filteredItems ?? items).slice();\n    const flatItems = createFlatSelectItemList(itemsToRender, true, expandedKeys);\n\n    const onSearchFocusChange = (isFocused: boolean) => {\n        setIsSearchFocused(isFocused);\n        setHighlightSource(InteractionSource.Mouse);\n    };\n\n    const onInputChange = (val: string) => {\n        setInputValue(val);\n        safeCall(propsOnInputChange, val, InputChangeTriggerAction.Input);\n\n        if (!propsOnInputChange) {\n            setFilteredItems(val ? filterItems(items, val, localFilter) : null);\n        }\n    };\n\n    const triggerChange = (newSelectedItems: TItem[]) => {\n        if (isItemsChanged(newSelectedItems, propsSelectedItems)) {\n            safeCall(changeCallback, {...changeParams, value: newSelectedItems.slice()} as P & {value: TItem[]});\n        }\n    };\n\n    const clearSelectedItems = () => {\n        const newSelectedItems = [];\n\n        setSelectedItems(newSelectedItems);\n        triggerChange(newSelectedItems);\n    };\n\n    const {getToggleButtonProps, getLabelProps, getMenuProps, getInputProps, getItemProps, openMenu, closeMenu} =\n        useCombobox({\n            highlightedIndex,\n            selectedItem: null,\n            inputValue,\n            isOpen,\n            items: flatItems,\n            itemToString: (item) => (item ? item.text : ''),\n            isItemDisabled: (item) => (item ? !!disabledKeys?.includes(item.value) : false),\n            onHighlightedIndexChange,\n            onSelectedItemChange: ({selectedItem: newSelectedItem}) => {\n                if (newSelectedItem && tempSelectedItems) {\n                    updateSelectedItems(tempSelectedItems, newSelectedItem);\n                    setTempSelectedItems([...tempSelectedItems]);\n                }\n            },\n            onIsOpenChange: ({isOpen: newIsOpen}) => {\n                if (!isSelectable) {\n                    return;\n                }\n\n                if (newIsOpen) {\n                    // Clear filtering on open\n                    safeCall(propsOnInputChange, '', InputChangeTriggerAction.Focus);\n                    setInputValue('');\n                    setFilteredItems(null);\n                    setTempSelectedItems([...selectedItems]);\n                } else {\n                    setTempSelectedItems(null);\n                }\n\n                setIsOpen(newIsOpen);\n                propsOnOpenChange?.(newIsOpen);\n            },\n            stateReducer: (state, actionAndChanges) => {\n                const {changes, type} = actionAndChanges;\n\n                switch (type) {\n                    case useCombobox.stateChangeTypes.InputKeyDownEnter:\n                    case useCombobox.stateChangeTypes.ItemClick:\n                        return {\n                            ...changes,\n                            isOpen: true, // keep the menu open after selection\n                            highlightedIndex: state.highlightedIndex // ...with same option highlighted\n                        };\n                    case useCombobox.stateChangeTypes.InputBlur:\n                        // Keep the current state on input blur (out-click, Tab etc.)\n                        return {\n                            ...changes,\n                            selectedItem: state.selectedItem,\n                            inputValue: state.inputValue,\n                            highlightedIndex: state.highlightedIndex,\n                            isOpen: true\n                        };\n                    default:\n                        return changes;\n                }\n            },\n            onStateChange: (changes) => {\n                const {type} = changes;\n\n                switch (type) {\n                    case useCombobox.stateChangeTypes.InputKeyDownArrowUp:\n                    case useCombobox.stateChangeTypes.InputKeyDownArrowDown:\n                        if (changes.highlightedIndex === flatItems.length - 1) {\n                            // scroll at the bottom when last item is highlighted to make sure loader is visible\n                            scrollBottom(menuRef.current);\n                        }\n                        break;\n                    default:\n                        break;\n                }\n            }\n        });\n\n    const clearTempSelectedItems = () => {\n        setTempSelectedItems([]);\n    };\n\n    const confirmTempSelectedItems = () => {\n        if (tempSelectedItems) {\n            setSelectedItems([...tempSelectedItems]);\n            triggerChange(tempSelectedItems);\n            closeMenu();\n        }\n    };\n\n    useEffect(() => {\n        setSelectedItems(propsSelectedItems ? [...propsSelectedItems] : []);\n    }, [propsSelectedItems]);\n\n    useSelectOptionCountAnnouncement({isOpen, itemCount: itemsToRender.length});\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const {onClick, onPress, ...toggleButtonProps} = getToggleButtonProps();\n    const inputProps = getInputProps({}, {suppressRefError: true});\n    const menuProps = getMenuProps({ref: menuRef}, {suppressRefError: true});\n    const labelProps = getLabelProps();\n    const selectedCount = selectedItems.length;\n    const tempSelectedCount = tempSelectedItems?.length;\n    const selectedItemsMap = useSelectedItemsMap(tempSelectedItems ?? []);\n    const selectedCountForButton = isNullOrUndefined(tempSelectedCount) ? selectedCount : tempSelectedCount;\n    let selectedItemsText = selectedCountForButton > 0 ? ` (${selectedCountForButton})` : '';\n\n    if (selectedCountForButton === 1) {\n        selectedItemsText = `: ${(tempSelectedItems ?? selectedItems)[0].text}`;\n    }\n\n    return (\n        <>\n            <FilterButton\n                className={classNames('filter-multiselect', className)}\n                clearButtonProps={{onPress: clearSelectedItems}}\n                helpText={helpText}\n                isActive={selectedCount > 0}\n                isDisabled={isDisabled}\n                isFocusable={isSelectable}\n                isOpen={isOpen}\n                isSkeleton={isSkeleton}\n                label={label}\n                labelProps={{...labelProps, htmlFor: [labelProps.htmlFor, toggleButtonProps.id].join(' ')}}\n                onOpenChange={(newIsOpen) => (newIsOpen ? openMenu() : closeMenu())}\n                ref={ref}\n                showClearButton={isClearable}\n                showHelpTextIcon={showHelpTextIcon}\n                size={size}\n                startIconName={startIconName}\n                toggleButtonProps={{\n                    ...toggleButtonProps,\n                    ref: triggerRef\n                }}>\n                <>\n                    {label}\n                    {selectedItemsText}\n                </>\n            </FilterButton>\n            <Popover\n                className=\"filter-select__popover\"\n                isOpen={isOpen}\n                maxHeight={375}\n                onOpenChange={closeMenu}\n                placement=\"bottom start\"\n                shouldFlip={true}\n                style={{width: menuWidth ?? defaultMenuWidth[size]}}\n                triggerRef={triggerRef}>\n                <Dialog aria-label={label} className=\"filter-select__dialog\">\n                    <div className=\"filter-select__menu\">\n                        <div className=\"filter-select__menu-header\">\n                            <SearchField\n                                {...inputProps}\n                                aria-label={translateCommon('search')}\n                                autoFocus={true}\n                                onChange={onInputChange}\n                                onFocusChange={onSearchFocusChange}\n                                placeholder={searchPlaceholder ?? translateCommon('search')}\n                                size={size}\n                            />\n                        </div>\n                        <div {...menuProps} className=\"filter-select__menu-body\" tabIndex={-1}>\n                            {itemsToRender.length === 0 && !isLoading && (\n                                <SelectOptionsEmptyState key=\"empty\" size={size} />\n                            )}\n                            {renderMultiSelectItems({\n                                createText: '',\n                                disabledKeys,\n                                expandedKeys,\n                                getItemProps,\n                                highlightedIndex,\n                                highlightSource: isSearchFocused ? highlightSource : undefined,\n                                itemClassName,\n                                items: itemsToRender,\n                                renderItemContent,\n                                selectedItemsMap,\n                                size\n                            })}\n                            {isLoading && <LoadingItem key=\"loading\" size={size} />}\n                            {onBottomLoaderVisible && <BottomLoader key=\"loader\" onVisible={onBottomLoaderVisible} />}\n                        </div>\n                        <div className=\"filter-select__menu-footer\">\n                            {isClearable && (\n                                <Button\n                                    onPress={clearTempSelectedItems}\n                                    size={footerButtonSize[size]}\n                                    style={ButtonStyle.Plain}\n                                    variant={ButtonVariant.Danger}>\n                                    {translateCommon('reset')}\n                                </Button>\n                            )}\n                            <div className=\"filter-select__menu-footer-btn-group\">\n                                <Button\n                                    isDisabled={!isClearable && tempSelectedCount === 0}\n                                    onPress={confirmTempSelectedItems}\n                                    size={footerButtonSize[size]}\n                                    style={ButtonStyle.Fill}\n                                    variant={ButtonVariant.Accent}>\n                                    {translateCommon('apply')}\n                                    {tempSelectedCount ? ` (${tempSelectedCount})` : ''}\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                </Dialog>\n            </Popover>\n        </>\n    );\n}\n"]}