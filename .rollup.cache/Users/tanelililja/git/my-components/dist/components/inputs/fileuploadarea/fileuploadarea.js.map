{"version":3,"file":"fileuploadarea.js","sourceRoot":"","sources":["../../../../src/components/inputs/fileuploadarea/fileuploadarea.tsx"],"names":[],"mappings":"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","sourcesContent":["import {DropZone, DropZoneProps, Text} from 'react-aria-components';\nimport {FileTrigger, FileTriggerProps} from './filetrigger.js';\nimport {classNames} from '../../../utils/classnames.js';\nimport {Button, ButtonStyle, ButtonVariant} from '../../action/index.js';\nimport {useTranslateCommon} from '../../../hooks/translations/usetranslatecommon.js';\nimport {HTMLElementType, Size} from '../../../constants/index.js';\nimport {Icon, IconName, iconNames, IconSize} from '../../media/index.js';\nimport {BodyText, HelpText, HelpTextProps, LABEL_SIZE_LG_CSS_CLASS} from '../../text/index.js';\nimport {DropEvent, DropOperation} from 'react-aria';\nimport {safeCall} from '../../../utils/functionhelper.js';\nimport {RefAttributes} from 'react';\nimport {SkeletonFileUploadArea} from '../../feedback/skeleton/skeletonfileuploadarea.js';\n\nexport interface FileUploadAreaProps\n    extends Omit<DropZoneProps, 'getDropOperation' | 'onDrop'>,\n        RefAttributes<HTMLDivElement> {\n    /**\n     * Specifies what mime type of files are allowed.\n     */\n    acceptedFileTypes?: FileTriggerProps['acceptedFileTypes'];\n    /**\n     * Whether multiple files can be selected.\n     */\n    allowsMultiple?: FileTriggerProps['allowsMultiple'];\n    /**\n     * Description text.\n     */\n    descriptionText: string;\n    /**\n     * Descriptive icon.\n     */\n    helpTextProps?: HelpTextProps;\n    /**\n     * Descriptive icon.\n     */\n    iconName: IconName;\n    /**\n     * Whether to show skeleton instead of an actual element.\n     */\n    isSkeleton?: boolean;\n    /**\n     * Main text\n     */\n    mainText: string;\n    /**\n     * Handler that is called when a valid drag is dropped on the drop target.\n     */\n    onDrop?: (files: File[]) => void;\n    /**\n     * Handler when a user selects a file.\n     */\n    onSelect?: (files: File[]) => void;\n}\n\nexport function FileUploadArea({\n    acceptedFileTypes,\n    allowsMultiple,\n    className,\n    descriptionText,\n    helpTextProps,\n    iconName,\n    isSkeleton,\n    mainText,\n    onSelect,\n    ref,\n    ...props\n}: FileUploadAreaProps) {\n    const {isDisabled} = props;\n    const translateCommon = useTranslateCommon();\n\n    const onDrop = async (e: DropEvent) => {\n        const items = e.items;\n        const files: File[] = [];\n\n        for (let i = 0, len = items.length; i < len; i++) {\n            const item = items[i];\n\n            if (item.kind === 'file' && (!acceptedFileTypes || acceptedFileTypes.includes(item.type))) {\n                files.push(await item.getFile());\n            }\n        }\n\n        safeCall(props.onDrop, files);\n    };\n\n    if (isSkeleton) {\n        return <SkeletonFileUploadArea />;\n    }\n\n    return (\n        <div className=\"file-upload-area-wrapper\" ref={ref}>\n            <DropZone\n                {...props}\n                className={classNames('file-upload-area', className)}\n                getDropOperation={(types) => {\n                    let op: DropOperation = 'copy';\n\n                    if (acceptedFileTypes) {\n                        for (const fileType of acceptedFileTypes) {\n                            if (types.has(fileType)) {\n                                return op;\n                            }\n                        }\n\n                        op = 'cancel';\n                    }\n\n                    return op;\n                }}\n                onDrop={(e) => {\n                    onDrop(e);\n                }}>\n                <div className=\"file-upload-area__inner\">\n                    <Icon className=\"file-upload-area__icon\" name={iconName} size={IconSize.XXL} />\n                    <div className=\"file-upload-area__content\">\n                        <div className=\"file-upload-area__texts\">\n                            <Text\n                                className={`${LABEL_SIZE_LG_CSS_CLASS} file-upload-area__main-text`}\n                                elementType={HTMLElementType.Div}\n                                slot=\"label\">\n                                <strong>{mainText}</strong>\n                            </Text>\n                            <BodyText\n                                className=\"file-upload-area__description-text\"\n                                elementType={HTMLElementType.Div}\n                                size={Size.sm}>\n                                {descriptionText}\n                            </BodyText>\n                        </div>\n                        <FileTrigger\n                            acceptedFileTypes={acceptedFileTypes}\n                            allowsMultiple={allowsMultiple}\n                            onSelect={(files) => {\n                                safeCall(onSelect, files ? Array.from(files) : []);\n                            }}>\n                            <Button\n                                isDisabled={isDisabled}\n                                size={Size.md}\n                                startIconName={iconNames.Upload}\n                                style={ButtonStyle.Outline}\n                                variant={ButtonVariant.Neutral}>\n                                {translateCommon('upload')}\n                            </Button>\n                        </FileTrigger>\n                    </div>\n                </div>\n            </DropZone>\n            {helpTextProps && (\n                <HelpText\n                    {...helpTextProps}\n                    className={classNames('file-upload-area__help-text', helpTextProps.className)}\n                />\n            )}\n        </div>\n    );\n}\n"]}