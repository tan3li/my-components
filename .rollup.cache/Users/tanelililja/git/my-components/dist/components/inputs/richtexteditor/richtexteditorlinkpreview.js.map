{"version":3,"file":"richtexteditorlinkpreview.js","sourceRoot":"","sources":["../../../../src/components/inputs/richtexteditor/richtexteditorlinkpreview.tsx"],"names":[],"mappings":";;AAAA,OAAO,EAAC,gBAAgB,EAAC,MAAM,eAAe,CAAC;AAC/C,OAAO,EAAC,KAAK,EAAE,uBAAuB,EAAC,MAAM,qBAAqB,CAAC;AACnE,OAAO,EAAC,WAAW,EAAE,IAAI,EAAC,MAAM,6BAA6B,CAAC;AAC9D,OAAO,EAAC,kBAAkB,EAAC,MAAM,mDAAmD,CAAC;AACrF,OAAO,EAAC,MAAM,EAAE,WAAW,EAAE,aAAa,EAAC,MAAM,uBAAuB,CAAC;AACzE,OAAO,EAAC,OAAO,EAAC,MAAM,4BAA4B,CAAC;AACnD,OAAO,EAAC,wBAAwB,EAAC,MAAM,+BAA+B,CAAC;AAMvE,MAAM,UAAU,yBAAyB,CAAC,EAA8C;QAA7C,YAAY,kBAAA;IAC5C,IAAA,MAAM,GAAI,gBAAgB,EAAE,OAAtB,CAAuB;IACpC,IAAM,eAAe,GAAG,kBAAkB,EAAE,CAAC;IAE7C,IAAI,CAAC,MAAM,EAAE;QACT,OAAO,IAAI,CAAC;KACf;IAED,IAAM,GAAG,GAAG,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC;IAE9C,OAAO,CACH,wBAAK,SAAS,EAAC,2BAA2B,iBACtC,KAAC,KAAK,aAAC,IAAI,EAAE,IAAI,CAAC,EAAE,gBAAG,eAAe,CAAC,UAAU,CAAC,IAAS,EAC3D,qBACI,SAAS,EAAE,4BAAqB,uBAAuB,CAAE,EACzD,IAAI,EAAE,GAAG,EACT,GAAG,EAAC,8BAA8B,EAClC,MAAM,EAAC,QAAQ,EACf,KAAK,EAAE,GAAG,gBACT,GAAG,IACJ,EACJ,KAAC,wBAAwB,aAAC,YAAY,EAAE,YAAY,gBAChD,KAAC,MAAM,aAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,WAAW,CAAC,KAAK,EAAE,OAAO,EAAE,aAAa,CAAC,OAAO,gBAC1E,eAAe,CAAC,MAAM,CAAC,IACnB,IACc,EAC3B,KAAC,OAAO,IAAC,WAAW,EAAE,WAAW,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,GAAI,EAC7D,KAAC,MAAM,aACH,OAAO,EAAE;oBACL,MAAM,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC,GAAG,EAAE,CAAC;gBACrE,CAAC,EACD,IAAI,EAAE,IAAI,CAAC,EAAE,EACb,KAAK,EAAE,WAAW,CAAC,KAAK,EACxB,OAAO,EAAE,aAAa,CAAC,MAAM,gBAC5B,eAAe,CAAC,QAAQ,CAAC,IACrB,KACP,CACT,CAAC;AACN,CAAC","sourcesContent":["import {useCurrentEditor} from '@tiptap/react';\nimport {Label, LABEL_SIZE_MD_CSS_CLASS} from '../../text/index.js';\nimport {Orientation, Size} from '../../../constants/index.js';\nimport {useTranslateCommon} from '../../../hooks/translations/usetranslatecommon.js';\nimport {Button, ButtonStyle, ButtonVariant} from '../../action/index.js';\nimport {Divider} from '../../datadisplay/index.js';\nimport {RichTextEditorLinkDialog} from './richtexteditorlinkdialog.js';\n\ninterface RichTextEditorLinkPreviewProps {\n    onOpenChange?: (isOpen: boolean) => void;\n}\n\nexport function RichTextEditorLinkPreview({onOpenChange}: RichTextEditorLinkPreviewProps) {\n    const {editor} = useCurrentEditor();\n    const translateCommon = useTranslateCommon();\n\n    if (!editor) {\n        return null;\n    }\n\n    const url = editor.getAttributes('link').href;\n\n    return (\n        <div className=\"text-editor__link-preview\">\n            <Label size={Size.md}>{translateCommon('visitURL')}</Label>\n            <a\n                className={`text-editor__link ${LABEL_SIZE_MD_CSS_CLASS}`}\n                href={url}\n                rel=\"noopener noreferrer nofollow\"\n                target=\"_blank\"\n                title={url}>\n                {url}\n            </a>\n            <RichTextEditorLinkDialog onOpenChange={onOpenChange}>\n                <Button size={Size.md} style={ButtonStyle.Plain} variant={ButtonVariant.Neutral}>\n                    {translateCommon('edit')}\n                </Button>\n            </RichTextEditorLinkDialog>\n            <Divider orientation={Orientation.vertical} size={Size.sm} />\n            <Button\n                onPress={() => {\n                    editor.chain().focus().extendMarkRange('link').unsetLink().run();\n                }}\n                size={Size.md}\n                style={ButtonStyle.Plain}\n                variant={ButtonVariant.Danger}>\n                {translateCommon('remove')}\n            </Button>\n        </div>\n    );\n}\n"]}