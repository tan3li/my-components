{"version":3,"file":"field.js","sourceRoot":"","sources":["../../../../../src/components/inputs/common/field/field.tsx"],"names":[],"mappings":";;AAAA,OAAO,EAAC,UAAU,EAAiB,MAAM,wCAAwC,CAAC;AAClF,OAAO,EAAC,QAAQ,EAAE,eAAe,EAAC,MAAM,oCAAoC,CAAC;AAI7E,OAAO,EAAC,YAAY,EAAC,MAAM,mCAAmC,CAAC;AAiB/D,MAAM,UAAU,wBAAwB,CAAC,EAYxC;QAXG,YAAY,kBAAA,EACZ,QAAQ,cAAA,EACR,QAAQ,cAAA,EACR,eAAe,qBAAA,EACf,UAAU,gBAAA;IAQV,IAAI,WAAW,GAAG,QAAQ,EACtB,WAAW,GAAG,eAAe,CAAC,OAAO,CAAC;IAE1C,IAAI,QAAQ,EAAE;QACV,WAAW,GAAG,eAAe,CAAC,MAAM,CAAC;QACrC,WAAW,GAAG,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,WAAW,CAAC;KAC3D;SAAM,IAAI,eAAe,EAAE;QACxB,WAAW,GAAG,eAAe,CAAC,OAAO,CAAC;QACtC,WAAW,GAAG,eAAe,CAAC;KACjC;SAAM,IAAI,UAAU,EAAE;QACnB,WAAW,GAAG,eAAe,CAAC,QAAQ,CAAC;KAC1C;IAED,OAAO;QACH,WAAW,aAAA;QACX,WAAW,aAAA;KACd,CAAC;AACN,CAAC;AAED,MAAM,UAAU,KAAK,CAAC,EAaT;QAZT,QAAQ,cAAA,EACR,SAAS,eAAA,EACT,QAAQ,cAAA,EACR,eAAe,qBAAA,EACf,UAAU,gBAAA,EACV,SAAS,eAAA,EACT,UAAU,gBAAA,EACV,KAAK,WAAA,EACL,WAAW,iBAAA,EACX,gBAAgB,sBAAA,EAChB,IAAI,UAAA,EACJ,cAAc,oBAAA;IAER,IAAA,KAA2B,YAAY,CAAC,SAAS,EAAE,SAAS,CAAC,EAA5D,QAAQ,cAAA,EAAE,YAAY,kBAAsC,CAAC;IAC9D,IAAA,KAA6B,wBAAwB,CAAC;QACxD,YAAY,cAAA;QACZ,QAAQ,UAAA;QACR,QAAQ,UAAA;QACR,eAAe,iBAAA;QACf,UAAU,YAAA;KACb,CAAC,EANK,WAAW,iBAAA,EAAE,WAAW,iBAM7B,CAAC;IAEH,OAAO,CACH,8BACK,KAAK,IAAI,CACN,KAAC,UAAU,aACP,UAAU,EAAE,UAAU,EACtB,UAAU,EAAE,UAAU,EACtB,IAAI,EAAE,IAAI,EACV,MAAM,EAAE,WAAW,EACnB,cAAc,EAAE,cAAc,gBAC7B,KAAK,IACG,CAChB,EACA,QAAQ,EACR,WAAW,IAAI,CACZ,KAAC,QAAQ,aAAC,QAAQ,EAAE,gBAAgB,EAAE,OAAO,EAAE,WAAW,gBACrD,WAAW,IACL,CACd,IACF,CACN,CAAC;AACN,CAAC","sourcesContent":["import {FieldLabel, TooltipContent} from '../../../text/fieldlabel/fieldlabel.js';\nimport {HelpText, HelpTextVariant} from '../../../text/helptext/helptext.js';\nimport {TDataState} from '../../../../constants/datastate.js';\nimport {ReactNode} from 'react';\nimport {Size} from '../../../../constants/size.js';\nimport {useDataState} from '../../../../hooks/usedatastate.js';\n\ninterface FieldProps {\n    children: ReactNode;\n    dataState?: Map<TDataState, string> | null;\n    helpText?: ReactNode;\n    helpTextSuccess?: ReactNode;\n    isDisabled?: boolean;\n    isInvalid?: boolean;\n    isRequired?: boolean;\n    label?: ReactNode;\n    labelSuffix?: ReactNode;\n    showHelpTextIcon?: boolean;\n    size: Size.sm | Size.md | Size.lg;\n    tooltipContent?: TooltipContent;\n}\n\nexport function getHelpContentAndVariant({\n    errorMessage,\n    hasError,\n    helpText,\n    helpTextSuccess,\n    isDisabled\n}: {\n    errorMessage?: string;\n    hasError?: boolean;\n    helpText?: ReactNode;\n    helpTextSuccess?: ReactNode;\n    isDisabled?: boolean;\n}) {\n    let helpContent = helpText,\n        helpVariant = HelpTextVariant.Neutral;\n\n    if (hasError) {\n        helpVariant = HelpTextVariant.Danger;\n        helpContent = errorMessage ? errorMessage : helpContent;\n    } else if (helpTextSuccess) {\n        helpVariant = HelpTextVariant.Success;\n        helpContent = helpTextSuccess;\n    } else if (isDisabled) {\n        helpVariant = HelpTextVariant.Disabled;\n    }\n\n    return {\n        helpContent,\n        helpVariant\n    };\n}\n\nexport function Field({\n    children,\n    dataState,\n    helpText,\n    helpTextSuccess,\n    isDisabled,\n    isInvalid,\n    isRequired,\n    label,\n    labelSuffix,\n    showHelpTextIcon,\n    size,\n    tooltipContent\n}: FieldProps) {\n    const {hasError, errorMessage} = useDataState(dataState, isInvalid);\n    const {helpContent, helpVariant} = getHelpContentAndVariant({\n        errorMessage,\n        hasError,\n        helpText,\n        helpTextSuccess,\n        isDisabled\n    });\n\n    return (\n        <>\n            {label && (\n                <FieldLabel\n                    isDisabled={isDisabled}\n                    isRequired={isRequired}\n                    size={size}\n                    suffix={labelSuffix}\n                    tooltipContent={tooltipContent}>\n                    {label}\n                </FieldLabel>\n            )}\n            {children}\n            {helpContent && (\n                <HelpText showIcon={showHelpTextIcon} variant={helpVariant}>\n                    {helpContent}\n                </HelpText>\n            )}\n        </>\n    );\n}\n"]}