{"version":3,"file":"filterbarexample.js","sourceRoot":"","sources":["../../../../src/components/inputs/filterbar/filterbarexample.tsx"],"names":[],"mappings":"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","sourcesContent":["import {FilterBar, FilterBarProps, FilterBarStyle} from './filterbar.js';\nimport {useEffect, useRef, useState} from 'react';\nimport {Select, SelectItem} from '../select/index.js';\nimport {Size} from '../../../constants/index.js';\nimport {isEmptyArray} from '../../../utils/objecthelper.js';\nimport {SearchField} from '../searchfield/index.js';\nimport {FilterButton, FilterSelect} from '../filterselect/index.js';\nimport {FilterMultiSelect} from '../filtermultiselect/index.js';\nimport {MultiSelect} from '../multiselect/index.js';\nimport {DateValue, useFilter} from 'react-aria';\nimport {Drawer} from '../../feedback/index.js';\nimport {safeCall} from '../../../utils/functionhelper.js';\nimport {Calendar} from '../calendar/index.js';\nimport {useCultureDay} from '../../../hooks/usecultureday.js';\nimport {DatePicker} from '../datepicker/index.js';\nimport {Popover} from '../../action/popover/index.js';\nimport {EmptyState} from '../../datadisplay/index.js';\n\ninterface FilterObj<TItem> {\n    id: string;\n    isAdditional?: boolean;\n    type: string;\n    label: string;\n    items?: TItem[];\n    value?: TItem[] | TItem | string;\n}\n\nfunction FilterDatePicker({\n    changeCallback,\n    changeParams,\n    isSelectable,\n    label,\n    size,\n    value\n}: {\n    changeCallback?: (obj: any) => void;\n    changeParams?: any;\n    isSelectable?: boolean;\n    label: string;\n    size: Size.sm | Size.xs;\n    value?: string;\n}) {\n    const triggerRef = useRef<HTMLButtonElement>(null);\n    const [isOpen, setIsOpen] = useState(false);\n    const cultureDay = useCultureDay();\n\n    const onChange = (date: DateValue | null) => {\n        safeCall(changeCallback, {...changeParams, value: date ? date.toString() : null});\n        setIsOpen(false);\n    };\n\n    return (\n        <>\n            <FilterButton\n                clearButtonProps={{onPress: () => onChange(null)}}\n                isActive={!!value}\n                isFocusable={isSelectable}\n                isOpen={isOpen}\n                label={label}\n                onOpenChange={setIsOpen}\n                showClearButton={true}\n                size={size}\n                toggleButtonProps={{\n                    ref: triggerRef\n                }}>\n                {label}\n                {value && `: ${cultureDay(value).format('l')}`}\n            </FilterButton>\n            <Popover\n                aria-label={label}\n                className=\"filter-select__popover\"\n                isOpen={isOpen}\n                onOpenChange={setIsOpen}\n                placement=\"bottom start\"\n                shouldFlip={true}\n                triggerRef={triggerRef}>\n                <Calendar autoFocus={true} onChange={onChange} value={value} />\n            </Popover>\n        </>\n    );\n}\n\nfunction Filters({\n    filters,\n    hideAdditional,\n    isSelectable,\n    onFilterValueChange,\n    showOnlyActive,\n    size\n}: {\n    filters: Array<FilterObj<SelectItem<string>>>;\n    hideAdditional?: boolean;\n    isSelectable?: boolean;\n    onFilterValueChange?: (obj: any) => void;\n    showOnlyActive?: boolean;\n    size: Size.sm | Size.xs;\n}) {\n    return (\n        <>\n            {filters.map((filter) => {\n                const {id, type, label, items, value, isAdditional} = filter;\n\n                if ((showOnlyActive && isEmptyArray(value)) || (hideAdditional && isAdditional)) {\n                    return null;\n                }\n\n                switch (type) {\n                    case 'single-select': {\n                        const selectedValue = value as SelectItem<string> | undefined;\n\n                        return (\n                            <FilterSelect\n                                changeCallback={onFilterValueChange}\n                                changeParams={{id}}\n                                isSelectable={isSelectable}\n                                items={items!}\n                                key={id}\n                                label={label}\n                                size={size}\n                                text={selectedValue?.text}\n                                value={selectedValue?.value}\n                            />\n                        );\n                    }\n                    case 'multi-select': {\n                        const selectedValue = value as Array<SelectItem<string>> | undefined;\n\n                        return (\n                            <FilterMultiSelect\n                                changeCallback={onFilterValueChange}\n                                changeParams={{id}}\n                                isSelectable={isSelectable}\n                                items={items!}\n                                key={id}\n                                label={label}\n                                selectedItems={selectedValue}\n                                size={size}\n                            />\n                        );\n                    }\n                    case 'date': {\n                        const selectedValue = value as string | undefined;\n\n                        return (\n                            <FilterDatePicker\n                                changeCallback={onFilterValueChange}\n                                changeParams={{id}}\n                                isSelectable={isSelectable}\n                                key={id}\n                                label={filter.label}\n                                size={size}\n                                value={selectedValue}\n                            />\n                        );\n                    }\n                    default:\n                        return null;\n                }\n            })}\n        </>\n    );\n}\n\nfunction FilterFields({\n    filters,\n    onFilterValueChange\n}: {\n    filters: Array<FilterObj<SelectItem<string>>>;\n    onFilterValueChange?: (obj: any) => void;\n}) {\n    return (\n        <>\n            {filters.map((filter) => {\n                const {id, type, label, items, value} = filter;\n\n                switch (type) {\n                    case 'single-select': {\n                        const selectedValue = value as SelectItem<string> | undefined;\n\n                        return (\n                            <Select\n                                changeCallback={onFilterValueChange}\n                                changeParams={{id}}\n                                helpText=\"Help text content\"\n                                items={items!}\n                                key={id}\n                                label={label}\n                                placeholder=\"Select a value\"\n                                size={Size.md}\n                                text={selectedValue?.text}\n                                value={selectedValue?.value}\n                            />\n                        );\n                    }\n                    case 'multi-select': {\n                        const selectedValue = value as Array<SelectItem<string>> | undefined;\n\n                        return (\n                            <MultiSelect\n                                changeCallback={onFilterValueChange}\n                                changeParams={{id}}\n                                helpText=\"Help text content\"\n                                items={items!}\n                                key={id}\n                                label={label}\n                                placeholder=\"Select a value\"\n                                selectedItems={selectedValue}\n                                size={Size.md}\n                            />\n                        );\n                    }\n                    case 'date': {\n                        const selectedValue = value as string | undefined;\n\n                        return (\n                            <DatePicker\n                                changeCallback={onFilterValueChange}\n                                changeParams={{id}}\n                                helpText=\"Help text content\"\n                                key={id}\n                                label={label}\n                                size={Size.md}\n                                value={selectedValue}\n                            />\n                        );\n                    }\n                    default:\n                        return null;\n                }\n            })}\n        </>\n    );\n}\n\nfunction FilterDrawer({\n    filters,\n    isOpen,\n    onApply,\n    onOpenChange,\n    title\n}: {\n    filters: Array<FilterObj<SelectItem<string>>>;\n    isOpen: boolean;\n    onApply: (filters: Array<FilterObj<SelectItem<string>>>) => void;\n    onOpenChange: (isOpen: boolean) => void;\n    title: string;\n}) {\n    const [editableFilters, setEditableFilters] = useState<Array<FilterObj<SelectItem<string>>>>([]);\n    const [searchText, setSearchText] = useState('');\n    const filterSearchFilter = useFilter({sensitivity: 'base'});\n    const visibleEditableFilters = editableFilters.filter((f) => filterSearchFilter.contains(f.label, searchText));\n\n    const onFilterValueChange = ({id, text, value}: {id: string; text: string; value: any}) => {\n        setEditableFilters(\n            editableFilters.map((f) => {\n                if (f.id === id) {\n                    let val = value;\n\n                    if (f.type === 'single-select') {\n                        val = value ? {text, value} : value;\n                    }\n\n                    return {...f, value: val};\n                }\n\n                return f;\n            })\n        );\n    };\n\n    const onClearAll = () => {\n        setEditableFilters(editableFilters.map((filter) => ({...filter, value: undefined})));\n    };\n\n    const onSearch = (text: string) => {\n        setSearchText(text);\n    };\n\n    useEffect(() => {\n        if (isOpen) {\n            setEditableFilters(filters.slice());\n        }\n    }, [isOpen]);\n\n    return (\n        <Drawer\n            destructiveAction={{\n                label: 'Clear all',\n                onPress: () => {\n                    onClearAll();\n                }\n            }}\n            isOpen={isOpen}\n            onOpenChange={onOpenChange}\n            primaryAction={{\n                label: 'Apply',\n                onPress: (closeCallback) => {\n                    safeCall(onApply, editableFilters.slice());\n                    closeCallback();\n                }\n            }}\n            title={title}>\n            <div style={{display: 'flex', flexDirection: 'column', gap: 'var(--space-md)'}}>\n                <SearchField\n                    aria-label=\"Search a filter\"\n                    onChange={onSearch}\n                    placeholder=\"Search a filter\"\n                    size={Size.sm}\n                />\n                <div style={{display: 'flex', flexWrap: 'wrap', gap: 'var(--space-xs) var(--space-sm)'}}>\n                    <Filters\n                        filters={editableFilters}\n                        isSelectable={false}\n                        onFilterValueChange={onFilterValueChange}\n                        showOnlyActive={true}\n                        size={Size.xs}\n                    />\n                </div>\n                {visibleEditableFilters.length > 0 ?\n                    <FilterFields filters={visibleEditableFilters} onFilterValueChange={onFilterValueChange} />\n                :   <EmptyState\n                        bodyText=\"Try a different search term or clear your current search to see all filters.\"\n                        title=\"No filters found\"\n                    />\n                }\n            </div>\n        </Drawer>\n    );\n}\n\nexport function FilterBarExample(args: FilterBarProps) {\n    const [filters, setFilters] = useState<Array<FilterObj<SelectItem<string>>>>([\n        {\n            id: 'pm',\n            type: 'multi-select',\n            label: 'Project manager',\n            items: [\n                {value: 'pm1', text: 'John Doe'},\n                {value: 'pm2', text: 'Jane Doe'},\n                {value: 'pm3', text: 'Kevin Young'}\n            ]\n        },\n        {\n            id: 'status',\n            type: 'single-select',\n            label: 'Status',\n            items: [\n                {value: 'true', text: 'Active'},\n                {value: 'false', text: 'Inactive'}\n            ]\n        },\n        {\n            id: 'bu',\n            type: 'multi-select',\n            label: 'Business unit',\n            items: [\n                {value: 'bu1', text: 'Finance'},\n                {value: 'bu2', text: 'Marketing'},\n                {value: 'bu3', text: 'R&D'}\n            ]\n        },\n        {\n            id: 'kw',\n            isAdditional: true,\n            type: 'multi-select',\n            label: 'Keywords',\n            items: [\n                {value: 'kw1', text: 'Foo'},\n                {value: 'kw2', text: 'Bar'},\n                {value: 'kw3', text: 'Test'}\n            ]\n        },\n        {\n            id: 'dl',\n            type: 'date',\n            label: 'Deadline'\n        }\n    ]);\n    const [isFilterPanelOpen, setIsFilterPanelOpen] = useState(false);\n    const filterSize = args.style === FilterBarStyle.Card ? Size.sm : Size.xs;\n    const activeFiltersCount = filters.reduce((sum, filter) => sum + (isEmptyArray(filter.value) ? 0 : 1), 0);\n    const nonVisibleActiveFiltersCount = filters.reduce(\n        (sum, filter) => sum + (filter.isAdditional && !isEmptyArray(filter.value) ? 1 : 0),\n        0\n    );\n\n    const onFilterValueChange = ({id, text, value}: {id: string; text: string; value: any}) => {\n        setFilters(\n            filters.map((f) => {\n                if (f.id === id) {\n                    let val = value;\n\n                    if (f.type === 'single-select') {\n                        val = value ? {text, value} : value;\n                    }\n\n                    return {...f, value: val};\n                }\n\n                return f;\n            })\n        );\n    };\n\n    const onClearAll = () => {\n        setFilters(filters.map((filter) => ({...filter, value: undefined})));\n    };\n\n    const onPressFilters = () => {\n        setIsFilterPanelOpen(true);\n    };\n\n    return (\n        <FilterBar\n            {...args}\n            activeFiltersCount={activeFiltersCount}\n            nonVisibleActiveFiltersCount={nonVisibleActiveFiltersCount}\n            onClearAll={onClearAll}\n            onPressFilters={onPressFilters}>\n            <SearchField aria-label=\"Search\" placeholder=\"Search\" size={filterSize} />\n            <Filters\n                filters={filters}\n                hideAdditional={true}\n                onFilterValueChange={onFilterValueChange}\n                size={filterSize}\n            />\n            <FilterDrawer\n                filters={filters}\n                isOpen={isFilterPanelOpen}\n                onApply={(newFilters) => {\n                    setFilters(newFilters);\n                }}\n                onOpenChange={setIsFilterPanelOpen}\n                title={activeFiltersCount ? `Filters (${activeFiltersCount})` : 'Filters'}\n            />\n        </FilterBar>\n    );\n}\n"]}