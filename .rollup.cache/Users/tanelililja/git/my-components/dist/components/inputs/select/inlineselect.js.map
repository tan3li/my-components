{"version":3,"file":"inlineselect.js","sourceRoot":"","sources":["../../../../src/components/inputs/select/inlineselect.tsx"],"names":[],"mappings":";;AAGA,OAAO,EAAC,mBAAmB,EAAE,MAAM,EAAE,QAAQ,EAAC,MAAM,OAAO,CAAC;AAC5D,OAAO,EAAC,YAAY,EAAC,MAAM,gCAAgC,CAAC;AAC5D,OAAO,EAAC,kBAAkB,EAAC,MAAM,mDAAmD,CAAC;AACrF,OAAO,EAAC,OAAO,EAAE,cAAc,EAAE,WAAW,EAAC,MAAM,yBAAyB,CAAC;AAC7E,OAAO,EAAC,MAAM,EAAC,MAAM,aAAa,CAAC;AACnC,OAAO,EAAC,QAAQ,EAAE,IAAI,EAAC,MAAM,6BAA6B,CAAC;AAC3D,OAAO,EAAC,SAAS,EAAC,MAAM,sBAAsB,CAAC;AAC/C,OAAO,EAAC,UAAU,EAAC,MAAM,8BAA8B,CAAC;AACxD,OAAO,EAAC,KAAK,EAAC,MAAM,YAAY,CAAC;AAKjC,MAAM,UAAU,YAAY,CAA2D,EAGzD;IAF1B,IAAA,YAAc,EAAd,IAAI,mBAAG,IAAI,CAAC,EAAE,KAAA,EACX,KAAK,cAF2E,QAGtF,CADW;IAEF,IAAA,KAA4B,QAAQ,CAAC,KAAK,CAAC,EAA1C,SAAS,QAAA,EAAE,YAAY,QAAmB,CAAC;IAC5C,IAAA,KAA2B,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC,EAAvD,QAAQ,cAAA,EAAE,YAAY,kBAAiC,CAAC;IAC/D,IAAM,GAAG,GAAG,MAAM,CAAiB,IAAI,CAAC,CAAC;IACzC,IAAM,eAAe,GAAG,kBAAkB,EAAE,CAAC;IAE7C,mBAAmB,CAAC,KAAK,CAAC,GAAG,EAAE,cAAM,OAAA,GAAG,CAAC,OAAQ,EAAZ,CAAY,EAAE,EAAE,CAAC,CAAC;IAEvD,OAAO,CACH,MAAC,cAAc,aAAC,MAAM,EAAE,QAAQ,IAAI,SAAS,iBACzC,KAAC,MAAM,eACC,KAAK,IACT,SAAS,EAAE,UAAU,CAAC,KAAK,CAAC,SAAS,EAAE,eAAe,CAAC,EACvD,OAAO,EAAE,IAAI,EACb,aAAa,EAAE,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,aAAa,CAAC,EACvD,GAAG,EAAE,GAAG,EACR,cAAc,EAAE,KAAK,EACrB,IAAI,EAAE,IAAI,IACZ,EACF,KAAC,OAAO,aACJ,SAAS,EAAC,8BAA8B,EACxC,cAAc,EAAE,SAAS,CAAC,mBAAmB,EAC7C,UAAU,EAAE,eAAe,CAAC,OAAO,CAAC,EACpC,MAAM,EAAE,CAAC,EACT,QAAQ,EAAE,QAAQ,CAAC,IAAI,EACvB,UAAU,EAAE,GAAG,EACf,IAAI,EAAE,WAAW,CAAC,IAAI,gBACrB,YAAY,IACP,KACG,CACpB,CAAC;AACN,CAAC","sourcesContent":["import {AnyObject} from '../../../hooks/usechangeparamscallback.js';\nimport {SelectItemBase} from './selectitem.js';\nimport {SelectProps} from './selectprops.js';\nimport {useImperativeHandle, useRef, useState} from 'react';\nimport {useDataState} from '../../../hooks/usedatastate.js';\nimport {useTranslateCommon} from '../../../hooks/translations/usetranslatecommon.js';\nimport {Tooltip, TooltipTrigger, TooltipType} from '../../feedback/index.js';\nimport {Select} from './select.js';\nimport {Position, Size} from '../../../constants/index.js';\nimport {iconNames} from '../../media/index.js';\nimport {classNames} from '../../../utils/classnames.js';\nimport {chain} from 'react-aria';\n\nexport interface InlineSelectProps<P extends AnyObject, TItem extends SelectItemBase<TItem>>\n    extends Omit<SelectProps<P, TItem>, 'helpText' | 'showHelpTextIcon' | 'showSearchIcon'> {}\n\nexport function InlineSelect<P extends AnyObject, TItem extends SelectItemBase<TItem>>({\n    size = Size.xs,\n    ...props\n}: InlineSelectProps<P, TItem>) {\n    const [isFocused, setIsFocused] = useState(false);\n    const {hasError, errorMessage} = useDataState(props.dataState);\n    const ref = useRef<HTMLDivElement>(null);\n    const translateCommon = useTranslateCommon();\n\n    useImperativeHandle(props.ref, () => ref.current!, []);\n\n    return (\n        <TooltipTrigger isOpen={hasError && isFocused}>\n            <Select\n                {...props}\n                className={classNames(props.className, 'inline-select')}\n                isPlain={true}\n                onFocusChange={chain(setIsFocused, props.onFocusChange)}\n                ref={ref}\n                showSearchIcon={false}\n                size={size}\n            />\n            <Tooltip\n                className=\"inline-select__error-tooltip\"\n                headerIconName={iconNames.EmergencyHomeFilled}\n                headerText={translateCommon('error')}\n                offset={2}\n                position={Position.Left}\n                triggerRef={ref}\n                type={TooltipType.Rich}>\n                {errorMessage}\n            </Tooltip>\n        </TooltipTrigger>\n    );\n}\n"]}