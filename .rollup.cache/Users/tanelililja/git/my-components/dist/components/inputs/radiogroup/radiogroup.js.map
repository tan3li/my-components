{"version":3,"file":"radiogroup.js","sourceRoot":"","sources":["../../../../src/components/inputs/radiogroup/radiogroup.tsx"],"names":[],"mappings":";;AAAA,OAAO,EAAC,QAAQ,EAAE,YAAY,EAAyC,MAAM,OAAO,CAAC;AACrF,OAAO,EAAC,UAAU,IAAI,mBAAmB,EAA8C,MAAM,uBAAuB,CAAC;AACrH,OAAO,EAAC,UAAU,EAAC,MAAM,8BAA8B,CAAC;AACxD,OAAO,EAAC,IAAI,EAAC,MAAM,4BAA4B,CAAC;AAEhD,OAAO,EAAwB,uBAAuB,EAAC,MAAM,2CAA2C,CAAC;AACzG,OAAO,EAAC,KAAK,EAAC,MAAM,0BAA0B,CAAC;AAC/C,OAAO,EAAC,YAAY,EAAC,MAAM,gCAAgC,CAAC;AAG5D,OAAO,EAAC,aAAa,EAAC,MAAM,0CAA0C,CAAC;AA8CvE,MAAM,UAAU,UAAU,CAAsB,EAkB3B;IAjBjB,IAAA,cAAc,oBAAA,EACd,YAAY,kBAAA,EACZ,QAAQ,cAAA,EACR,SAAS,eAAA,EACT,SAAS,eAAA,EACT,QAAQ,cAAA,EACR,eAAe,qBAAA,EACf,UAAU,gBAAA,EACV,SAAS,eAAA,EACT,UAAU,gBAAA,EACV,UAAU,gBAAA,EACV,KAAK,WAAA,EACL,QAAQ,cAAA,EACR,gBAAgB,sBAAA,EAChB,IAAI,UAAA,EACJ,cAAc,oBAAA,EACX,KAAK,cAjBoC,iOAkB/C,CADW;IAER,IAAM,cAAc,GAAG,uBAAuB,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;IAC7E,IAAM,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAC,KAAK,IAAK,OAAA,YAAY,CAAC,KAAK,EAAE,EAAC,IAAI,MAAA,EAAC,CAAC,EAA3B,CAA2B,CAAC,CAAC;IAChF,IAAA,KAAuC,YAAY,CAAC,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,UAAU,CAAC,EAA1F,QAAQ,cAAA,EAAE,UAAU,gBAAA,EAAE,YAAY,kBAAwD,CAAC;IAClG,IAAI,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC;IAExB,IAAI,IAAI,KAAK,IAAI,CAAC,EAAE,EAAE;QAClB,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC;KACvB;IAED,IAAI,UAAU,EAAE;QACZ,IAAM,cAAc,GAAG,CAAC,CAAC,YAAY,IAAI,CAAC,CAAC,eAAe,IAAI,CAAC,CAAC,QAAQ,CAAC;QAEzE,OAAO,CACH,KAAC,aAAa,IACV,SAAS,EAAC,sBAAsB,EAChC,WAAW,EAAE,cAAc,EAC3B,QAAQ,EAAE,CAAC,CAAC,KAAK,EACjB,eAAe,EAAE,IAAI,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,EACxD,IAAI,EAAE,SAAS,GACjB,CACL,CAAC;KACL;IAED,OAAO,CACH,KAAC,mBAAmB,eACZ,KAAK,IACT,SAAS,EAAE,UAAU,CAAC,aAAa,EAAE,SAAS,CAAC,EAC/C,UAAU,EAAE,UAAU,EACtB,SAAS,EAAE,QAAQ,EACnB,UAAU,EAAE,UAAU,EACtB,UAAU,EAAE,UAAU,EACtB,QAAQ,EAAE,QAAQ,aAAR,QAAQ,cAAR,QAAQ,GAAI,cAAc,gBACpC,KAAC,KAAK,aACF,SAAS,EAAE,SAAS,EACpB,QAAQ,EAAE,QAAQ,EAClB,eAAe,EAAE,eAAe,EAChC,UAAU,EAAE,UAAU,EACtB,SAAS,EAAE,SAAS,EACpB,UAAU,EAAE,UAAU,EACtB,KAAK,EAAE,KAAK,EACZ,gBAAgB,EAAE,gBAAgB,EAClC,IAAI,EAAE,SAAS,EACf,cAAc,EAAE,cAAc,gBAC7B,cAAc,IACX,IACU,CACzB,CAAC;AACN,CAAC","sourcesContent":["import {Children, cloneElement, ReactElement, ReactNode, RefAttributes} from 'react';\nimport {RadioGroup as ReactAriaRadioGroup, RadioGroupProps as ReactAriaRadioGroupProps} from 'react-aria-components';\nimport {classNames} from '../../../utils/classnames.js';\nimport {Size} from '../../../constants/size.js';\nimport {TDataState} from '../../../constants/datastate.js';\nimport {ChangeArgs, AnyObject, useChangeParamsCallback} from '../../../hooks/usechangeparamscallback.js';\nimport {Field} from '../common/field/field.js';\nimport {useDataState} from '../../../hooks/usedatastate.js';\nimport {TooltipContent} from '../../text/fieldlabel/fieldlabel.js';\nimport {RadioProps} from '../radio/index.js';\nimport {SkeletonField} from '../../feedback/skeleton/skeletonfield.js';\n\nexport interface RadioGroupProps<P extends AnyObject> extends ReactAriaRadioGroupProps, RefAttributes<HTMLDivElement> {\n    /**\n     * Handler that is called with object containing selection state value and changeParams when the element's selection state changes.\n     */\n    changeCallback?: (args: ChangeArgs<P, string>) => void;\n    /**\n     * Object which is provided with element's selection state value property in changeCallback.\n     */\n    changeParams?: P;\n    children: Array<ReactElement<RadioProps>>;\n    /**\n     * Map that contains model property states with messages.\n     */\n    dataState?: Map<TDataState, string> | null;\n    /**\n     * Help text to provide more information.\n     */\n    helpText?: ReactNode;\n    /**\n     * Help text to show in success style.\n     */\n    helpTextSuccess?: ReactNode;\n    /**\n     * Whether to show skeleton instead of an actual element.\n     */\n    isSkeleton?: boolean;\n    /**\n     * Label for the element.\n     */\n    label: ReactNode;\n    /**\n     * Whether to show icon for help text.\n     */\n    showHelpTextIcon?: boolean;\n    /**\n     * Size of the element.\n     */\n    size?: Size.sm | Size.md;\n    /**\n     * Label tooltip content.\n     */\n    tooltipContent?: TooltipContent;\n}\n\nexport function RadioGroup<P extends AnyObject>({\n    changeCallback,\n    changeParams,\n    children,\n    className,\n    dataState,\n    helpText,\n    helpTextSuccess,\n    isDisabled,\n    isInvalid,\n    isRequired,\n    isSkeleton,\n    label,\n    onChange,\n    showHelpTextIcon,\n    size,\n    tooltipContent,\n    ...props\n}: RadioGroupProps<P>) {\n    const changeParamsCb = useChangeParamsCallback(changeParams, changeCallback);\n    const mappedChildren = Children.map(children, (child) => cloneElement(child, {size}));\n    const {hasError, isReadOnly, errorMessage} = useDataState(dataState, isInvalid, props.isReadOnly);\n    let fieldSize = Size.md;\n\n    if (size === Size.md) {\n        fieldSize = Size.lg;\n    }\n\n    if (isSkeleton) {\n        const hasAnyHelpText = !!errorMessage || !!helpTextSuccess || !!helpText;\n\n        return (\n            <SkeletonField\n                className=\"skeleton-radio-group\"\n                hasHelpText={hasAnyHelpText}\n                hasLabel={!!label}\n                inputRectHeight={size === Size.md ? '5.5rem' : '4.75rem'}\n                size={fieldSize}\n            />\n        );\n    }\n\n    return (\n        <ReactAriaRadioGroup\n            {...props}\n            className={classNames('radio-group', className)}\n            isDisabled={isDisabled}\n            isInvalid={hasError}\n            isReadOnly={isReadOnly}\n            isRequired={isRequired}\n            onChange={onChange ?? changeParamsCb}>\n            <Field\n                dataState={dataState}\n                helpText={helpText}\n                helpTextSuccess={helpTextSuccess}\n                isDisabled={isDisabled}\n                isInvalid={isInvalid}\n                isRequired={isRequired}\n                label={label}\n                showHelpTextIcon={showHelpTextIcon}\n                size={fieldSize}\n                tooltipContent={tooltipContent}>\n                {mappedChildren}\n            </Field>\n        </ReactAriaRadioGroup>\n    );\n}\n"]}