{"version":3,"file":"treeselect.js","sourceRoot":"","sources":["../../../../src/components/inputs/treeselect/treeselect.tsx"],"names":[],"mappings":";;AAAA,OAAO,EAAC,MAAM,EAAC,MAAM,qBAAqB,CAAC;AAE3C,OAAO,EAAC,gBAAgB,EAAC,MAAM,uBAAuB,CAAC;AACvD,OAAO,EAAC,aAAa,EAAC,MAAM,oBAAoB,CAAC;AAIjD,OAAO,EAAC,mBAAmB,EAAC,MAAM,kCAAkC,CAAC;AAkBrE,MAAM,UAAU,UAAU,CAA2D,EAMzD;;IALxB,IAAA,mBAAmB,yBAAA,EACnB,gBAAgB,sBAAA,EAChB,cAAc,oBAAA,EACK,sBAAsB,uBAAA,EACtC,KAAK,cALyE,kFAMpF,CADW;IAER,IAAM,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC;IAC/B,IAAM,iBAAiB,GAAG,KAAK,CAAC,YAAY,CAAC;IACvC,IAAA,KAA6E,aAAa,CAAC;QAC7F,mBAAmB,EACf,MAAA,iBAAiB,aAAjB,iBAAiB,cAAjB,iBAAiB,GAAI,mBAAmB,mCAAI,gBAAgB,CAAC,UAAU,EAAE,IAAI,GAAG,EAAE,EAAE,KAAK,CAAC,KAAK,CAAC;QACpG,YAAY,EAAE,iBAAiB;QAC/B,KAAK,EAAE,UAAU;QACjB,gBAAgB,kBAAA;QAChB,aAAa,EAAE,KAAK,CAAC,aAAa;QAClC,SAAS,EAAE,KAAK,CAAC,SAAS;QAC1B,cAAc,gBAAA;KACjB,CAAC,EATK,KAAK,WAAA,EAAE,SAAS,eAAA,EAAE,aAAa,mBAAA,EAAE,YAAY,kBAAA,EAAE,WAAW,iBAAA,EAAE,YAAY,kBAS7E,CAAC;IAEH,wDAAwD;IACxD,IAAM,iBAAiB,GAAG,UAAC,kBAAmD;QAC1E,IAAM,IAAI,GAAG,kBAAkB,CAAC,IAAI,CAAC;QAC9B,IAAA,KAAK,GAAI,IAAI,MAAR,CAAS;QACrB,IAAM,sBAAsB,yBACrB,kBAAkB,KACrB,UAAU,EAAE,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,EACnC,SAAS,EAAE,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,EACjC,YAAY,cAAA,GACf,CAAC;QAEF,IAAI,sBAAsB,EAAE;YACxB,OAAO,sBAAsB,CAAC,sBAAsB,CAAC,CAAC;SACzD;QAED,OAAO,KAAC,mBAAmB,eAAK,sBAAsB,EAAI,CAAC;IAC/D,CAAC,CAAC;IAEF,OAAO,CACH,KAAC,MAAM,eACC,KAAK,IACT,YAAY,EAAE,YAAY,EAC1B,KAAK,EAAE,KAAK,EACZ,aAAa,EAAE,aAAa,EAC5B,SAAS,EAAE,SAAS,EACpB,iBAAiB,EAAE,iBAAiB,IACtC,CACL,CAAC;AACN,CAAC","sourcesContent":["import {Select} from '../select/select.js';\nimport {SelectProps} from '../select/selectprops.js';\nimport {expandToSelected} from './expandtoselected.js';\nimport {useTreeSelect} from './usetreeselect.js';\nimport {AnyObject} from '../../../hooks/usechangeparamscallback.js';\nimport {SelectItemBase} from '../select/index.js';\nimport {SelectOptionContentProps} from '../select/selectoptioncontentprops.js';\nimport {SelectOptionContent} from '../select/selectoptioncontent.js';\n\nexport interface TreeSelectProps<P extends AnyObject, TItem extends SelectItemBase<TItem>>\n    extends SelectProps<P, TItem> {\n    /**\n     * Set of item keys to expand by default.\n     */\n    defaultExpandedKeys?: Set<TItem['value']>;\n    /**\n     * Handler that is called when item is expanded/collapsed.\n     */\n    onExpandedChange?: (expandedKeys: Set<TItem['value']>) => void;\n    /**\n     * Handler that is called when item is expanded, and it has empty children.\n     */\n    onLoadChildren?: (item: TItem) => Promise<void>;\n}\n\nexport function TreeSelect<P extends AnyObject, TItem extends SelectItemBase<TItem>>({\n    defaultExpandedKeys,\n    onExpandedChange,\n    onLoadChildren,\n    renderItemContent: propsRenderItemContent,\n    ...props\n}: TreeSelectProps<P, TItem>) {\n    const propsItems = props.items;\n    const propsExpandedKeys = props.expandedKeys;\n    const {items, onKeyDown, onInputChange, expandedKeys, loadingKeys, onToggleItem} = useTreeSelect({\n        defaultExpandedKeys:\n            propsExpandedKeys ?? defaultExpandedKeys ?? expandToSelected(propsItems, new Set(), props.value),\n        expandedKeys: propsExpandedKeys,\n        items: propsItems,\n        onExpandedChange,\n        onInputChange: props.onInputChange,\n        onKeyDown: props.onKeyDown,\n        onLoadChildren\n    });\n\n    // eslint-disable-next-line sonarjs/function-return-type\n    const renderItemContent = (optionContentProps: SelectOptionContentProps<TItem>) => {\n        const item = optionContentProps.item;\n        const {value} = item;\n        const treeOptionContentProps: SelectOptionContentProps<TItem> = {\n            ...optionContentProps,\n            isExpanded: expandedKeys.has(value),\n            isLoading: loadingKeys.has(value),\n            onToggleItem\n        };\n\n        if (propsRenderItemContent) {\n            return propsRenderItemContent(treeOptionContentProps);\n        }\n\n        return <SelectOptionContent {...treeOptionContentProps} />;\n    };\n\n    return (\n        <Select\n            {...props}\n            expandedKeys={expandedKeys}\n            items={items}\n            onInputChange={onInputChange}\n            onKeyDown={onKeyDown}\n            renderItemContent={renderItemContent}\n        />\n    );\n}\n"]}