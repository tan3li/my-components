{"version":3,"file":"selectitem.js","sourceRoot":"","sources":["../../../../src/components/inputs/select/selectitem.ts"],"names":[],"mappings":"","sourcesContent":["import {Key} from 'react-aria-components';\nimport {ReactNode} from 'react';\n\nexport interface SelectItemBase<TItem> {\n    /**\n     * When provided, item is considered an action which calls the callback on click.\n     */\n    action?: {\n        callback: () => void;\n        [key: string]: any;\n    };\n    /**\n     * When provided, item is considered as parent item which has the given children.\n     * Should be used for hierarchical lists.\n     * Should not be provided at the same time with items property.\n     */\n    children?: TItem[];\n    /**\n     * Show separator after item.\n     */\n    hasSeparator?: boolean;\n    /**\n     * When provided, item is considered as a group header which has given items under it.\n     * Should be used for grouped lists.\n     * Should not be provided at the same time with children property.\n     */\n    items?: TItem[];\n    /**\n     * When provided, item can be navigated to but cannot be selected.\n     */\n    isReadOnly?: boolean;\n    /**\n     * Item's textual value.\n     */\n    text: string;\n    /**\n     * Tooltip for item. Shown on hover and keyboard highlight.\n     */\n    tooltip?: {\n        content: ReactNode;\n    };\n    /**\n     * Item's unique identifier.\n     */\n    value: Key;\n    [key: string]: any;\n}\n\nexport interface SelectItem<TValue extends Key = Key> extends SelectItemBase<SelectItem<TValue>> {\n    value: TValue;\n}\n"]}