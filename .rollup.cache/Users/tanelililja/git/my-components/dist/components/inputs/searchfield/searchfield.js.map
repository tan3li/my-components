{"version":3,"file":"searchfield.js","sourceRoot":"","sources":["../../../../src/components/inputs/searchfield/searchfield.tsx"],"names":[],"mappings":";;AAAA,OAAO,EACH,KAAK,EACL,WAAW,IAAI,oBAAoB,EAEtC,MAAM,uBAAuB,CAAC;AAC/B,OAAO,EAAC,UAAU,EAAC,MAAM,8BAA8B,CAAC;AACxD,OAAO,EAAC,SAAS,EAAC,MAAM,2BAA2B,CAAC;AACpD,OAAO,EAAC,IAAI,EAAC,MAAM,0BAA0B,CAAC;AAC9C,OAAO,EAAC,YAAY,EAAE,QAAQ,EAAC,MAAM,YAAY,CAAC;AAClD,OAAO,EAAC,IAAI,EAAC,MAAM,4BAA4B,CAAC;AAChD,OAAO,EAAC,WAAW,EAAC,MAAM,yCAAyC,CAAC;AACpE,OAAO,EAAC,QAAQ,EAAC,MAAM,iCAAiC,CAAC;AACzD,OAAO,EAAC,uBAAuB,EAAE,uBAAuB,EAAC,MAAM,qBAAqB,CAAC;AAErF,OAAO,EAAC,aAAa,EAAC,MAAM,0CAA0C,CAAC;AA0BvE,MAAM,UAAU,WAAW,CAAC,EAQT;IAPf,IAAA,SAAS,eAAA,EACT,QAAQ,cAAA,EACR,UAAU,gBAAA,EACV,WAAW,iBAAA,EACX,gBAAgB,sBAAA,EAChB,YAAc,EAAd,IAAI,mBAAG,IAAI,CAAC,EAAE,KAAA,EACX,KAAK,cAPgB,kFAQ3B,CADW;IAEF,IAAA,KAA0C,YAAY,CAAC,EAAC,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAC,CAAC,EAAzF,UAAU,gBAAA,EAAE,SAAS,eAAA,EAAE,cAAc,oBAAoD,CAAC;IAC3F,IAAA,KAA0B,QAAQ,CAAC,KAAK,CAAC,EAAxC,UAAU,gBAAA,EAAE,SAAS,eAAmB,CAAC;IAEhD,IAAI,UAAU,EAAE;QACZ,OAAO,KAAC,aAAa,IAAC,SAAS,EAAC,uBAAuB,EAAC,WAAW,EAAE,CAAC,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,GAAI,CAAC;KACnG;IAED,OAAO,CACH,MAAC,oBAAoB,eAAK,KAAK,IAAE,SAAS,EAAE,UAAU,CAAC,qCAA8B,IAAI,CAAE,EAAE,SAAS,CAAC,iBACnG,0BACQ,UAAU,EACV,UAAU,IACd,SAAS,EAAC,uBAAuB,wBACb,cAAc,IAAI,SAAS,kBACjC,SAAS,IAAI,SAAS,kBACtB,SAAS,IAAI,SAAS,iBACpC,KAAC,IAAI,IAAC,SAAS,EAAC,2BAA2B,EAAC,IAAI,EAAE,SAAS,CAAC,eAAe,GAAI,EAC/E,KAAC,KAAK,IACF,SAAS,EAAE,UAAU,CACjB,qBAAqB,EACrB,IAAI,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC,uBAAuB,CACvE,EACD,WAAW,EAAE,WAAW,GAC1B,EACF,KAAC,WAAW,IAAC,SAAS,EAAC,4BAA4B,GAAG,KACpD,EACL,QAAQ,IAAI,KAAC,QAAQ,aAAC,QAAQ,EAAE,gBAAgB,gBAAG,QAAQ,IAAY,KACrD,CAC1B,CAAC;AACN,CAAC","sourcesContent":["import {\n    Input,\n    SearchField as ReactAriaSearchField,\n    SearchFieldProps as ReactAriaSearchFieldProps\n} from 'react-aria-components';\nimport {classNames} from '../../../utils/classnames.js';\nimport {iconNames} from '../../media/icon/icons.js';\nimport {Icon} from '../../media/icon/icon.js';\nimport {useFocusRing, useHover} from 'react-aria';\nimport {Size} from '../../../constants/size.js';\nimport {ClearButton} from '../../action/clearbutton/clearbutton.js';\nimport {HelpText} from '../../text/helptext/helptext.js';\nimport {LABEL_SIZE_LG_CSS_CLASS, LABEL_SIZE_MD_CSS_CLASS} from '../../text/index.js';\nimport {RefAttributes} from 'react';\nimport {SkeletonField} from '../../feedback/skeleton/skeletonfield.js';\n\nexport interface SearchFieldProps extends ReactAriaSearchFieldProps, RefAttributes<HTMLDivElement> {\n    'aria-label': string;\n    /**\n     * Additional help text to provide more information.\n     */\n    helpText?: string;\n    /**\n     * Whether to show skeleton instead of an actual element.\n     */\n    isSkeleton?: boolean;\n    /**\n     * Placeholder to show when there is no text.\n     */\n    placeholder?: string;\n    /**\n     * Whether to show icon for help text.\n     */\n    showHelpTextIcon?: boolean;\n    /**\n     * Size of the TextField, two different sizes are available.\n     */\n    size?: Size.xs | Size.sm | Size.md;\n}\n\nexport function SearchField({\n    className,\n    helpText,\n    isSkeleton,\n    placeholder,\n    showHelpTextIcon,\n    size = Size.md,\n    ...props\n}: SearchFieldProps) {\n    const {focusProps, isFocused, isFocusVisible} = useFocusRing({within: true, isTextInput: false});\n    const {hoverProps, isHovered} = useHover(props);\n\n    if (isSkeleton) {\n        return <SkeletonField className=\"skeleton-search-field\" hasHelpText={!!helpText} size={size} />;\n    }\n\n    return (\n        <ReactAriaSearchField {...props} className={classNames(`search-field search-field--${size}`, className)}>\n            <div\n                {...hoverProps}\n                {...focusProps}\n                className=\"search-field__content\"\n                data-focus-visible={isFocusVisible || undefined}\n                data-focused={isFocused || undefined}\n                data-hovered={isHovered || undefined}>\n                <Icon className=\"search-field__search-icon\" name={iconNames.MagnifyingGlass} />\n                <Input\n                    className={classNames(\n                        'search-field__input',\n                        size === Size.xs ? LABEL_SIZE_MD_CSS_CLASS : LABEL_SIZE_LG_CSS_CLASS\n                    )}\n                    placeholder={placeholder}\n                />\n                <ClearButton className=\"search-field__clear-button\" />\n            </div>\n            {helpText && <HelpText showIcon={showHelpTextIcon}>{helpText}</HelpText>}\n        </ReactAriaSearchField>\n    );\n}\n"]}