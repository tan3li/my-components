{"version":3,"file":"useintersectionobserver.js","sourceRoot":"","sources":["../../../../src/components/inputs/select/useintersectionobserver.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,WAAW,EAAE,MAAM,EAAC,MAAM,OAAO,CAAC;AAC1C,OAAO,EAAC,YAAY,EAAC,MAAM,gCAAgC,CAAC;AAC5D,OAAO,EAAC,QAAQ,EAAC,MAAM,kCAAkC,CAAC;AAE1D,MAAM,UAAU,uBAAuB,CAAC,QAAqD;IACzF,IAAM,QAAQ,GAAG,MAAM,CAA8B,IAAI,CAAC,CAAC;IAC3D,IAAM,SAAS,GAAG,WAAW,CACzB,UAAC,OAAoC;QACjC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE;YACrD,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;SAClC;IACL,CAAC,EACD,CAAC,QAAQ,CAAC,CACb,CAAC;IAEF,OAAO,WAAW,CACd,UAAC,OAAuB;;QACpB,IAAI,OAAO,EAAE;YACT,QAAQ,CAAC,OAAO,GAAG,IAAI,oBAAoB,CAAC,SAAS,CAAC,CAAC;YACvD,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SACrC;aAAM;YACH,MAAA,QAAQ,CAAC,OAAO,0CAAE,UAAU,EAAE,CAAC;SAClC;QAED,OAAO;;YACH,MAAA,QAAQ,CAAC,OAAO,0CAAE,UAAU,EAAE,CAAC;QACnC,CAAC,CAAC;IACN,CAAC,EACD,CAAC,SAAS,CAAC,CACd,CAAC;AACN,CAAC","sourcesContent":["import {useCallback, useRef} from 'react';\nimport {isEmptyArray} from '../../../utils/objecthelper.js';\nimport {safeCall} from '../../../utils/functionhelper.js';\n\nexport function useIntersectionObserver(callback?: (entry: IntersectionObserverEntry) => void) {\n    const observer = useRef<IntersectionObserver | null>(null);\n    const onVisible = useCallback(\n        (entries: IntersectionObserverEntry[]) => {\n            if (!isEmptyArray(entries) && entries[0].isIntersecting) {\n                safeCall(callback, entries[0]);\n            }\n        },\n        [callback]\n    );\n\n    return useCallback(\n        (element: HTMLDivElement) => {\n            if (element) {\n                observer.current = new IntersectionObserver(onVisible);\n                observer.current.observe(element);\n            } else {\n                observer.current?.disconnect();\n            }\n\n            return () => {\n                observer.current?.disconnect();\n            };\n        },\n        [onVisible]\n    );\n}\n"]}