{"version":3,"file":"expandtoselected.js","sourceRoot":"","sources":["../../../../src/components/inputs/treeselect/expandtoselected.ts"],"names":[],"mappings":"AAEA,MAAM,UAAU,gBAAgB,CAC5B,KAAc,EACd,YAAiC,EACjC,WAAmC,EACnC,UAAgC;IAEhC,IAAI,CAAC,WAAW,IAAI,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE;QAC/C,OAAO,YAAY,CAAC;KACvB;IAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;QACxC,IAAA,KAAoB,KAAK,CAAC,CAAC,CAAC,EAA3B,KAAK,WAAA,EAAE,QAAQ,cAAY,CAAC;QAEnC,IAAI,KAAK,KAAK,WAAW,EAAE;YACvB,IAAI,UAAU,EAAE;gBACZ,UAAU,CAAC,OAAO,CAAC,UAAC,CAAC,IAAK,OAAA,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAnB,CAAmB,CAAC,CAAC;aAClD;YACD,MAAM;SACT;QAED,IAAI,QAAQ,EAAE;YACV,IAAM,YAAY,GAAG,UAAU,aAAV,UAAU,cAAV,UAAU,GAAI,IAAI,GAAG,EAAE,CAAC;YAE7C,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACxB,gBAAgB,CAAC,QAAQ,EAAE,YAAY,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;YAEpE,IAAI,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;gBACzB,MAAM;aACT;SACJ;KACJ;IAED,OAAO,YAAY,CAAC;AACxB,CAAC","sourcesContent":["import {SelectItemBase} from '../select/selectitem.js';\n\nexport function expandToSelected<TItem extends SelectItemBase<TItem>>(\n    items: TItem[],\n    expandedKeys: Set<TItem['value']>,\n    selectedKey?: TItem['value'] | null,\n    parentKeys?: Set<TItem['value']>\n) {\n    if (!selectedKey || expandedKeys.has(selectedKey)) {\n        return expandedKeys;\n    }\n\n    for (let i = 0, len = items.length; i < len; i++) {\n        const {value, children} = items[i];\n\n        if (value === selectedKey) {\n            if (parentKeys) {\n                parentKeys.forEach((k) => expandedKeys.add(k));\n            }\n            break;\n        }\n\n        if (children) {\n            const parentKeySet = parentKeys ?? new Set();\n\n            parentKeySet.add(value);\n            expandToSelected(children, expandedKeys, selectedKey, parentKeySet);\n\n            if (expandedKeys.has(value)) {\n                break;\n            }\n        }\n    }\n\n    return expandedKeys;\n}\n"]}