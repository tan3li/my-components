{"version":3,"file":"richtexteditortoolbar.js","sourceRoot":"","sources":["../../../../src/components/inputs/richtexteditor/richtexteditortoolbar.tsx"],"names":[],"mappings":";;AAAA,OAAO,EAAC,gBAAgB,EAAC,MAAM,eAAe,CAAC;AAC/C,OAAO,EAAC,OAAO,EAAE,cAAc,EAAE,WAAW,EAAC,MAAM,yBAAyB,CAAC;AAC7E,OAAO,EAAC,WAAW,EAAE,aAAa,EAAE,UAAU,EAAE,IAAI,EAAW,MAAM,uBAAuB,CAAC;AAC7F,OAAO,EAAW,SAAS,EAAC,MAAM,sBAAsB,CAAC;AACzD,OAAO,EAAC,WAAW,EAAE,IAAI,EAAC,MAAM,6BAA6B,CAAC;AAC9D,OAAO,EAAC,sBAAsB,EAAC,MAAM,uDAAuD,CAAC;AAC7F,OAAO,EAAC,MAAM,EAAa,MAAM,oBAAoB,CAAC;AAEtD,OAAO,EAAC,OAAO,EAAC,MAAM,4BAA4B,CAAC;AACnD,OAAO,EAAC,uBAAuB,EAAC,MAAM,qBAAqB,CAAC;AAC5D,OAAO,EAAC,uBAAuB,EAAC,MAAM,uBAAuB,CAAC;AAC9D,OAAO,EAAY,OAAO,EAAC,MAAM,OAAO,CAAC;AACzC,OAAO,EAAC,wBAAwB,EAAC,MAAM,+BAA+B,CAAC;AACvE,OAAO,EAAC,kBAAkB,EAAC,MAAM,mDAAmD,CAAC;AACrF,OAAO,EAAC,yBAAyB,EAAC,MAAM,oCAAoC,CAAC;AAE7E,OAAO,EAAC,mBAAmB,EAAC,MAAM,kCAAkC,CAAC;AAUrE,SAAS,aAAa,CAAC,EAAoE;QAAnE,QAAQ,cAAA,EAAE,QAAQ,cAAA,EAAE,UAAU,gBAAA,EAAE,KAAK,WAAA,EAAE,OAAO,aAAA;IAClE,OAAO,CACH,MAAC,cAAc,eACX,KAAC,UAAU,kBACK,KAAK,EACjB,QAAQ,EAAE,QAAQ,EAClB,UAAU,EAAE,UAAU,EACtB,OAAO,EAAE,OAAO,EAChB,IAAI,EAAE,IAAI,CAAC,EAAE,EACb,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,EACtD,OAAO,EAAE,aAAa,CAAC,OAAO,GAChC,EACF,KAAC,OAAO,aAAC,IAAI,EAAE,WAAW,CAAC,KAAK,gBAAG,KAAK,IAAW,IACtC,CACpB,CAAC;AACN,CAAC;AAQD,qDAAqD;AACrD,MAAM,UAAU,qBAAqB,CAAC,EAAqE;;IAApE,IAAA,UAAU,gBAAA,EAAE,iBAAiB,uBAAA,EAAK,KAAK,cAAxC,mCAAyC,CAAD;IACnE,IAAA,MAAM,GAAI,gBAAgB,EAAE,OAAtB,CAAuB;IACpC,IAAM,mBAAmB,GAAG,sBAAsB,EAAE,CAAC;IACrD,IAAM,eAAe,GAAG,kBAAkB,EAAE,CAAC;IACvC,IAAA,KACF,MAAA,KAAK,CAAC,MAAM,mCAAI,EAAE,EADf,OAAO,aAAA,EAAE,IAAI,UAAA,EAAE,MAAM,YAAA,EAAE,SAAS,eAAA,EAAE,WAAW,iBAAA,EAAE,UAAU,gBAAA,EAAE,IAAI,UAAA,EAAE,SAAS,eAC3D,CAAC;IACvB,IAAM,iBAAiB,GAAe,OAAO,CACzC,cAAM,OAAA,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,UAAC,EAAW;YAAV,EAAE,QAAA,EAAE,KAAK,WAAA;QAAM,OAAA,CAAC,EAAC,EAAE,IAAA,EAAE,IAAI,EAAE,KAAK,EAAC,CAAC;IAAnB,CAAmB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAtE,CAAsE,EAC5E,CAAC,SAAS,CAAC,CACd,CAAC;IAEF,IAAI,CAAC,MAAM,EAAE;QACT,OAAO,IAAI,CAAC;KACf;IAED,IAAM,WAAW,GAAgB,EAAE,CAAC;IAEpC,IAAI,OAAO,EAAE;QACT,IAAM,YAAY,GAA8B;YAC5C,EAAC,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,mBAAmB,CAAC,UAAU,CAAC,EAAC;YACjD,EAAC,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,mBAAmB,CAAC,UAAU,CAAC,EAAC;YACjD,EAAC,KAAK,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,mBAAmB,CAAC,YAAY,CAAC,EAAC;YACpD,EAAC,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,mBAAmB,CAAC,WAAW,CAAC,EAAC;SACrD,CAAC;QACF,IAAI,mBAAiB,GAAuB,YAAY,CAAC,CAAC,CAAC,CAAC;QAE5D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YACrD,IAAM,WAAW,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;YAEpC,IAAI,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAC,KAAK,EAAE,WAAW,CAAC,KAAK,EAAC,CAAC,EAAE;gBACxD,mBAAiB,GAAG,WAAW,CAAC;gBAChC,MAAM;aACT;SACJ;QAED,WAAW,CAAC,IAAI,CACZ,KAAC,MAAM,kBACS,mBAAmB,CAAC,WAAW,CAAC,EAC5C,SAAS,EAAC,qCAAqC,EAC/C,UAAU,EAAE,UAAU,EACtB,OAAO,EAAE,IAAI,EACb,YAAY,EAAE,KAAK,EACnB,KAAK,EAAE,YAAY,EAEnB,SAAS,EAAE,OAAO,EAClB,iBAAiB,EAAE,UAAC,KAAK;gBACrB,IAAI,CAAC,KAAK,EAAE;oBACR,OAAO;iBACV;gBAED,MAAM;qBACD,KAAK,EAAE;qBACP,KAAK,EAAE;qBACP,aAAa,CAAC;oBACX,KAAK,EAAE,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,mBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAU;iBACnE,CAAC;qBACD,GAAG,EAAE,CAAC;YACf,CAAC,EACD,iBAAiB,EAAE,UAAC,kBAAkB;gBAC5B,IAAA,KAAgB,kBAAkB,CAAC,IAAI,EAAtC,KAAK,WAAA,EAAE,IAAI,UAA2B,CAAC;gBAC9C,IAAM,YAAY,GAAG,uBAAuB,CAAC,KAAK,CAAC,CAAC;gBAEpD,OAAO,CACH,KAAC,mBAAmB,eACZ,kBAAkB,IACtB,KAAK,EACD,wBAAM,SAAS,EAAE,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,uBAAuB,gBAAG,IAAI,IAAQ,IAE3F,CACL,CAAC;YACN,CAAC,EACD,IAAI,EAAE,IAAI,CAAC,EAAE,EACb,IAAI,EAAE,mBAAiB,CAAC,IAAI,EAC5B,KAAK,EAAE,mBAAiB,CAAC,KAAK,IA9B1B,GAAG,CA+BT,CACL,CAAC;KACL;IAED,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,MAAM,IAAI,SAAS,CAAC,EAAE;QACzD,WAAW,CAAC,IAAI,CAAC,KAAC,OAAO,IAAU,WAAW,EAAE,WAAW,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAArD,IAAI,CAAqD,CAAC,CAAC;KAC5F;IAED,IAAI,IAAI,EAAE;QACN,WAAW,CAAC,IAAI,CACZ,KAAC,aAAa,IACV,QAAQ,EAAE,SAAS,CAAC,KAAK,EACzB,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EACjC,UAAU,EAAE,UAAU,EAEtB,KAAK,EAAE,mBAAmB,CAAC,MAAM,CAAC,EAClC,OAAO,EAAE,cAAM,OAAA,MAAM,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,CAAC,UAAU,EAAE,CAAC,GAAG,EAAE,EAAzC,CAAyC,IAFpD,GAAG,CAGT,CACL,CAAC;KACL;IACD,IAAI,MAAM,EAAE;QACR,WAAW,CAAC,IAAI,CACZ,KAAC,aAAa,IACV,QAAQ,EAAE,SAAS,CAAC,UAAU,EAC9B,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,EACnC,UAAU,EAAE,UAAU,EAEtB,KAAK,EAAE,mBAAmB,CAAC,QAAQ,CAAC,EACpC,OAAO,EAAE,cAAM,OAAA,MAAM,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,CAAC,YAAY,EAAE,CAAC,GAAG,EAAE,EAA3C,CAA2C,IAFtD,GAAG,CAGT,CACL,CAAC;KACL;IACD,IAAI,SAAS,EAAE;QACX,WAAW,CAAC,IAAI,CACZ,KAAC,aAAa,IACV,QAAQ,EAAE,SAAS,CAAC,aAAa,EACjC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,EACtC,UAAU,EAAE,UAAU,EAEtB,KAAK,EAAE,mBAAmB,CAAC,WAAW,CAAC,EACvC,OAAO,EAAE,cAAM,OAAA,MAAM,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,CAAC,eAAe,EAAE,CAAC,GAAG,EAAE,EAA9C,CAA8C,IAFzD,GAAG,CAGT,CACL,CAAC;KACL;IAED,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,WAAW,IAAI,UAAU,CAAC,EAAE;QACvD,WAAW,CAAC,IAAI,CAAC,KAAC,OAAO,IAAU,WAAW,EAAE,WAAW,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAArD,IAAI,CAAqD,CAAC,CAAC;KAC5F;IAED,IAAI,WAAW,EAAE;QACb,WAAW,CAAC,IAAI,CACZ,KAAC,aAAa,IACV,QAAQ,EAAE,SAAS,CAAC,iBAAiB,EACrC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,EACxC,UAAU,EAAE,UAAU,EAEtB,KAAK,EAAE,mBAAmB,CAAC,cAAc,CAAC,EAC1C,OAAO,EAAE,cAAM,OAAA,MAAM,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,CAAC,iBAAiB,EAAE,CAAC,GAAG,EAAE,EAAhD,CAAgD,IAF3D,IAAI,CAGV,CACL,CAAC;KACL;IACD,IAAI,UAAU,EAAE;QACZ,WAAW,CAAC,IAAI,CACZ,KAAC,aAAa,IACV,QAAQ,EAAE,SAAS,CAAC,iBAAiB,EACrC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,EACvC,UAAU,EAAE,UAAU,EAEtB,KAAK,EAAE,mBAAmB,CAAC,YAAY,CAAC,EACxC,OAAO,EAAE,cAAM,OAAA,MAAM,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,CAAC,gBAAgB,EAAE,CAAC,GAAG,EAAE,EAA/C,CAA+C,IAF1D,IAAI,CAGV,CACL,CAAC;KACL;IAED,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,EAAE;QAChC,WAAW,CAAC,IAAI,CAAC,KAAC,OAAO,IAAU,WAAW,EAAE,WAAW,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAArD,IAAI,CAAqD,CAAC,CAAC;KAC5F;IAED,IAAI,IAAI,EAAE;QACN,WAAW,CAAC,IAAI,CACZ,KAAC,wBAAwB,aAAS,YAAY,EAAE,iBAAiB,gBAC7D,KAAC,aAAa,IACV,QAAQ,EAAE,SAAS,CAAC,OAAO,EAC3B,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EACjC,UAAU,EAAE,UAAU,EACtB,KAAK,EAAE,mBAAmB,CAAC,MAAM,CAAC,GACpC,KANwB,GAAG,CAON,CAC9B,CAAC;KACL;IAED,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,KAAI,iBAAiB,aAAjB,iBAAiB,uBAAjB,iBAAiB,CAAE,MAAM,CAAA,EAAE;QACrD,WAAW,CAAC,IAAI,CAAC,KAAC,OAAO,IAAU,WAAW,EAAE,WAAW,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAArD,IAAI,CAAqD,CAAC,CAAC;KAC5F;IAED,IAAI,iBAAiB,aAAjB,iBAAiB,uBAAjB,iBAAiB,CAAE,MAAM,EAAE;QAC3B,WAAW,CAAC,IAAI,CACZ,KAAC,IAAI,aACD,KAAK,EAAE,iBAAiB,EAExB,QAAQ,EAAE,UAAC,GAAG;gBACV,IAAM,OAAO,GAAG,yBAAyB,CAAC,IAAI,EAAE,GAAG,EAAE,iBAAiB,CAAC,CAAC;gBAExE,IAAI,OAAO,KAAK,CAAC,CAAC,EAAE;oBACV,IAAA,KAAa,iBAAiB,CAAC,OAAO,CAAC,EAAtC,EAAE,QAAA,EAAE,MAAI,UAA8B,CAAC;oBAE9C,MAAM;yBACD,KAAK,EAAE;yBACP,KAAK,EAAE;yBACP,WAAW,CAAC,EAAC,EAAE,EAAE,EAAY,EAAE,KAAK,EAAE,MAAI,EAAC,CAAC;yBAC5C,GAAG,EAAE,CAAC;iBACd;YACL,CAAC,gBACD,KAAC,aAAa,IACV,QAAQ,EAAE,SAAS,CAAC,SAAS,EAC7B,UAAU,EAAE,UAAU,EACtB,KAAK,EAAE,eAAe,CAAC,UAAU,CAAC,GACpC,KAlBE,KAAK,CAmBN,CACV,CAAC;KACL;IAED,OAAO,CACH,wCACmB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,gBACrB,mBAAmB,CAAC,gBAAgB,CAAC,EACjD,SAAS,EAAC,qBAAqB,EAC/B,IAAI,EAAC,SAAS,gBACb,WAAW,IACV,CACT,CAAC;AACN,CAAC","sourcesContent":["import {useCurrentEditor} from '@tiptap/react';\nimport {Tooltip, TooltipTrigger, TooltipType} from '../../feedback/index.js';\nimport {ButtonStyle, ButtonVariant, IconButton, Menu, MenuItem} from '../../action/index.js';\nimport {IconName, iconNames} from '../../media/index.js';\nimport {Orientation, Size} from '../../../constants/index.js';\nimport {useTranslateFormatting} from '../../../hooks/translations/usetranslateformatting.js';\nimport {Select, SelectItem} from '../select/index.js';\nimport {Level} from '@tiptap/extension-heading';\nimport {Divider} from '../../datadisplay/index.js';\nimport {LABEL_SIZE_LG_CSS_CLASS} from '../../text/index.js';\nimport {headingExtensionClasses} from './headingextension.js';\nimport {ReactNode, useMemo} from 'react';\nimport {RichTextEditorLinkDialog} from './richtexteditorlinkdialog.js';\nimport {useTranslateCommon} from '../../../hooks/translations/usetranslatecommon.js';\nimport {getIndexWithPropertyValue} from '../../../utils/collectionhelper.js';\nimport {RichTextEditorToolbarConfig} from './toolbarconfig.js';\nimport {SelectOptionContent} from '../select/selectoptioncontent.js';\n\ninterface ToolbarButtonProps {\n    iconName: IconName;\n    isActive?: boolean;\n    isDisabled?: boolean;\n    label: string;\n    onPress?: () => void;\n}\n\nfunction ToolbarButton({iconName, isActive, isDisabled, label, onPress}: ToolbarButtonProps) {\n    return (\n        <TooltipTrigger>\n            <IconButton\n                aria-label={label}\n                iconName={iconName}\n                isDisabled={isDisabled}\n                onPress={onPress}\n                size={Size.sm}\n                style={isActive ? ButtonStyle.Fill : ButtonStyle.Plain}\n                variant={ButtonVariant.Neutral}\n            />\n            <Tooltip type={TooltipType.Plain}>{label}</Tooltip>\n        </TooltipTrigger>\n    );\n}\n\ninterface RichTextEditorToolbarProps {\n    config?: RichTextEditorToolbarConfig;\n    isDisabled?: boolean;\n    onModalOpenChange?: (isOpen: boolean) => void;\n}\n\n// eslint-disable-next-line max-statements,complexity\nexport function RichTextEditorToolbar({isDisabled, onModalOpenChange, ...props}: RichTextEditorToolbarProps) {\n    const {editor} = useCurrentEditor();\n    const translateFormatting = useTranslateFormatting();\n    const translateCommon = useTranslateCommon();\n    const {heading, bold, italic, underline, orderedList, bulletList, link, variables}: RichTextEditorToolbarConfig =\n        props.config ?? {};\n    const variableMenuItems: MenuItem[] = useMemo(\n        () => (variables ? variables.map(({id, label}) => ({id, name: label})) : []),\n        [variables]\n    );\n\n    if (!editor) {\n        return null;\n    }\n\n    const actionNodes: ReactNode[] = [];\n\n    if (heading) {\n        const headingItems: Array<SelectItem<number>> = [\n            {value: 1, text: translateFormatting('heading1')},\n            {value: 2, text: translateFormatting('heading2')},\n            {value: -1, text: translateFormatting('normalText')},\n            {value: 3, text: translateFormatting('smallText')}\n        ];\n        let activeHeadingItem: SelectItem<number> = headingItems[2];\n\n        for (let i = 0, len = headingItems.length; i < len; i++) {\n            const headingItem = headingItems[i];\n\n            if (editor.isActive('heading', {level: headingItem.value})) {\n                activeHeadingItem = headingItem;\n                break;\n            }\n        }\n\n        actionNodes.push(\n            <Select\n                aria-label={translateFormatting('textStyle')}\n                className=\"text-editor-toolbar__heading-select\"\n                isDisabled={isDisabled}\n                isPlain={true}\n                isSearchable={false}\n                items={headingItems}\n                key=\"h\"\n                menuWidth={'14rem'}\n                onSelectionChange={(value) => {\n                    if (!value) {\n                        return;\n                    }\n\n                    editor\n                        .chain()\n                        .focus()\n                        .toggleHeading({\n                            level: (value === -1 ? activeHeadingItem.value : value) as Level\n                        })\n                        .run();\n                }}\n                renderItemContent={(optionContentProps) => {\n                    const {value, text} = optionContentProps.item;\n                    const headingClass = headingExtensionClasses[value];\n\n                    return (\n                        <SelectOptionContent\n                            {...optionContentProps}\n                            label={\n                                <span className={headingClass ? headingClass : LABEL_SIZE_LG_CSS_CLASS}>{text}</span>\n                            }\n                        />\n                    );\n                }}\n                size={Size.xs}\n                text={activeHeadingItem.text}\n                value={activeHeadingItem.value}\n            />\n        );\n    }\n\n    if (actionNodes.length > 0 && (bold || italic || underline)) {\n        actionNodes.push(<Divider key=\"d1\" orientation={Orientation.vertical} size={Size.sm} />);\n    }\n\n    if (bold) {\n        actionNodes.push(\n            <ToolbarButton\n                iconName={iconNames.TextB}\n                isActive={editor.isActive('bold')}\n                isDisabled={isDisabled}\n                key=\"b\"\n                label={translateFormatting('bold')}\n                onPress={() => editor.chain().focus().toggleBold().run()}\n            />\n        );\n    }\n    if (italic) {\n        actionNodes.push(\n            <ToolbarButton\n                iconName={iconNames.TextItalic}\n                isActive={editor.isActive('italic')}\n                isDisabled={isDisabled}\n                key=\"i\"\n                label={translateFormatting('italic')}\n                onPress={() => editor.chain().focus().toggleItalic().run()}\n            />\n        );\n    }\n    if (underline) {\n        actionNodes.push(\n            <ToolbarButton\n                iconName={iconNames.TextUnderline}\n                isActive={editor.isActive('underline')}\n                isDisabled={isDisabled}\n                key=\"u\"\n                label={translateFormatting('underline')}\n                onPress={() => editor.chain().focus().toggleUnderline().run()}\n            />\n        );\n    }\n\n    if (actionNodes.length > 0 && (orderedList || bulletList)) {\n        actionNodes.push(<Divider key=\"d2\" orientation={Orientation.vertical} size={Size.sm} />);\n    }\n\n    if (orderedList) {\n        actionNodes.push(\n            <ToolbarButton\n                iconName={iconNames.FormatListNumbers}\n                isActive={editor.isActive('orderedList')}\n                isDisabled={isDisabled}\n                key=\"ol\"\n                label={translateFormatting('numberedList')}\n                onPress={() => editor.chain().focus().toggleOrderedList().run()}\n            />\n        );\n    }\n    if (bulletList) {\n        actionNodes.push(\n            <ToolbarButton\n                iconName={iconNames.FormatListBullets}\n                isActive={editor.isActive('bulletList')}\n                isDisabled={isDisabled}\n                key=\"ul\"\n                label={translateFormatting('bulletList')}\n                onPress={() => editor.chain().focus().toggleBulletList().run()}\n            />\n        );\n    }\n\n    if (actionNodes.length > 0 && link) {\n        actionNodes.push(<Divider key=\"d3\" orientation={Orientation.vertical} size={Size.sm} />);\n    }\n\n    if (link) {\n        actionNodes.push(\n            <RichTextEditorLinkDialog key=\"a\" onOpenChange={onModalOpenChange}>\n                <ToolbarButton\n                    iconName={iconNames.LinkAlt}\n                    isActive={editor.isActive('link')}\n                    isDisabled={isDisabled}\n                    label={translateFormatting('link')}\n                />\n            </RichTextEditorLinkDialog>\n        );\n    }\n\n    if (actionNodes.length > 0 && variableMenuItems?.length) {\n        actionNodes.push(<Divider key=\"d4\" orientation={Orientation.vertical} size={Size.sm} />);\n    }\n\n    if (variableMenuItems?.length) {\n        actionNodes.push(\n            <Menu\n                items={variableMenuItems}\n                key=\"var\"\n                onAction={(key) => {\n                    const itemIdx = getIndexWithPropertyValue('id', key, variableMenuItems);\n\n                    if (itemIdx !== -1) {\n                        const {id, name} = variableMenuItems[itemIdx];\n\n                        editor\n                            .chain()\n                            .focus()\n                            .setVariable({id: id as string, label: name})\n                            .run();\n                    }\n                }}>\n                <ToolbarButton\n                    iconName={iconNames.Variables}\n                    isDisabled={isDisabled}\n                    label={translateCommon('variable')}\n                />\n            </Menu>\n        );\n    }\n\n    return (\n        <div\n            aria-controls={editor.view.dom.id}\n            aria-label={translateFormatting('textFormatting')}\n            className=\"text-editor-toolbar\"\n            role=\"toolbar\">\n            {actionNodes}\n        </div>\n    );\n}\n"]}