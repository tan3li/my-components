{"version":3,"file":"multiselect.js","sourceRoot":"","sources":["../../../../src/components/inputs/multiselect/multiselect.tsx"],"names":[],"mappings":"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","sourcesContent":["import {filterItems} from '../select/filteritems.js';\nimport {SelectItemBase} from '../select/selectitem.js';\nimport {classNames} from '../../../utils/classnames.js';\nimport {\n    ChangeEvent,\n    CSSProperties,\n    KeyboardEvent,\n    ReactNode,\n    RefAttributes,\n    useCallback,\n    useEffect,\n    useRef,\n    useState\n} from 'react';\nimport {useCombobox, useMultipleSelection} from 'downshift';\nimport {LabelContext, Popover, Provider, TextContext} from 'react-aria-components';\nimport {Field} from '../common/field/field.js';\nimport {TDataState} from '../../../constants/datastate.js';\nimport {useDataState} from '../../../hooks/usedatastate.js';\nimport {Label, LABEL_SIZE_LG_CSS_CLASS, LABEL_SIZE_MD_CSS_CLASS} from '../../text/label/label.js';\nimport {iconNames} from '../../media/icon/icons.js';\nimport {Icon} from '../../media/icon/icon.js';\nimport {Size} from '../../../constants/size.js';\nimport {chain, useFilter, useFocusRing, useHover} from 'react-aria';\nimport {useTranslateCommon} from '../../../hooks/translations/usetranslatecommon.js';\nimport {useResizeObserver} from '@react-aria/utils';\nimport {emptyFn, isFunction, safeCall} from '../../../utils/functionhelper.js';\nimport {isNullOrUndefined} from '../../../utils/objecthelper.js';\nimport {MultiSelectChip, SelectedItemStyle} from './multiselectchip.js';\nimport {TooltipContent} from '../../text/fieldlabel/fieldlabel.js';\nimport {ClearButton} from '../../action/clearbutton/clearbutton.js';\nimport {scrollBottom} from '../../../utils/scrollbottom.js';\nimport {LoadingItem} from '../select/loadingitem.js';\nimport {SelectOptionsEmptyState} from '../select/selectoptionsemptystate.js';\nimport {scrollRight} from '../../../utils/scrollright.js';\nimport {createFlatSelectItemList} from '../select/createflatselectitemlist.js';\nimport {InputChangeTriggerAction} from '../select/selectprops.js';\nimport {AnyObject} from '../../../hooks/usechangeparamscallback.js';\nimport {hasItemWithText} from '../select/hasitemwithtext.js';\nimport {SpecialSelectItemKey} from '../select/index.js';\nimport {BottomLoader} from '../select/bottomloader.js';\nimport {useFieldHelpText} from '../../../hooks/usefieldhelptext.js';\nimport {Tag, TagStyle} from '../../navigation/index.js';\nimport {renderMultiSelectItems} from './rendermultiselectitems.js';\nimport {useSelectedItemsMap} from './useselecteditemsmap.js';\nimport {isItemsChanged} from './isitemschanged.js';\nimport {updateSelectedItems} from './updateselecteditems.js';\nimport {useNonModalPopoverInModalFix} from '../../../hooks/usenonmodalpopoverinmodalfix.js';\nimport {SelectOptionContentProps} from '../select/selectoptioncontentprops.js';\nimport {useSelectItemHighlight} from '../select/useselectitemhighlight.js';\nimport {SkeletonField} from '../../feedback/skeleton/skeletonfield.js';\nimport {useSelectOptionCountAnnouncement} from '../select/useselectoptioncountannouncement.js';\n\ninterface CreateOptions<T> {\n    /**\n     * Handler to get text node for creatable item.\n     * Default text will be used if not provided.\n     */\n    getTextNode?: (text: string) => ReactNode;\n    /**\n     * Whether creatable item is visible when search text is not found from existing items or selectedItems.\n     */\n    isAllowed: boolean | ((text: string) => boolean);\n    /**\n     * Handler to call when creatable item is selected.\n     */\n    onCreate?: (item: T) => void;\n}\n\nexport interface MultiSelectProps<P extends AnyObject, TItem extends SelectItemBase<TItem>>\n    extends RefAttributes<HTMLDivElement> {\n    /**\n     * Label for screen readers if actual label is not provided.\n     */\n    ['aria-label']?: string;\n    /**\n     * Handler that is called with object containing selection state value and changeParams when the element's\n     * selection state changes.\n     */\n    changeCallback?: (args: P & {value: TItem[]}) => void;\n    /**\n     * Object which is provided with element's selection state value property in changeCallback.\n     */\n    changeParams?: P;\n    /**\n     * The CSS className for the element.\n     */\n    className?: string;\n    /**\n     * Options for item creation.\n     */\n    createOptions?: CreateOptions<TItem>;\n    /**\n     * Map that contains model property states with messages.\n     */\n    dataState?: Map<TDataState, string> | null;\n    /**\n     * The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.\n     */\n    disabledKeys?: Array<TItem['value']>;\n    /**\n     * Set of item keys whose children should be visible.\n     */\n    expandedKeys?: Set<TItem['value']>;\n    /**\n     * Additional help text to provide more information.\n     */\n    helpText?: string;\n    /**\n     * Whether element is disabled.\n     */\n    isDisabled?: boolean;\n    /**\n     * Whether loading item should be displayed among options.\n     */\n    isLoading?: boolean;\n    /**\n     * Whether required indicator is visible.\n     */\n    isRequired?: boolean;\n    /**\n     * Whether element is read-only.\n     */\n    isReadOnly?: boolean;\n    /**\n     * Whether to show skeleton instead of an actual element.\n     */\n    isSkeleton?: boolean;\n    /**\n     * Custom CSS class name for item.\n     */\n    itemClassName?: string | ((item: TItem) => string);\n    /**\n     * List of items to show.\n     */\n    items: TItem[];\n    /**\n     * Label for the element.\n     */\n    label?: ReactNode;\n    /**\n     * Width for the menu.\n     */\n    menuWidth?: CSSProperties['width'];\n    /**\n     * Handler that is called when bottom loader is reached.\n     */\n    onBottomLoaderVisible?: (entry: IntersectionObserverEntry) => void;\n    /**\n     * Handler that is called when something is typed to input field. Local search will not be used if this is set.\n     */\n    onInputChange?: (value: string, inputChangeTrigger: InputChangeTriggerAction) => void;\n    /**\n     * Handler that is called on keyboard event in menu toggler.\n     */\n    onKeyDown?: (e: KeyboardEvent, highlightedItem?: TItem) => boolean;\n    /**\n     * Handler that is called when menu open status changes.\n     */\n    onOpenChange?: (isOpen: boolean) => void;\n    /**\n     * Placeholder for input field when there are no selected items and element does not have focus.\n     */\n    placeholder?: string;\n    /**\n     * Custom renderer for item content.\n     */\n    renderItemContent?: (props: SelectOptionContentProps<TItem>) => ReactNode;\n    /**\n     * Selected items can be display with tag or text style. If not given, text style is the default.\n     */\n    selectedItemStyle?: SelectedItemStyle;\n    /**\n     * List of selected items.\n     */\n    selectedItems?: TItem[];\n    /**\n     * Whether to show icon for help text.\n     */\n    showHelpTextIcon?: boolean;\n    /**\n     * Size of the element.\n     */\n    size?: Size.md | Size.sm | Size.xs;\n    /**\n     * Label tooltip content.\n     */\n    tooltipContent?: TooltipContent;\n}\n\nconst HIDDEN_CHIP_CSS_CLASS = 'multiselect__chip--hidden';\n\n// eslint-disable-next-line complexity,max-statements\nexport function MultiSelect<P extends AnyObject, TItem extends SelectItemBase<TItem>>({\n    changeCallback,\n    changeParams,\n    className,\n    createOptions,\n    dataState,\n    disabledKeys,\n    expandedKeys,\n    helpText,\n    isLoading,\n    isRequired,\n    isSkeleton,\n    itemClassName,\n    items,\n    label,\n    menuWidth,\n    onBottomLoaderVisible,\n    onOpenChange,\n    ref,\n    renderItemContent,\n    selectedItemStyle = SelectedItemStyle.text,\n    showHelpTextIcon,\n    size = Size.md,\n    tooltipContent,\n    ...props\n}: MultiSelectProps<P, TItem>) {\n    const {focusProps, isFocused, isFocusVisible} = useFocusRing({within: true, isTextInput: false});\n    const {hoverProps, isHovered} = useHover(props);\n    const {isDisabled} = props;\n    const selectedItemsFromProps = props.selectedItems;\n    const {highlightedIndex, onHighlightedIndexChange, highlightSource} = useSelectItemHighlight();\n    const [dynamicMenuWidth, setDynamicMenuWidth] = useState(0);\n    const [inputValue, setInputValue] = useState('');\n    const [selectedItems, setSelectedItems] = useState<TItem[]>(\n        selectedItemsFromProps ? [...selectedItemsFromProps] : []\n    );\n    const [hiddenSelectedItemsCount, setHiddenSelectedItemsCount] = useState(0);\n    const {hasError, isReadOnly, errorMessage} = useDataState(dataState, false, props.isReadOnly);\n    const {fieldProps, helpTextProps} = useFieldHelpText({dataState, helpText});\n    const prevSelectedCountRef = useRef(selectedItems.length);\n    const listBoxRef = useRef<HTMLDivElement>(null);\n    const boxRef = useRef<HTMLDivElement>(null);\n    const chipsRef = useRef<HTMLDivElement>(null);\n    const otherSelectCountRef = useRef<HTMLSpanElement>(null);\n    const inputRef = useRef<HTMLInputElement>(null);\n    const popoverRef = useRef<HTMLDivElement>(null);\n    const localFilter = useFilter({sensitivity: 'base'});\n    const translateCommon = useTranslateCommon();\n    const [filteredItems, setFilteredItems] = useState<TItem[] | null>(null);\n    const itemsToRender = (filteredItems ?? items).slice();\n\n    if (\n        inputValue &&\n        createOptions &&\n        (isFunction(createOptions.isAllowed) ? createOptions.isAllowed(inputValue) : createOptions.isAllowed) &&\n        !hasItemWithText(selectedItems, inputValue) &&\n        !hasItemWithText(items, inputValue)\n    ) {\n        itemsToRender.push({value: SpecialSelectItemKey.CREATABLE, text: inputValue} as TItem);\n    }\n\n    const flatItems = createFlatSelectItemList(itemsToRender, true, expandedKeys);\n\n    // Create map of selected items for quick lookup\n    const selectedItemsMap = useSelectedItemsMap(selectedItems);\n\n    const triggerChange = (newSelectedItems: TItem[]) => {\n        if (isItemsChanged(newSelectedItems, selectedItemsFromProps)) {\n            safeCall(changeCallback, {...changeParams, value: newSelectedItems.slice()} as P & {value: TItem[]});\n        }\n    };\n    const clearSelectedItems = () => {\n        const newSelectedItems = [];\n\n        setSelectedItems(newSelectedItems);\n        triggerChange(newSelectedItems);\n        inputRef.current?.focus();\n    };\n    const onInputChange = (val: string, inputChangeTrigger: InputChangeTriggerAction) => {\n        setInputValue(val);\n\n        if (props.onInputChange) {\n            props.onInputChange(val, inputChangeTrigger);\n        } else {\n            // use local filtering\n            setFilteredItems(val ? filterItems(items, val, localFilter) : null);\n        }\n    };\n\n    const adjustHiddenSelectedItems = () => {\n        const chipsElement = chipsRef.current;\n        const otherSelectCountElement = otherSelectCountRef.current;\n\n        if (!chipsElement) {\n            return;\n        }\n\n        const chipElements = Array.from(chipsElement.children) as HTMLSpanElement[];\n\n        chipElements.forEach((chip) => {\n            chip.classList.remove(HIDDEN_CHIP_CSS_CLASS);\n        });\n\n        if (otherSelectCountElement) {\n            otherSelectCountElement.textContent = '';\n        }\n\n        let hideCount = 0;\n\n        if (!isFocused || isReadOnly) {\n            for (let i = chipElements.length - 1; i >= 0; i--) {\n                const {scrollWidth, offsetWidth} = chipsElement;\n                const chip = chipElements[i];\n\n                if (scrollWidth > offsetWidth) {\n                    chip.classList.add(HIDDEN_CHIP_CSS_CLASS);\n                    hideCount++;\n                    if (otherSelectCountElement) {\n                        otherSelectCountElement.textContent = `+${hideCount}`;\n                    }\n                } else {\n                    break;\n                }\n            }\n        }\n\n        setHiddenSelectedItemsCount(hideCount);\n    };\n\n    const updateMenuWidth = () => {\n        const box = boxRef.current;\n\n        if (box) {\n            const {width} = box.getBoundingClientRect();\n\n            if (width !== dynamicMenuWidth) {\n                setDynamicMenuWidth(width);\n            }\n        }\n    };\n\n    const {getSelectedItemProps, getDropdownProps, removeSelectedItem} = useMultipleSelection<TItem>({\n        selectedItems,\n        onStateChange: (changes) => {\n            const newSelectedItems = changes.selectedItems ?? [];\n            const {activeIndex, type} = changes;\n\n            switch (type) {\n                case useMultipleSelection.stateChangeTypes.SelectedItemKeyDownBackspace:\n                case useMultipleSelection.stateChangeTypes.SelectedItemKeyDownDelete:\n                case useMultipleSelection.stateChangeTypes.DropdownKeyDownBackspace:\n                case useMultipleSelection.stateChangeTypes.FunctionRemoveSelectedItem:\n                    setSelectedItems(newSelectedItems);\n\n                    if (type === useMultipleSelection.stateChangeTypes.FunctionRemoveSelectedItem) {\n                        triggerChange(newSelectedItems);\n                    }\n                    break;\n                case useMultipleSelection.stateChangeTypes.SelectedItemKeyDownNavigationPrevious:\n                case useMultipleSelection.stateChangeTypes.SelectedItemKeyDownNavigationNext:\n                    if (!isNullOrUndefined(activeIndex) && activeIndex >= 0) {\n                        chipsRef.current?.children[activeIndex]?.scrollIntoView({block: 'nearest', inline: 'nearest'});\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n    });\n    const {isOpen, getToggleButtonProps, getLabelProps, getMenuProps, getInputProps, getItemProps} = useCombobox<TItem>(\n        {\n            highlightedIndex,\n            items: flatItems,\n            itemToString: (item) => (item ? item.text : ''),\n            isItemDisabled: (item) => (item ? !!disabledKeys?.includes(item.value) : false),\n            selectedItem: null,\n            inputValue,\n            onHighlightedIndexChange,\n            stateReducer: (state, actionAndChanges) => {\n                const {changes, type} = actionAndChanges;\n\n                switch (type) {\n                    case useCombobox.stateChangeTypes.InputKeyDownEnter:\n                    case useCombobox.stateChangeTypes.ItemClick:\n                        if (changes.selectedItem?.isReadOnly) {\n                            return {\n                                ...changes,\n                                isOpen: true,\n                                selectedItem: state.selectedItem,\n                                inputValue: state.inputValue,\n                                highlightedIndex: state.highlightedIndex\n                            };\n                        }\n\n                        return {\n                            ...changes,\n                            isOpen: true, // keep the menu open after selection\n                            highlightedIndex: state.highlightedIndex // ...with same option highlighted\n                        };\n                    default:\n                        return changes;\n                }\n            },\n            onStateChange: (changes) => {\n                const newSelectedItem = changes.selectedItem;\n                const newInputValue = changes.inputValue ?? '';\n                const changeType = changes.type;\n\n                switch (changeType) {\n                    case useCombobox.stateChangeTypes.InputKeyDownEnter:\n                    case useCombobox.stateChangeTypes.ItemClick:\n                        if (newSelectedItem) {\n                            updateSelectedItems(selectedItems, newSelectedItem);\n                            setSelectedItems([...selectedItems]);\n\n                            if (newSelectedItem.value === SpecialSelectItemKey.CREATABLE) {\n                                onInputChange('', InputChangeTriggerAction.Input);\n                                safeCall(createOptions?.onCreate, newSelectedItem);\n                            }\n                        }\n                        break;\n                    case useCombobox.stateChangeTypes.InputChange:\n                        onInputChange(newInputValue, InputChangeTriggerAction.Input);\n                        break;\n                    case useCombobox.stateChangeTypes.InputKeyDownEscape:\n                    case useCombobox.stateChangeTypes.InputBlur:\n                        scrollRight(chipsRef.current);\n                        break;\n                    case useCombobox.stateChangeTypes.InputKeyDownArrowUp:\n                    case useCombobox.stateChangeTypes.InputKeyDownArrowDown:\n                        if (changes.highlightedIndex === flatItems.length - 1) {\n                            // scroll at the bottom when last item is highlighted to make sure loader is visible\n                            scrollBottom(listBoxRef.current);\n                        }\n                        break;\n                    default:\n                        break;\n                }\n            },\n            onIsOpenChange: (changes) => {\n                const isMenuOpen = changes.isOpen;\n\n                safeCall(onOpenChange, isMenuOpen);\n\n                if (isMenuOpen) {\n                    onInputChange('', InputChangeTriggerAction.Focus);\n                    updateMenuWidth();\n                } else {\n                    setFilteredItems(null);\n                }\n            }\n        }\n    );\n\n    const selectedItemNodes: ReactNode[] = [];\n    const selectedItemsLen = selectedItems.length;\n\n    for (let i = 0; i < selectedItemsLen; i++) {\n        const item = selectedItems[i];\n        let content: ReactNode;\n\n        if (selectedItemStyle === SelectedItemStyle.tag) {\n            content = (\n                <Tag\n                    isDisabled={isReadOnly || isDisabled}\n                    onRemove={() => {\n                        removeSelectedItem(item);\n                    }}\n                    removeButtonProps={{\n                        excludeFromTabOrder: true,\n                        onPressStart: (e) => {\n                            e.continuePropagation();\n                        }\n                    }}\n                    size={size === Size.md ? Size.sm : size}\n                    style={TagStyle.Fill}>\n                    {item.text}\n                </Tag>\n            );\n        } else {\n            content = <Label size={size === Size.xs ? Size.md : Size.lg}>{item.text}</Label>;\n        }\n\n        const chipProps = getSelectedItemProps({selectedItem: item, index: i});\n\n        if (isDisabled || isReadOnly) {\n            chipProps.onClick = emptyFn;\n            chipProps.onKeyDown = emptyFn;\n        }\n\n        selectedItemNodes.push(\n            <MultiSelectChip {...chipProps} displayStyle={selectedItemStyle} key={item.value}>\n                {content}\n            </MultiSelectChip>\n        );\n    }\n\n    const onResize = useCallback(() => {\n        adjustHiddenSelectedItems();\n    }, [isFocused, isReadOnly, isOpen, isSkeleton]);\n\n    useResizeObserver({ref: boxRef, onResize});\n\n    useNonModalPopoverInModalFix(isOpen, boxRef, popoverRef);\n\n    useEffect(() => {\n        if (!isFocused) {\n            adjustHiddenSelectedItems();\n        }\n\n        const selectedCount = selectedItems.length;\n\n        if (selectedCount > prevSelectedCountRef.current) {\n            scrollRight(chipsRef.current);\n        }\n        prevSelectedCountRef.current = selectedCount;\n    }, [selectedItems]);\n\n    useEffect(() => {\n        adjustHiddenSelectedItems();\n\n        if (isFocused) {\n            scrollRight(chipsRef.current);\n        } else {\n            setInputValue('');\n            triggerChange(selectedItems);\n        }\n    }, [isFocused]);\n\n    useEffect(() => {\n        setSelectedItems(selectedItemsFromProps ? [...selectedItemsFromProps] : []);\n    }, [selectedItemsFromProps]);\n\n    useSelectOptionCountAnnouncement({isOpen, itemCount: itemsToRender.length});\n\n    const labelProps = getLabelProps();\n    const inputProps = getInputProps(\n        {\n            ...getDropdownProps({preventKeyAction: false, ref: inputRef}, {suppressRefError: true}),\n            disabled: isReadOnly || isDisabled,\n            // Workaround to cursor jump issue: https://github.com/downshift-js/downshift/issues/1108\n            onChange: (e: ChangeEvent<HTMLInputElement>) => {\n                onInputChange(e.target.value, InputChangeTriggerAction.Input);\n            }\n        },\n        {suppressRefError: true}\n    );\n    const toggleButtonProps = getToggleButtonProps({disabled: isReadOnly || isDisabled});\n    const listBoxProps = getMenuProps({ref: listBoxRef}, {suppressRefError: true});\n    let placeholder: string | undefined;\n\n    if (selectedItemsLen === 0) {\n        if (isFocused && !isReadOnly) {\n            placeholder = translateCommon('search');\n        } else {\n            placeholder = props.placeholder;\n        }\n    }\n\n    const onKeyDown = (e: KeyboardEvent) => {\n        const continueFlow = safeCall(\n            props.onKeyDown,\n            e,\n            highlightedIndex >= 0 ? flatItems[highlightedIndex] : undefined\n        );\n\n        if (continueFlow !== false && inputProps.onKeyDown) {\n            inputProps.onKeyDown(e);\n        }\n    };\n\n    // eslint-disable-next-line sonarjs/function-return-type\n    const renderCreateText = (itemText: string) => {\n        const getTextNode = createOptions?.getTextNode;\n\n        return getTextNode ?\n                getTextNode(itemText)\n            :   <>\n                    {`${translateCommon('create')} `}&quot;<strong>{itemText}</strong>&quot;\n                </>;\n    };\n\n    if (isSkeleton) {\n        const hasAnyHelpText = !!errorMessage || !!helpText;\n\n        return (\n            <SkeletonField\n                className=\"skeleton-multiselect\"\n                hasHelpText={hasAnyHelpText}\n                hasLabel={!!label}\n                size={size}\n            />\n        );\n    }\n\n    return (\n        <Provider\n            values={[\n                [LabelContext, {...labelProps}],\n                [TextContext, {slots: {description: helpTextProps}}]\n            ]}>\n            <div className={classNames('multiselect', className)} ref={ref}>\n                <Field\n                    dataState={dataState}\n                    helpText={helpText}\n                    isDisabled={isDisabled}\n                    isInvalid={hasError}\n                    isRequired={isRequired}\n                    label={label}\n                    showHelpTextIcon={showHelpTextIcon}\n                    size={size === Size.xs ? Size.sm : Size.md}\n                    tooltipContent={tooltipContent}>\n                    <div\n                        {...hoverProps}\n                        className={`multiselect__box multiselect__box--${size}`}\n                        data-disabled={!!isDisabled || undefined}\n                        data-focus-visible={isFocusVisible || undefined}\n                        data-focused={isFocused || undefined}\n                        data-hovered={isHovered || undefined}\n                        data-invalid={hasError || undefined}\n                        data-readonly={isReadOnly || undefined}\n                        ref={boxRef}>\n                        <div className=\"multiselect__box-start\">\n                            {isFocused && !isReadOnly && (\n                                <Icon className=\"multiselect__search-icon\" name={iconNames.MagnifyingGlass} />\n                            )}\n                            {selectedItemsLen > 0 && (\n                                <div {...(isFocused && focusProps)} className=\"multiselect__chips\" ref={chipsRef}>\n                                    {selectedItemNodes}\n                                </div>\n                            )}\n                            {(!isFocused || isReadOnly) && (\n                                <Label\n                                    className=\"multiselect__other-selected-count\"\n                                    ref={otherSelectCountRef}\n                                    size={size === Size.xs ? Size.md : Size.lg}>\n                                    {hiddenSelectedItemsCount > 0 && `+${hiddenSelectedItemsCount}`}\n                                </Label>\n                            )}\n                            <input\n                                {...focusProps}\n                                {...inputProps}\n                                {...fieldProps}\n                                aria-label={props['aria-label']}\n                                className={classNames(\n                                    'multiselect__input',\n                                    size === Size.xs ? LABEL_SIZE_MD_CSS_CLASS : LABEL_SIZE_LG_CSS_CLASS\n                                )}\n                                disabled={isDisabled}\n                                onBlur={chain(focusProps.onBlur, inputProps.onBlur)}\n                                onKeyDown={onKeyDown}\n                                placeholder={placeholder}\n                                readOnly={isReadOnly}\n                                size={2}\n                            />\n                        </div>\n                        <div className=\"multiselect__action-buttons\">\n                            {!isOpen && !isDisabled && !isReadOnly && selectedItemsLen > 0 && (\n                                <ClearButton\n                                    {...(focusProps as any)}\n                                    className=\"multiselect__clear-button\"\n                                    onPress={clearSelectedItems}\n                                />\n                            )}\n                            <button\n                                {...toggleButtonProps}\n                                aria-label={translateCommon('toggleMenu')}\n                                className=\"multiselect__button\">\n                                <Icon\n                                    className=\"multiselect__button-icon\"\n                                    name={isOpen ? iconNames.ExpandLessFilled : iconNames.ExpandMoreFilled}\n                                />\n                            </button>\n                        </div>\n                    </div>\n                </Field>\n                <Popover\n                    className=\"multiselect__popover\"\n                    isNonModal={true}\n                    isOpen={isOpen}\n                    maxHeight={280}\n                    placement=\"bottom left\"\n                    ref={popoverRef}\n                    shouldFlip={true}\n                    style={{width: menuWidth ?? dynamicMenuWidth}}\n                    triggerRef={boxRef}>\n                    <div {...listBoxProps} className=\"multiselect__listbox\">\n                        {(itemsToRender.length === 0 || itemsToRender[0].value === SpecialSelectItemKey.CREATABLE) &&\n                            !isLoading && <SelectOptionsEmptyState key=\"empty\" size={size} />}\n                        {renderMultiSelectItems({\n                            createText: renderCreateText,\n                            disabledKeys,\n                            expandedKeys,\n                            getItemProps,\n                            highlightedIndex,\n                            highlightSource,\n                            itemClassName,\n                            items: itemsToRender,\n                            renderItemContent,\n                            selectedItemsMap,\n                            size\n                        })}\n                        {isLoading && <LoadingItem key=\"loading\" size={size} />}\n                        {onBottomLoaderVisible && <BottomLoader key=\"loader\" onVisible={onBottomLoaderVisible} />}\n                    </div>\n                </Popover>\n            </div>\n        </Provider>\n    );\n}\n"]}