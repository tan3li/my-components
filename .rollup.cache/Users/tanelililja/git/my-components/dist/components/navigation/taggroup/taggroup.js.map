{"version":3,"file":"taggroup.js","sourceRoot":"","sources":["../../../../src/components/navigation/taggroup/taggroup.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n    Children,\n    cloneElement,\n    ReactElement,\n    ReactNode,\n    RefAttributes,\n    useCallback,\n    useEffect,\n    useId,\n    useRef,\n    useState\n} from 'react';\nimport {classNames} from '../../../utils/classnames.js';\nimport {useResizeObserver} from '@react-aria/utils';\nimport {Button, ButtonStyle, ButtonVariant} from '../../action/index.js';\nimport {useTranslateCommon} from '../../../hooks/translations/usetranslatecommon.js';\nimport {TagProps, TagStyle} from '../tag/index.js';\nimport {Size} from '../../../constants/index.js';\n\nexport interface TagGroupProps extends RefAttributes<HTMLDivElement> {\n    /**\n     * Tag element or list of Tag elements.\n     */\n    children: ReactNode;\n    /**\n     * CSS class name for the element.\n     */\n    className?: string;\n    /**\n     * Maximum number of visible tag rows when in collapsed state.\n     */\n    maxVisibleRows?: number;\n    /**\n     * Size of the tags.\n     */\n    size?: TagProps['size'];\n    /**\n     * Style of the tags.\n     */\n    style?: TagProps['style'];\n}\n\nconst HIDDEN_TAG_CSS_CLASS = 'tag--hidden';\nconst DEFAULT_MAX_VISIBLE_ROWS = 4;\n\nfunction revealChildren(element: HTMLElement) {\n    const children = Array.from(element.children) as HTMLElement[];\n\n    children.forEach((child) => {\n        child.classList.remove(HIDDEN_TAG_CSS_CLASS);\n    });\n}\n\nfunction adaptChildren({\n    element,\n    isExpanded,\n    maxVisibleRows\n}: {\n    element: HTMLElement;\n    isExpanded: boolean;\n    maxVisibleRows: number;\n}) {\n    const children = element.children as HTMLCollectionOf<HTMLElement>;\n    const len = children.length;\n\n    if (len === 0) {\n        return 0;\n    }\n\n    revealChildren(element);\n\n    let currentOffsetTop = children[0].offsetTop,\n        currentRow = 1,\n        hiddenCount = 0;\n\n    for (let i = 0; i < len; i++) {\n        const child = children[i];\n        const offsetTop = currentRow > maxVisibleRows ? currentOffsetTop : child.offsetTop;\n\n        if (offsetTop > currentOffsetTop) {\n            currentOffsetTop = offsetTop;\n            currentRow++;\n        }\n\n        if (currentRow > maxVisibleRows) {\n            if (!isExpanded) {\n                child.classList.add(HIDDEN_TAG_CSS_CLASS);\n            }\n            hiddenCount++;\n        }\n    }\n\n    return hiddenCount;\n}\n\nexport function TagGroup({\n    children: propsChildren,\n    className,\n    maxVisibleRows = DEFAULT_MAX_VISIBLE_ROWS,\n    ref,\n    size = Size.md,\n    style = TagStyle.Outline\n}: TagGroupProps) {\n    const children = Children.toArray(propsChildren);\n    const content: ReactNode[] = children.map((child) =>\n        cloneElement(child as ReactElement<TagProps>, {\n            role: 'listitem',\n            size,\n            style\n        })\n    );\n    const tagListRef = useRef<HTMLDivElement>(null);\n    const [hiddenCount, setHiddenCount] = useState(0);\n    const [isExpanded, setIsExpanded] = useState(false);\n    const translateCommon = useTranslateCommon();\n    const tagListId = useId();\n\n    const onResize = useCallback(() => {\n        const tagList = tagListRef.current;\n\n        if (tagList) {\n            const newHiddenCount = adaptChildren({\n                element: tagList,\n                isExpanded,\n                maxVisibleRows\n            });\n\n            setHiddenCount(newHiddenCount);\n\n            if (newHiddenCount === 0) {\n                setIsExpanded(false);\n            }\n        }\n    }, [tagListRef, maxVisibleRows, isExpanded, children.length]);\n\n    useResizeObserver({ref: tagListRef, onResize});\n\n    useEffect(() => {\n        document.fonts.ready.then(onResize);\n    }, []);\n\n    return (\n        <div className={classNames(`tag-group tag-group--${size}`, className)} ref={ref}>\n            <div className=\"tag-group__tags\" id={tagListId} ref={tagListRef} role=\"list\">\n                {content}\n            </div>\n            {hiddenCount > 0 && (\n                <Button\n                    aria-controls={tagListId}\n                    aria-expanded={isExpanded}\n                    onPress={() => setIsExpanded(!isExpanded)}\n                    size={size === Size.xs ? Size.sm : size}\n                    style={style === TagStyle.Outline ? ButtonStyle.Fill : ButtonStyle.Outline}\n                    variant={ButtonVariant.Neutral}>\n                    {isExpanded ? translateCommon('showLess') : `${translateCommon('show')} +${hiddenCount}`}\n                </Button>\n            )}\n        </div>\n    );\n}\n"]}