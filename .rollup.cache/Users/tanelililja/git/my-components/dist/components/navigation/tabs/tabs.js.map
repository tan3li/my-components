{"version":3,"file":"tabs.js","sourceRoot":"","sources":["../../../../src/components/navigation/tabs/tabs.tsx"],"names":[],"mappings":";;AAAA,OAAO,EACH,GAAG,IAAI,YAAY,EAEnB,OAAO,IAAI,gBAAgB,EAC3B,QAAQ,IAAI,iBAAiB,EAC7B,IAAI,IAAI,aAAa,EACxB,MAAM,uBAAuB,CAAC;AAE/B,OAAO,EAAC,IAAI,EAAC,MAAM,4BAA4B,CAAC;AAChD,OAAO,EAAC,KAAK,EAAC,MAAM,2BAA2B,CAAC;AAEhD,OAAO,EAAC,IAAI,EAAE,QAAQ,EAAC,MAAM,0BAA0B,CAAC;AACxD,OAAO,EAAC,KAAK,EAAE,UAAU,EAAE,YAAY,EAAC,MAAM,+BAA+B,CAAC;AAC9E,OAAO,EAAC,WAAW,EAAC,MAAM,mCAAmC,CAAC;AAC9D,OAAO,EAAC,SAAS,EAAC,MAAM,iCAAiC,CAAC;AAC1D,OAAO,EAAC,OAAO,EAAC,MAAM,sCAAsC,CAAC;AAe7D,MAAM,CAAN,IAAkB,QAGjB;AAHD,WAAkB,QAAQ;IACtB,yBAAa,CAAA;IACb,mCAAuB,CAAA;AAC3B,CAAC,EAHiB,QAAQ,KAAR,QAAQ,QAGzB;AAyBD,MAAM,UAAU,IAAI,CAAC,EAOT;IANR,IAAA,iBAA4B,EAA5B,SAAS,mBAAG,SAAS,CAAC,MAAM,KAAA,EAC5B,mBAAoC,EAApC,WAAW,mBAAG,WAAW,CAAC,UAAU,KAAA,EACpC,UAAU,gBAAA,EACV,QAAQ,cAAA,EACR,YAAyB,EAAzB,IAAI,mBAAG,QAAQ,CAAC,SAAS,KAAA,EACtB,KAAK,cANS,8DAOpB,CADW;IAER,IAAM,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,UAAU,EAAf,CAAe,CAAC,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,EAAE,EAAP,CAAO,CAAC,CAAC;IACvF,IAAM,oBAAoB,GAAG,IAAI,KAAK,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC;IAEhG,OAAO,CACH,MAAC,aAAa,eAAK,KAAK,IAAE,SAAS,EAAC,MAAM,EAAC,YAAY,EAAE,YAAY,EAAE,WAAW,EAAE,oBAAoB,iBACpG,KAAC,gBAAgB,aAAC,SAAS,EAAE,6BAAsB,SAAS,CAAE,gBACzD,QAAQ,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,OAAA,CACpB,KAAC,YAAY,aACT,SAAS,EAAE,mBAAY,IAAI,mBAAS,SAAS,CAAE,sBAC7B,oBAAoB,EACtC,EAAE,EAAE,IAAI,CAAC,EAAE,gBAEV,UAAC,EAAY;4BAAX,UAAU,gBAAA;wBAAM,OAAA,CACf,wBACI,SAAS,EAAE,yCAAkC,IAAI,8BAAoB,SAAS,CAAE,sBAC9D,oBAAoB,mBACvB,UAAU,IAAI,SAAS,iBACrC,IAAI,CAAC,QAAQ,IAAI,KAAC,IAAI,IAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC,EAAE,GAAI,EAClE,KAAC,KAAK,aAAC,IAAI,EAAE,IAAI,CAAC,EAAE,gBAAG,IAAI,CAAC,IAAI,IAAS,EACxC,IAAI,CAAC,SAAS,IAAI,CACf,KAAC,KAAK,aACF,UAAU,EAAE,CAAC,CAAC,KAAK,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,EACjD,KAAK,EAAE,UAAU,CAAC,OAAO,EACzB,OAAO,EAAE,YAAY,CAAC,OAAO,gBAC5B,IAAI,CAAC,SAAS,IACX,CACX,KACC,CACT;oBAhBkB,CAgBlB,KAjBI,aAAM,IAAI,CAAC,EAAE,CAAE,CAkBT,CAClB,EAxBuB,CAwBvB,CAAC,IACa,EACnB,KAAC,OAAO,IACJ,SAAS,EAAE,SAAS,CAAC,MAAM,EAC3B,SAAS,EAAE,qCAA8B,IAAI,CAAE,EAC/C,WAAW,EAAE,oBAAoB,EACjC,IAAI,EAAE,IAAI,KAAK,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,GACvD,EACD,UAAU,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,OAAA,CACtB,KAAC,iBAAiB,aAAC,SAAS,EAAE,uBAAgB,IAAI,CAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,gBAC5D,IAAI,CAAC,OAAO,KADuD,eAAQ,IAAI,CAAC,EAAE,CAAE,CAErE,CACvB,EAJyB,CAIzB,CAAC,KACU,CACnB,CAAC;AACN,CAAC","sourcesContent":["import {\n    Tab as ReactAriaTab,\n    TabsProps as ReactAriaTabsProps,\n    TabList as ReactAriaTabList,\n    TabPanel as ReactAriaTabPanel,\n    Tabs as ReactAriaTabs\n} from 'react-aria-components';\nimport {ReactNode, RefAttributes} from 'react';\nimport {Size} from '../../../constants/size.js';\nimport {Label} from '../../text/label/label.js';\nimport {IconName} from '../../media/icon/icons.js';\nimport {Icon, IconSize} from '../../media/icon/icon.js';\nimport {Badge, BadgeStyle, BadgeVariant} from '../../feedback/badge/badge.js';\nimport {Orientation} from '../../../constants/orientation.js';\nimport {Alignment} from '../../../constants/alignment.js';\nimport {Divider} from '../../datadisplay/divider/divider.js';\n\nexport interface PanelItem {\n    content: ReactNode;\n    id: string;\n}\n\nexport interface TabItem {\n    badgeText?: string;\n    iconName?: IconName;\n    id: string;\n    isDisabled?: boolean;\n    name: string;\n}\n\nexport const enum TabsType {\n    Card = 'card',\n    Underline = 'underline'\n}\n\nexport interface TabsProps extends ReactAriaTabsProps, RefAttributes<HTMLDivElement> {\n    /**\n     * Alignment of the tabs.\n     */\n    alignment?: Exclude<Alignment, 'end'>;\n    /**\n     * Orientation of the tabs. Vertical can only be used with underline.\n     */\n    orientation?: Orientation;\n    /**\n     * List of panel items.\n     */\n    panelItems: PanelItem[];\n    /**\n     * List of Tab items.\n     */\n    tabItems: TabItem[];\n    /**\n     * Type of the tabs\n     */\n    type?: TabsType;\n}\n\nexport function Tabs({\n    alignment = Alignment.center,\n    orientation = Orientation.horizontal,\n    panelItems,\n    tabItems,\n    type = TabsType.Underline,\n    ...props\n}: TabsProps) {\n    const disabledKeys = tabItems.filter((item) => item.isDisabled).map((item) => item.id);\n    const effectiveOrientation = type === TabsType.Underline ? orientation : Orientation.horizontal;\n\n    return (\n        <ReactAriaTabs {...props} className=\"tabs\" disabledKeys={disabledKeys} orientation={effectiveOrientation}>\n            <ReactAriaTabList className={`tab-list tab-list--${alignment}`}>\n                {tabItems.map((item) => (\n                    <ReactAriaTab\n                        className={`tab tab--${type} tab--${alignment}`}\n                        data-orientation={effectiveOrientation}\n                        id={item.id}\n                        key={`tab${item.id}`}>\n                        {({isSelected}) => (\n                            <div\n                                className={`tab__container tab__container--${type} tab__container--${alignment}`}\n                                data-orientation={effectiveOrientation}\n                                data-selected={isSelected || undefined}>\n                                {item.iconName && <Icon name={item.iconName} size={IconSize.MD} />}\n                                <Label size={Size.md}>{item.name}</Label>\n                                {item.badgeText && (\n                                    <Badge\n                                        isDisabled={!!props.isDisabled || item.isDisabled}\n                                        style={BadgeStyle.Outline}\n                                        variant={BadgeVariant.Neutral}>\n                                        {item.badgeText}\n                                    </Badge>\n                                )}\n                            </div>\n                        )}\n                    </ReactAriaTab>\n                ))}\n            </ReactAriaTabList>\n            <Divider\n                alignment={Alignment.center}\n                className={`tab__divider tab__divider--${type}`}\n                orientation={effectiveOrientation}\n                size={type === TabsType.Underline ? Size.md : Size.sm}\n            />\n            {panelItems.map((item) => (\n                <ReactAriaTabPanel className={`panel panel--${type}`} id={item.id} key={`panel${item.id}`}>\n                    {item.content}\n                </ReactAriaTabPanel>\n            ))}\n        </ReactAriaTabs>\n    );\n}\n"]}