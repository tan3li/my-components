{"version":3,"file":"pagination.js","sourceRoot":"","sources":["../../../../src/components/navigation/pagination/pagination.tsx"],"names":[],"mappings":"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","sourcesContent":["import {RefAttributes, useEffect, useMemo, useState} from 'react';\nimport {ButtonStyle, ButtonVariant, IconButton, MenuItem} from '../../action/index.js';\nimport {iconNames} from '../../media/index.js';\nimport {safeCall} from '../../../utils/functionhelper.js';\nimport {PageButton} from './pagebutton.js';\nimport {isString} from '../../../utils/stringhelper.js';\nimport {PageEllipsis} from './pageellipsis.js';\nimport {isNullOrUndefined, isNumber} from '../../../utils/objecthelper.js';\nimport {Label} from '../../text/index.js';\nimport {Size} from '../../../constants/index.js';\nimport {useTranslateCommon} from '../../../hooks/translations/usetranslatecommon.js';\nimport {Select} from '../../inputs/index.js';\nimport {Key} from 'react-aria-components';\nimport {classNames} from '../../../utils/classnames.js';\nimport {useTranslatePager} from '../../../hooks/translations/usetranslatepager.js';\n\nexport interface PaginationItemsPerPageOptions {\n    isVisible?: boolean;\n    showLabel?: boolean;\n}\n\nexport interface PaginationProps extends RefAttributes<HTMLDivElement> {\n    /**\n     * CSS class name for the element.\n     */\n    className?: string;\n    /**\n     * Number of pages. If not set, page count is calculated based on totalRowCount and pageSize.\n     */\n    count?: number;\n    /**\n     * Show pagination without the page items.\n     */\n    isMinimized?: boolean;\n    /**\n     * Options for items per page selection.\n     */\n    itemsPerPageOptions?: PaginationItemsPerPageOptions;\n    /**\n     * Callback called when selected page is changed.\n     */\n    onPageIndexChange?: (pageIndex: number) => void;\n    /**\n     * Callback called when page size is changed.\n     */\n    onPageSizeChange?: (pageSize: number) => void;\n    /**\n     * Index of the currently selected page. Indexing starts from 0.\n     */\n    pageIndex?: number;\n    /**\n     * Number of rows on a page. Used for calculating page count when count prop is not set.\n     */\n    pageSize?: number;\n    /**\n     * Selectable page sizes. If not given, defaults to 25, 50, 100, 200.\n     */\n    pageSizes?: number[];\n    /**\n     * Whether to show page items before row count info.\n     */\n    showPagesFirst?: boolean;\n    /**\n     * Total number of rows. Used for calculating page count when count prop is not set.\n     */\n    totalRowCount?: number;\n}\n\nfunction range(start: number, end: number) {\n    const length = end - start + 1;\n\n    return Array.from({length}, (_, i) => start + i);\n}\n\n// Same logic as in MUI Pagination component.\nfunction getPageItems(count: number, page: number) {\n    const boundaryCount = 1; // number of pages to display adjacent to start and end page\n    const siblingCount = 1; // number of pages to display either side of current page\n\n    const startPages = range(1, Math.min(boundaryCount, count));\n    const endPages = range(Math.max(count - boundaryCount + 1, boundaryCount + 1), count);\n\n    const siblingsStart = Math.max(\n        Math.min(\n            // Natural start\n            page - siblingCount,\n            // Lower boundary when page is high\n            count - boundaryCount - siblingCount * 2 - 1\n        ),\n        // Greater than startPages\n        boundaryCount + 2\n    );\n    const siblingsEnd = Math.min(\n        Math.max(\n            // Natural end\n            page + siblingCount,\n            // Upper boundary when page is low\n            boundaryCount + siblingCount * 2 + 2\n        ),\n        // Less than endPages\n        endPages.length > 0 ? endPages[0] - 2 : count - 1\n    );\n\n    // example: [1, 'start-ellipsis', 4, 5, 6, 'end-ellipsis', 10]\n    return [\n        ...startPages,\n\n        // Start ellipsis\n        // eslint-disable-next-line no-nested-ternary\n        ...(siblingsStart > boundaryCount + 2 ? ['start-ellipsis']\n        : boundaryCount + 1 < count - boundaryCount ? [boundaryCount + 1]\n        : []),\n\n        // Sibling pages\n        ...range(siblingsStart, siblingsEnd),\n\n        // End ellipsis\n        // eslint-disable-next-line no-nested-ternary\n        ...(siblingsEnd < count - boundaryCount - 1 ? ['end-ellipsis']\n        : count - boundaryCount > boundaryCount ? [count - boundaryCount]\n        : []),\n\n        ...endPages\n    ];\n}\n\nfunction getEllipsisItems(ellipsisIdx: number, pages: Array<number | string>) {\n    const items: MenuItem[] = [];\n    const firstHiddenPage = (pages[ellipsisIdx - 1] as number) + 1;\n    const lastHiddenPage = (pages[ellipsisIdx + 1] as number) - 1;\n\n    for (let i = firstHiddenPage; i <= lastHiddenPage; i++) {\n        items.push({\n            id: i,\n            name: i.toString()\n        });\n    }\n\n    return items;\n}\n\nfunction getPageCount(count?: number, totalRowCount?: number, rowsPerPage?: number) {\n    if (!isNullOrUndefined(count)) {\n        return count;\n    }\n\n    if (!isNullOrUndefined(totalRowCount) && !isNullOrUndefined(rowsPerPage)) {\n        return Math.ceil(totalRowCount / rowsPerPage);\n    }\n\n    return 0;\n}\n\nfunction getItemRange(page: number, pageSize: number, totalRowCount: number) {\n    return {\n        start: totalRowCount === 0 ? 0 : (page - 1) * pageSize + 1,\n        end: Math.min(totalRowCount, page * pageSize)\n    };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-magic-numbers\nconst DEFAULT_PAGE_SIZES = [25, 50, 100, 200];\n\nconst DEFAULT_ITEMS_PER_PAGE_OPTIONS = {\n    isVisible: true,\n    showLabel: true\n};\n\nfunction createPageSizeItems(pageSizes: number[]) {\n    return pageSizes.map((size) => ({value: size, text: size.toString()}));\n}\n\nexport function Pagination({\n    className,\n    count,\n    isMinimized,\n    itemsPerPageOptions: propsItemsPerPageOptions,\n    onPageIndexChange,\n    onPageSizeChange,\n    pageIndex,\n    pageSize,\n    pageSizes,\n    ref,\n    showPagesFirst,\n    totalRowCount\n}: PaginationProps) {\n    // pageIndex (from props): indexing starts from 0\n    // page (in state): indexing starts from 1\n    const itemsPerPageOptions = {...DEFAULT_ITEMS_PER_PAGE_OPTIONS, ...propsItemsPerPageOptions};\n    const pageSizeItems = useMemo(() => createPageSizeItems(pageSizes ?? DEFAULT_PAGE_SIZES), [pageSizes]);\n    const initialPage = isNullOrUndefined(pageIndex) ? 1 : pageIndex + 1;\n    const initialRowsPerPage = pageSize ?? pageSizeItems[0].value;\n    const [page, setPage] = useState<number>(initialPage);\n    const [rowsPerPage, setRowsPerPage] = useState<number>(initialRowsPerPage);\n    const pageCount = getPageCount(count, totalRowCount, rowsPerPage);\n    const itemRange =\n        !isNullOrUndefined(pageSize) && !isNullOrUndefined(totalRowCount) ?\n            getItemRange(page, pageSize, totalRowCount)\n        :   null;\n    const translateCommon = useTranslateCommon();\n    const translatePager = useTranslatePager();\n\n    const onPageChange = (newPage: number) => {\n        setPage(newPage);\n        safeCall(onPageIndexChange, newPage - 1);\n    };\n    const onRowsPagePageChange = (val: Key | null) => {\n        if (isNumber(val)) {\n            setRowsPerPage(val);\n            safeCall(onPageSizeChange, val);\n        }\n    };\n    const nextPage = () => {\n        if (page < pageCount) {\n            onPageChange(page + 1);\n        }\n    };\n    const prevPage = () => {\n        if (page > 1) {\n            onPageChange(page - 1);\n        }\n    };\n\n    useEffect(() => {\n        setPage(initialPage);\n    }, [initialPage]);\n    useEffect(() => {\n        setRowsPerPage(initialRowsPerPage);\n    }, [initialRowsPerPage]);\n\n    const itemsPerPageSelect =\n        isNullOrUndefined(pageSize) || !itemsPerPageOptions.isVisible ?\n            null\n        :   <div className=\"pagination__items-per-page\" key=\"items-per-page\">\n                {itemsPerPageOptions.showLabel && <Label size={Size.md}>{translateCommon('itemsPerPage')}</Label>}\n                <Select\n                    aria-label={translateCommon('itemsPerPage')}\n                    className=\"pagination__select\"\n                    isPlain={isMinimized}\n                    isSearchable={false}\n                    items={pageSizeItems}\n                    menuWidth=\"5rem\"\n                    onSelectionChange={onRowsPagePageChange}\n                    size={isMinimized ? Size.xs : Size.md}\n                    text={rowsPerPage.toString()}\n                    value={rowsPerPage}\n                />\n            </div>;\n\n    const itemRangeLabel =\n        itemRange ?\n            <Label className=\"pagination__item-range\" key=\"item-rang\" size={Size.md}>\n                {translatePager('resultsOf', {start: itemRange.start, end: itemRange.end, total: totalRowCount})}\n            </Label>\n        :   null;\n\n    const pageNavigation = (\n        <div\n            className={classNames('pagination__pages', {\n                'pagination__pages--minimized': isMinimized\n            })}\n            key=\"pages\">\n            <IconButton\n                aria-label={translateCommon('previousPage')}\n                className=\"pagination__prev-btn\"\n                iconName={iconNames.ChevronLeft}\n                isDisabled={page === 1}\n                onPress={prevPage}\n                style={ButtonStyle.Plain}\n                variant={ButtonVariant.Neutral}\n            />\n            {isMinimized ? null : (\n                getPageItems(pageCount, page).map((value, index, array) => {\n                    if (isString(value) && value.includes('ellipsis')) {\n                        return (\n                            <PageEllipsis\n                                items={getEllipsisItems(index, array)}\n                                key={value}\n                                onAction={(pageId) => onPageChange(pageId as number)}\n                            />\n                        );\n                    }\n\n                    return (\n                        <PageButton isActive={page === value} key={value} onPress={() => onPageChange(value as number)}>\n                            {value}\n                        </PageButton>\n                    );\n                })\n            )}\n            <IconButton\n                aria-label={translateCommon('nextPage')}\n                className=\"pagination__next-btn\"\n                iconName={iconNames.ChevronRight}\n                isDisabled={page === pageCount}\n                onPress={nextPage}\n                style={ButtonStyle.Plain}\n                variant={ButtonVariant.Neutral}\n            />\n        </div>\n    );\n\n    return (\n        <div\n            className={classNames('pagination', className, {\n                'pagination--minimized': isMinimized,\n                'pagination--reversed': showPagesFirst\n            })}\n            ref={ref}>\n            {(!!itemsPerPageSelect || !!itemRangeLabel) && (\n                <div\n                    className={classNames('pagination__row-count-info', {\n                        'pagination__row-count-info--minimized': isMinimized\n                    })}>\n                    {itemsPerPageSelect}\n                    {itemRangeLabel}\n                </div>\n            )}\n            {pageNavigation}\n        </div>\n    );\n}\n"]}