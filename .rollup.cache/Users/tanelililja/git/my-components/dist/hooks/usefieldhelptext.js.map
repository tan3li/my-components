{"version":3,"file":"usefieldhelptext.js","sourceRoot":"","sources":["../../src/hooks/usefieldhelptext.ts"],"names":[],"mappings":"AAEA,OAAO,EAAC,YAAY,EAAC,MAAM,mBAAmB,CAAC;AAC/C,OAAO,EAAC,SAAS,EAAC,MAAM,mBAAmB,CAAC;AAS5C;;GAEG;AACH,MAAM,UAAU,gBAAgB,CAAC,KAA6B;IACnD,IAAA,SAAS,GAA0C,KAAK,UAA/C,EAAE,QAAQ,GAAgC,KAAK,SAArC,EAAE,eAAe,GAAe,KAAK,gBAApB,EAAE,SAAS,GAAI,KAAK,UAAT,CAAU;IAC1D,IAAA,KAA2B,YAAY,CAAC,SAAS,EAAE,SAAS,CAAC,EAA5D,QAAQ,cAAA,EAAE,YAAY,kBAAsC,CAAC;IACpE,IAAI,WAAW,GAAG,QAAQ,CAAC;IAE3B,IAAI,QAAQ,EAAE;QACV,WAAW,GAAG,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,WAAW,CAAC;KAC3D;SAAM,IAAI,eAAe,EAAE;QACxB,WAAW,GAAG,eAAe,CAAC;KACjC;IAED,IAAM,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IAE1C,OAAO;QACH,UAAU,EAAE;YACR,kBAAkB,EAAE,MAAM,IAAI,SAAS;SAC1C;QACD,aAAa,EAAE;YACX,EAAE,EAAE,MAAM;SACb;KACJ,CAAC;AACN,CAAC","sourcesContent":["import {TDataState} from '../constants/datastate.js';\nimport {ReactNode} from 'react';\nimport {useDataState} from './usedatastate.js';\nimport {useSlotId} from '@react-aria/utils';\n\ninterface FieldWithHelpTextProps {\n    dataState?: Map<TDataState, string> | null;\n    helpText?: ReactNode;\n    helpTextSuccess?: ReactNode;\n    isInvalid?: boolean;\n}\n\n/**\n * Use for field components which do not pass id and aria-describedby via Reach Aria components.\n */\nexport function useFieldHelpText(props: FieldWithHelpTextProps) {\n    const {dataState, helpText, helpTextSuccess, isInvalid} = props;\n    const {hasError, errorMessage} = useDataState(dataState, isInvalid);\n    let helpContent = helpText;\n\n    if (hasError) {\n        helpContent = errorMessage ? errorMessage : helpContent;\n    } else if (helpTextSuccess) {\n        helpContent = helpTextSuccess;\n    }\n\n    const helpId = useSlotId([!!helpContent]);\n\n    return {\n        fieldProps: {\n            'aria-describedby': helpId || undefined\n        },\n        helpTextProps: {\n            id: helpId\n        }\n    };\n}\n"]}