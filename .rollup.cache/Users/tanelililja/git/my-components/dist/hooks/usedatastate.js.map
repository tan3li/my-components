{"version":3,"file":"usedatastate.js","sourceRoot":"","sources":["../../src/hooks/usedatastate.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,QAAQ,EAAC,MAAM,yBAAyB,CAAC;AACjD,OAAO,EAAC,SAAS,EAAa,MAAM,2BAA2B,CAAC;AAEhE,MAAM,UAAU,YAAY,CAAC,SAA0C,EAAE,SAAmB,EAAE,UAAoB;;IAC9G,OAAO;QACH,QAAQ,EAAE,CAAC,CAAC,SAAS,IAAI,QAAQ,CAAC,SAAS,EAAE,SAAS,CAAC,KAAK,CAAC;QAC7D,YAAY,EAAE,MAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,mCAAI,EAAE;QACnD,UAAU,EAAE,CAAC,CAAC,UAAU,IAAI,QAAQ,CAAC,SAAS,EAAE,SAAS,CAAC,OAAO,CAAC;KACrE,CAAC;AACN,CAAC","sourcesContent":["import {hasState} from '../utils/statehelper.js';\nimport {DataState, TDataState} from '../constants/datastate.js';\n\nexport function useDataState(dataState?: Map<TDataState, string> | null, isInvalid?: boolean, isReadOnly?: boolean) {\n    return {\n        hasError: !!isInvalid || hasState(dataState, DataState.ERROR),\n        errorMessage: dataState?.get(DataState.ERROR) ?? '',\n        isReadOnly: !!isReadOnly || hasState(dataState, DataState.LOADING)\n    };\n}\n"]}