{"version":3,"file":"useanimationframe.js","sourceRoot":"","sources":["../../src/hooks/useanimationframe.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAE,MAAM,EAAC,MAAM,OAAO,CAAC;AAExC,MAAM,UAAU,iBAAiB,CAAC,yBAAiD,EAAE,aAAoB;IAApB,8BAAA,EAAA,oBAAoB;IACrG,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAExB,IAAM,OAAO,GAAG,UAAC,IAAY;QACzB,yBAAyB,CAAC,IAAI,CAAC,CAAC;QAChC,KAAK,CAAC,OAAO,GAAG,qBAAqB,CAAC,OAAO,CAAC,CAAC;IACnD,CAAC,CAAC;IAEF,SAAS,CAAC;QACN,IAAI,aAAa,EAAE;YACf,KAAK,CAAC,OAAO,GAAG,qBAAqB,CAAC,OAAO,CAAC,CAAC;SAClD;aAAM;YACH,oBAAoB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SACvC;QAED,OAAO,cAAM,OAAA,oBAAoB,CAAC,KAAK,CAAC,OAAO,CAAC,EAAnC,CAAmC,CAAC;IACrD,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC;AACxB,CAAC","sourcesContent":["import {useEffect, useRef} from 'react';\n\nexport function useAnimationFrame(nextAnimationFrameHandler: (time: number) => void, shouldAnimate = true) {\n    const frame = useRef(0);\n\n    const animate = (time: number) => {\n        nextAnimationFrameHandler(time);\n        frame.current = requestAnimationFrame(animate);\n    };\n\n    useEffect(() => {\n        if (shouldAnimate) {\n            frame.current = requestAnimationFrame(animate);\n        } else {\n            cancelAnimationFrame(frame.current);\n        }\n\n        return () => cancelAnimationFrame(frame.current);\n    }, [shouldAnimate]);\n}\n"]}